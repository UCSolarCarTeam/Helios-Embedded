ARM GAS  /tmp/cct1aMMM.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l1xx_hal_timebase_tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_InitTick,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_InitTick
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_InitTick:
  24              	.LFB72:
  25              		.file 1 "Core/Src/stm32l1xx_hal_timebase_tim.c"
   1:Core/Src/stm32l1xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l1xx_hal_timebase_tim.c **** /**
   3:Core/Src/stm32l1xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @file    stm32l1xx_hal_timebase_TIM.c
   5:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Core/Src/stm32l1xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @attention
   8:Core/Src/stm32l1xx_hal_timebase_tim.c ****   *
   9:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * All rights reserved.
  11:Core/Src/stm32l1xx_hal_timebase_tim.c ****   *
  12:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * in the root directory of this software component.
  14:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32l1xx_hal_timebase_tim.c ****   *
  16:Core/Src/stm32l1xx_hal_timebase_tim.c ****   ******************************************************************************
  17:Core/Src/stm32l1xx_hal_timebase_tim.c ****   */
  18:Core/Src/stm32l1xx_hal_timebase_tim.c **** /* USER CODE END Header */
  19:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  20:Core/Src/stm32l1xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32l1xx_hal_timebase_tim.c **** #include "stm32l1xx_hal.h"
  22:Core/Src/stm32l1xx_hal_timebase_tim.c **** #include "stm32l1xx_hal_tim.h"
  23:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  24:Core/Src/stm32l1xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  25:Core/Src/stm32l1xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  26:Core/Src/stm32l1xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  27:Core/Src/stm32l1xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  28:Core/Src/stm32l1xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim2;
  29:Core/Src/stm32l1xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  30:Core/Src/stm32l1xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  31:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  32:Core/Src/stm32l1xx_hal_timebase_tim.c **** /**
  33:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM2 as a time base source.
ARM GAS  /tmp/cct1aMMM.s 			page 2


  34:Core/Src/stm32l1xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  35:Core/Src/stm32l1xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  36:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  37:Core/Src/stm32l1xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  38:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  39:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @retval HAL status
  40:Core/Src/stm32l1xx_hal_timebase_tim.c ****   */
  41:Core/Src/stm32l1xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  42:Core/Src/stm32l1xx_hal_timebase_tim.c **** {
  26              		.loc 1 42 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  40 0004 0446     		mov	r4, r0
  41              	.LVL1:
  42              	.LBB2:
  43:Core/Src/stm32l1xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  44:Core/Src/stm32l1xx_hal_timebase_tim.c ****   uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
  45:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  46:Core/Src/stm32l1xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0U;
  47:Core/Src/stm32l1xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  48:Core/Src/stm32l1xx_hal_timebase_tim.c ****   HAL_StatusTypeDef     status = HAL_OK;
  49:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  50:Core/Src/stm32l1xx_hal_timebase_tim.c ****   /* Enable TIM2 clock */
  51:Core/Src/stm32l1xx_hal_timebase_tim.c ****   __HAL_RCC_TIM2_CLK_ENABLE();
  43              		.loc 1 51 0
  44 0006 214B     		ldr	r3, .L9
  45 0008 5A6A     		ldr	r2, [r3, #36]
  46 000a 42F00102 		orr	r2, r2, #1
  47 000e 5A62     		str	r2, [r3, #36]
  48 0010 5B6A     		ldr	r3, [r3, #36]
  49 0012 03F00103 		and	r3, r3, #1
  50 0016 0193     		str	r3, [sp, #4]
  51 0018 019B     		ldr	r3, [sp, #4]
  52              	.LBE2:
  52:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  53:Core/Src/stm32l1xx_hal_timebase_tim.c ****   /* Get clock configuration */
  54:Core/Src/stm32l1xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  53              		.loc 1 54 0
  54 001a 02A9     		add	r1, sp, #8
  55 001c 03A8     		add	r0, sp, #12
  56              	.LVL2:
  57 001e FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  58              	.LVL3:
  55:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  56:Core/Src/stm32l1xx_hal_timebase_tim.c ****   /* Get APB1 prescaler */
  57:Core/Src/stm32l1xx_hal_timebase_tim.c ****   uwAPB1Prescaler = clkconfig.APB1CLKDivider;
ARM GAS  /tmp/cct1aMMM.s 			page 3


  59              		.loc 1 57 0
  60 0022 069B     		ldr	r3, [sp, #24]
  61              	.LVL4:
  58:Core/Src/stm32l1xx_hal_timebase_tim.c ****   /* Compute TIM2 clock */
  59:Core/Src/stm32l1xx_hal_timebase_tim.c ****   if (uwAPB1Prescaler == RCC_HCLK_DIV1)
  62              		.loc 1 59 0
  63 0024 C3B9     		cbnz	r3, .L2
  60:Core/Src/stm32l1xx_hal_timebase_tim.c ****   {
  61:Core/Src/stm32l1xx_hal_timebase_tim.c ****     uwTimclock = HAL_RCC_GetPCLK1Freq();
  64              		.loc 1 61 0
  65 0026 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  66              	.LVL5:
  67              	.L3:
  62:Core/Src/stm32l1xx_hal_timebase_tim.c ****   }
  63:Core/Src/stm32l1xx_hal_timebase_tim.c ****   else
  64:Core/Src/stm32l1xx_hal_timebase_tim.c ****   {
  65:Core/Src/stm32l1xx_hal_timebase_tim.c ****     uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  66:Core/Src/stm32l1xx_hal_timebase_tim.c ****   }
  67:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  68:Core/Src/stm32l1xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM2 counter clock equal to 1MHz */
  69:Core/Src/stm32l1xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  68              		.loc 1 69 0
  69 002a 194B     		ldr	r3, .L9+4
  70 002c A3FB0023 		umull	r2, r3, r3, r0
  71 0030 9B0C     		lsrs	r3, r3, #18
  72 0032 013B     		subs	r3, r3, #1
  73              	.LVL6:
  70:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  71:Core/Src/stm32l1xx_hal_timebase_tim.c ****   /* Initialize TIM2 */
  72:Core/Src/stm32l1xx_hal_timebase_tim.c ****   htim2.Instance = TIM2;
  74              		.loc 1 72 0
  75 0034 1748     		ldr	r0, .L9+8
  76              	.LVL7:
  77 0036 4FF08042 		mov	r2, #1073741824
  78 003a 0260     		str	r2, [r0]
  73:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  74:Core/Src/stm32l1xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  75:Core/Src/stm32l1xx_hal_timebase_tim.c ****   + Period = [(TIM2CLK/1000) - 1]. to have a (1/1000) s time base.
  76:Core/Src/stm32l1xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  77:Core/Src/stm32l1xx_hal_timebase_tim.c ****   + ClockDivision = 0
  78:Core/Src/stm32l1xx_hal_timebase_tim.c ****   + Counter direction = Up
  79:Core/Src/stm32l1xx_hal_timebase_tim.c ****   */
  80:Core/Src/stm32l1xx_hal_timebase_tim.c ****   htim2.Init.Period = (1000000U / 1000U) - 1U;
  79              		.loc 1 80 0
  80 003c 40F2E732 		movw	r2, #999
  81 0040 C260     		str	r2, [r0, #12]
  81:Core/Src/stm32l1xx_hal_timebase_tim.c ****   htim2.Init.Prescaler = uwPrescalerValue;
  82              		.loc 1 81 0
  83 0042 4360     		str	r3, [r0, #4]
  82:Core/Src/stm32l1xx_hal_timebase_tim.c ****   htim2.Init.ClockDivision = 0;
  84              		.loc 1 82 0
  85 0044 0023     		movs	r3, #0
  86              	.LVL8:
  87 0046 0361     		str	r3, [r0, #16]
  83:Core/Src/stm32l1xx_hal_timebase_tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  88              		.loc 1 83 0
  89 0048 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/cct1aMMM.s 			page 4


  84:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
  85:Core/Src/stm32l1xx_hal_timebase_tim.c ****   status = HAL_TIM_Base_Init(&htim2);
  90              		.loc 1 85 0
  91 004a FFF7FEFF 		bl	HAL_TIM_Base_Init
  92              	.LVL9:
  86:Core/Src/stm32l1xx_hal_timebase_tim.c ****   if (status == HAL_OK)
  93              		.loc 1 86 0
  94 004e 0546     		mov	r5, r0
  95 0050 30B1     		cbz	r0, .L7
  96              	.LVL10:
  97              	.L4:
  87:Core/Src/stm32l1xx_hal_timebase_tim.c ****   {
  88:Core/Src/stm32l1xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  89:Core/Src/stm32l1xx_hal_timebase_tim.c ****     status = HAL_TIM_Base_Start_IT(&htim2);
  90:Core/Src/stm32l1xx_hal_timebase_tim.c ****     if (status == HAL_OK)
  91:Core/Src/stm32l1xx_hal_timebase_tim.c ****     {
  92:Core/Src/stm32l1xx_hal_timebase_tim.c ****     /* Enable the TIM2 global Interrupt */
  93:Core/Src/stm32l1xx_hal_timebase_tim.c ****         HAL_NVIC_EnableIRQ(TIM2_IRQn);
  94:Core/Src/stm32l1xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
  95:Core/Src/stm32l1xx_hal_timebase_tim.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
  96:Core/Src/stm32l1xx_hal_timebase_tim.c ****       {
  97:Core/Src/stm32l1xx_hal_timebase_tim.c ****         /* Configure the TIM IRQ priority */
  98:Core/Src/stm32l1xx_hal_timebase_tim.c ****         HAL_NVIC_SetPriority(TIM2_IRQn, TickPriority, 0U);
  99:Core/Src/stm32l1xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
 100:Core/Src/stm32l1xx_hal_timebase_tim.c ****       }
 101:Core/Src/stm32l1xx_hal_timebase_tim.c ****       else
 102:Core/Src/stm32l1xx_hal_timebase_tim.c ****       {
 103:Core/Src/stm32l1xx_hal_timebase_tim.c ****         status = HAL_ERROR;
 104:Core/Src/stm32l1xx_hal_timebase_tim.c ****       }
 105:Core/Src/stm32l1xx_hal_timebase_tim.c ****     }
 106:Core/Src/stm32l1xx_hal_timebase_tim.c ****   }
 107:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
 108:Core/Src/stm32l1xx_hal_timebase_tim.c ****  /* Return function status */
 109:Core/Src/stm32l1xx_hal_timebase_tim.c ****   return status;
 110:Core/Src/stm32l1xx_hal_timebase_tim.c **** }
  98              		.loc 1 110 0
  99 0052 2846     		mov	r0, r5
 100 0054 09B0     		add	sp, sp, #36
 101              	.LCFI2:
 102              		.cfi_remember_state
 103              		.cfi_def_cfa_offset 12
 104              		@ sp needed
 105 0056 30BD     		pop	{r4, r5, pc}
 106              	.LVL11:
 107              	.L2:
 108              	.LCFI3:
 109              		.cfi_restore_state
  65:Core/Src/stm32l1xx_hal_timebase_tim.c ****   }
 110              		.loc 1 65 0
 111 0058 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 112              	.LVL12:
 113 005c 4000     		lsls	r0, r0, #1
 114              	.LVL13:
 115 005e E4E7     		b	.L3
 116              	.LVL14:
 117              	.L7:
  89:Core/Src/stm32l1xx_hal_timebase_tim.c ****     if (status == HAL_OK)
ARM GAS  /tmp/cct1aMMM.s 			page 5


 118              		.loc 1 89 0
 119 0060 0C48     		ldr	r0, .L9+8
 120              	.LVL15:
 121 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 122              	.LVL16:
  90:Core/Src/stm32l1xx_hal_timebase_tim.c ****     {
 123              		.loc 1 90 0
 124 0066 0546     		mov	r5, r0
 125 0068 0028     		cmp	r0, #0
 126 006a F2D1     		bne	.L4
  93:Core/Src/stm32l1xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
 127              		.loc 1 93 0
 128 006c 1C20     		movs	r0, #28
 129              	.LVL17:
 130 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 131              	.LVL18:
  95:Core/Src/stm32l1xx_hal_timebase_tim.c ****       {
 132              		.loc 1 95 0
 133 0072 0F2C     		cmp	r4, #15
 134 0074 01D9     		bls	.L8
 103:Core/Src/stm32l1xx_hal_timebase_tim.c ****       }
 135              		.loc 1 103 0
 136 0076 0125     		movs	r5, #1
 137 0078 EBE7     		b	.L4
 138              	.L8:
  98:Core/Src/stm32l1xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
 139              		.loc 1 98 0
 140 007a 0022     		movs	r2, #0
 141 007c 2146     		mov	r1, r4
 142 007e 1C20     		movs	r0, #28
 143 0080 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 144              	.LVL19:
  99:Core/Src/stm32l1xx_hal_timebase_tim.c ****       }
 145              		.loc 1 99 0
 146 0084 044B     		ldr	r3, .L9+12
 147 0086 1C60     		str	r4, [r3]
 148 0088 E3E7     		b	.L4
 149              	.L10:
 150 008a 00BF     		.align	2
 151              	.L9:
 152 008c 00380240 		.word	1073887232
 153 0090 83DE1B43 		.word	1125899907
 154 0094 00000000 		.word	htim2
 155 0098 00000000 		.word	uwTickPrio
 156              		.cfi_endproc
 157              	.LFE72:
 159              		.section	.text.HAL_SuspendTick,"ax",%progbits
 160              		.align	1
 161              		.global	HAL_SuspendTick
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	HAL_SuspendTick:
 168              	.LFB73:
 111:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
 112:Core/Src/stm32l1xx_hal_timebase_tim.c **** /**
ARM GAS  /tmp/cct1aMMM.s 			page 6


 113:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 114:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM2 update interrupt.
 115:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @param  None
 116:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @retval None
 117:Core/Src/stm32l1xx_hal_timebase_tim.c ****   */
 118:Core/Src/stm32l1xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 119:Core/Src/stm32l1xx_hal_timebase_tim.c **** {
 169              		.loc 1 119 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 120:Core/Src/stm32l1xx_hal_timebase_tim.c ****   /* Disable TIM2 update Interrupt */
 121:Core/Src/stm32l1xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim2, TIM_IT_UPDATE);
 174              		.loc 1 121 0
 175 0000 034B     		ldr	r3, .L12
 176 0002 1A68     		ldr	r2, [r3]
 177 0004 D368     		ldr	r3, [r2, #12]
 178 0006 23F00103 		bic	r3, r3, #1
 179 000a D360     		str	r3, [r2, #12]
 180 000c 7047     		bx	lr
 181              	.L13:
 182 000e 00BF     		.align	2
 183              	.L12:
 184 0010 00000000 		.word	htim2
 185              		.cfi_endproc
 186              	.LFE73:
 188              		.section	.text.HAL_ResumeTick,"ax",%progbits
 189              		.align	1
 190              		.global	HAL_ResumeTick
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu softvfp
 196              	HAL_ResumeTick:
 197              	.LFB74:
 122:Core/Src/stm32l1xx_hal_timebase_tim.c **** }
 123:Core/Src/stm32l1xx_hal_timebase_tim.c **** 
 124:Core/Src/stm32l1xx_hal_timebase_tim.c **** /**
 125:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 126:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM2 update interrupt.
 127:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @param  None
 128:Core/Src/stm32l1xx_hal_timebase_tim.c ****   * @retval None
 129:Core/Src/stm32l1xx_hal_timebase_tim.c ****   */
 130:Core/Src/stm32l1xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 131:Core/Src/stm32l1xx_hal_timebase_tim.c **** {
 198              		.loc 1 131 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 132:Core/Src/stm32l1xx_hal_timebase_tim.c ****   /* Enable TIM2 Update interrupt */
 133:Core/Src/stm32l1xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim2, TIM_IT_UPDATE);
 203              		.loc 1 133 0
 204 0000 034B     		ldr	r3, .L15
 205 0002 1A68     		ldr	r2, [r3]
 206 0004 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/cct1aMMM.s 			page 7


 207 0006 43F00103 		orr	r3, r3, #1
 208 000a D360     		str	r3, [r2, #12]
 209 000c 7047     		bx	lr
 210              	.L16:
 211 000e 00BF     		.align	2
 212              	.L15:
 213 0010 00000000 		.word	htim2
 214              		.cfi_endproc
 215              	.LFE74:
 217              		.comm	htim2,64,4
 218              		.text
 219              	.Letext0:
 220              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 221              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 222              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 223              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 224              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xe.h"
 225              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 226              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_rcc.h"
 227              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 228              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_tim.h"
 229              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
 230              		.file 12 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_cortex.h"
ARM GAS  /tmp/cct1aMMM.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_hal_timebase_tim.c
     /tmp/cct1aMMM.s:16     .text.HAL_InitTick:0000000000000000 $t
     /tmp/cct1aMMM.s:23     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cct1aMMM.s:152    .text.HAL_InitTick:000000000000008c $d
                            *COM*:0000000000000040 htim2
     /tmp/cct1aMMM.s:160    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cct1aMMM.s:167    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cct1aMMM.s:184    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/cct1aMMM.s:189    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cct1aMMM.s:196    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cct1aMMM.s:213    .text.HAL_ResumeTick:0000000000000010 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
uwTickPrio
