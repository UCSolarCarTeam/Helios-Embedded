ARM GAS  /tmp/ccaXlyI0.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB72:
  25              		.file 1 "Core/Src/stm32l1xx_it.c"
   1:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l1xx_it.c **** /**
   3:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l1xx_it.c ****   * @file    stm32l1xx_it.c
   5:Core/Src/stm32l1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l1xx_it.c ****   * @attention
   8:Core/Src/stm32l1xx_it.c ****   *
   9:Core/Src/stm32l1xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32l1xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32l1xx_it.c ****   *
  12:Core/Src/stm32l1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32l1xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32l1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32l1xx_it.c ****   *
  16:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32l1xx_it.c ****   */
  18:Core/Src/stm32l1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32l1xx_it.c **** 
  20:Core/Src/stm32l1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32l1xx_it.c **** #include "main.h"
  22:Core/Src/stm32l1xx_it.c **** #include "stm32l1xx_it.h"
  23:Core/Src/stm32l1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32l1xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32l1xx_it.c **** 
  27:Core/Src/stm32l1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32l1xx_it.c **** 
  30:Core/Src/stm32l1xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32l1xx_it.c **** 
  32:Core/Src/stm32l1xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccaXlyI0.s 			page 2


  34:Core/Src/stm32l1xx_it.c **** 
  35:Core/Src/stm32l1xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32l1xx_it.c **** 
  37:Core/Src/stm32l1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32l1xx_it.c **** 
  40:Core/Src/stm32l1xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32l1xx_it.c **** 
  42:Core/Src/stm32l1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32l1xx_it.c **** 
  45:Core/Src/stm32l1xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32l1xx_it.c **** 
  47:Core/Src/stm32l1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32l1xx_it.c **** 
  50:Core/Src/stm32l1xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32l1xx_it.c **** 
  52:Core/Src/stm32l1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32l1xx_it.c **** 
  55:Core/Src/stm32l1xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32l1xx_it.c **** 
  57:Core/Src/stm32l1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32l1xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  59:Core/Src/stm32l1xx_it.c **** extern TIM_HandleTypeDef htim2;
  60:Core/Src/stm32l1xx_it.c **** 
  61:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32l1xx_it.c **** 
  63:Core/Src/stm32l1xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32l1xx_it.c **** 
  65:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32l1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32l1xx_it.c **** /**
  69:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32l1xx_it.c ****   */
  71:Core/Src/stm32l1xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32l1xx_it.c **** {
  26              		.loc 1 72 0
  27              		.cfi_startproc
  28              		@ Volatile: function does not return.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.L2:
  33 0000 FEE7     		b	.L2
  34              		.cfi_endproc
  35              	.LFE72:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
ARM GAS  /tmp/ccaXlyI0.s 			page 3


  46              	.LFB73:
  73:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32l1xx_it.c **** 
  75:Core/Src/stm32l1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Core/Src/stm32l1xx_it.c ****   while (1)
  78:Core/Src/stm32l1xx_it.c ****   {
  79:Core/Src/stm32l1xx_it.c ****   }
  80:Core/Src/stm32l1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32l1xx_it.c **** }
  82:Core/Src/stm32l1xx_it.c **** 
  83:Core/Src/stm32l1xx_it.c **** /**
  84:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32l1xx_it.c ****   */
  86:Core/Src/stm32l1xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32l1xx_it.c **** {
  47              		.loc 1 87 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L4:
  54 0000 FEE7     		b	.L4
  55              		.cfi_endproc
  56              	.LFE73:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu softvfp
  66              	MemManage_Handler:
  67              	.LFB74:
  88:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32l1xx_it.c **** 
  90:Core/Src/stm32l1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32l1xx_it.c ****   while (1)
  92:Core/Src/stm32l1xx_it.c ****   {
  93:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32l1xx_it.c ****   }
  96:Core/Src/stm32l1xx_it.c **** }
  97:Core/Src/stm32l1xx_it.c **** 
  98:Core/Src/stm32l1xx_it.c **** /**
  99:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Memory management fault.
 100:Core/Src/stm32l1xx_it.c ****   */
 101:Core/Src/stm32l1xx_it.c **** void MemManage_Handler(void)
 102:Core/Src/stm32l1xx_it.c **** {
  68              		.loc 1 102 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L6:
ARM GAS  /tmp/ccaXlyI0.s 			page 4


  75 0000 FEE7     		b	.L6
  76              		.cfi_endproc
  77              	.LFE74:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	BusFault_Handler:
  88              	.LFB75:
 103:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Core/Src/stm32l1xx_it.c **** 
 105:Core/Src/stm32l1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Core/Src/stm32l1xx_it.c ****   while (1)
 107:Core/Src/stm32l1xx_it.c ****   {
 108:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32l1xx_it.c ****   }
 111:Core/Src/stm32l1xx_it.c **** }
 112:Core/Src/stm32l1xx_it.c **** 
 113:Core/Src/stm32l1xx_it.c **** /**
 114:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 115:Core/Src/stm32l1xx_it.c ****   */
 116:Core/Src/stm32l1xx_it.c **** void BusFault_Handler(void)
 117:Core/Src/stm32l1xx_it.c **** {
  89              		.loc 1 117 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L8:
  96 0000 FEE7     		b	.L8
  97              		.cfi_endproc
  98              	.LFE75:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu softvfp
 108              	UsageFault_Handler:
 109              	.LFB76:
 118:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Core/Src/stm32l1xx_it.c **** 
 120:Core/Src/stm32l1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Core/Src/stm32l1xx_it.c ****   while (1)
 122:Core/Src/stm32l1xx_it.c ****   {
 123:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Core/Src/stm32l1xx_it.c ****   }
 126:Core/Src/stm32l1xx_it.c **** }
 127:Core/Src/stm32l1xx_it.c **** 
 128:Core/Src/stm32l1xx_it.c **** /**
ARM GAS  /tmp/ccaXlyI0.s 			page 5


 129:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Core/Src/stm32l1xx_it.c ****   */
 131:Core/Src/stm32l1xx_it.c **** void UsageFault_Handler(void)
 132:Core/Src/stm32l1xx_it.c **** {
 110              		.loc 1 132 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L10:
 117 0000 FEE7     		b	.L10
 118              		.cfi_endproc
 119              	.LFE76:
 121              		.section	.text.DebugMon_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	DebugMon_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	DebugMon_Handler:
 130              	.LFB77:
 133:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Core/Src/stm32l1xx_it.c **** 
 135:Core/Src/stm32l1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Core/Src/stm32l1xx_it.c ****   while (1)
 137:Core/Src/stm32l1xx_it.c ****   {
 138:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32l1xx_it.c ****   }
 141:Core/Src/stm32l1xx_it.c **** }
 142:Core/Src/stm32l1xx_it.c **** 
 143:Core/Src/stm32l1xx_it.c **** /**
 144:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Debug monitor.
 145:Core/Src/stm32l1xx_it.c ****   */
 146:Core/Src/stm32l1xx_it.c **** void DebugMon_Handler(void)
 147:Core/Src/stm32l1xx_it.c **** {
 131              		.loc 1 147 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE77:
 140              		.section	.text.USB_LP_IRQHandler,"ax",%progbits
 141              		.align	1
 142              		.global	USB_LP_IRQHandler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	USB_LP_IRQHandler:
 149              	.LFB78:
 148:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 149:Core/Src/stm32l1xx_it.c **** 
ARM GAS  /tmp/ccaXlyI0.s 			page 6


 150:Core/Src/stm32l1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 151:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 152:Core/Src/stm32l1xx_it.c **** 
 153:Core/Src/stm32l1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 154:Core/Src/stm32l1xx_it.c **** }
 155:Core/Src/stm32l1xx_it.c **** 
 156:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
 157:Core/Src/stm32l1xx_it.c **** /* STM32L1xx Peripheral Interrupt Handlers                                    */
 158:Core/Src/stm32l1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 159:Core/Src/stm32l1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 160:Core/Src/stm32l1xx_it.c **** /* please refer to the startup file (startup_stm32l1xx.s).                    */
 161:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
 162:Core/Src/stm32l1xx_it.c **** 
 163:Core/Src/stm32l1xx_it.c **** /**
 164:Core/Src/stm32l1xx_it.c ****   * @brief This function handles USB low priority interrupt.
 165:Core/Src/stm32l1xx_it.c ****   */
 166:Core/Src/stm32l1xx_it.c **** void USB_LP_IRQHandler(void)
 167:Core/Src/stm32l1xx_it.c **** {
 150              		.loc 1 167 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 167 0
 155 0000 08B5     		push	{r3, lr}
 156              	.LCFI0:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 3, -8
 159              		.cfi_offset 14, -4
 168:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN USB_LP_IRQn 0 */
 169:Core/Src/stm32l1xx_it.c **** 
 170:Core/Src/stm32l1xx_it.c ****   /* USER CODE END USB_LP_IRQn 0 */
 171:Core/Src/stm32l1xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 160              		.loc 1 171 0
 161 0002 0248     		ldr	r0, .L14
 162 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 163              	.LVL0:
 164 0008 08BD     		pop	{r3, pc}
 165              	.L15:
 166 000a 00BF     		.align	2
 167              	.L14:
 168 000c 00000000 		.word	hpcd_USB_FS
 169              		.cfi_endproc
 170              	.LFE78:
 172              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 173              		.align	1
 174              		.global	TIM2_IRQHandler
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu softvfp
 180              	TIM2_IRQHandler:
 181              	.LFB79:
 172:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN USB_LP_IRQn 1 */
 173:Core/Src/stm32l1xx_it.c **** 
 174:Core/Src/stm32l1xx_it.c ****   /* USER CODE END USB_LP_IRQn 1 */
 175:Core/Src/stm32l1xx_it.c **** }
 176:Core/Src/stm32l1xx_it.c **** 
ARM GAS  /tmp/ccaXlyI0.s 			page 7


 177:Core/Src/stm32l1xx_it.c **** /**
 178:Core/Src/stm32l1xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 179:Core/Src/stm32l1xx_it.c ****   */
 180:Core/Src/stm32l1xx_it.c **** void TIM2_IRQHandler(void)
 181:Core/Src/stm32l1xx_it.c **** {
 182              		.loc 1 181 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186 0000 08B5     		push	{r3, lr}
 187              	.LCFI1:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 3, -8
 190              		.cfi_offset 14, -4
 182:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 183:Core/Src/stm32l1xx_it.c **** 
 184:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 185:Core/Src/stm32l1xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 191              		.loc 1 185 0
 192 0002 0248     		ldr	r0, .L18
 193 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 194              	.LVL1:
 195 0008 08BD     		pop	{r3, pc}
 196              	.L19:
 197 000a 00BF     		.align	2
 198              	.L18:
 199 000c 00000000 		.word	htim2
 200              		.cfi_endproc
 201              	.LFE79:
 203              		.text
 204              	.Letext0:
 205              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 206              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 207              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 208              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 209              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xe.h"
 210              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 211              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 212              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_tim.h"
 213              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_usb.h"
 214              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_pcd.h"
 215              		.file 12 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
ARM GAS  /tmp/ccaXlyI0.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_it.c
     /tmp/ccaXlyI0.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccaXlyI0.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccaXlyI0.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccaXlyI0.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccaXlyI0.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccaXlyI0.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccaXlyI0.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccaXlyI0.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccaXlyI0.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccaXlyI0.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccaXlyI0.s:122    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccaXlyI0.s:129    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccaXlyI0.s:141    .text.USB_LP_IRQHandler:0000000000000000 $t
     /tmp/ccaXlyI0.s:148    .text.USB_LP_IRQHandler:0000000000000000 USB_LP_IRQHandler
     /tmp/ccaXlyI0.s:168    .text.USB_LP_IRQHandler:000000000000000c $d
     /tmp/ccaXlyI0.s:173    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccaXlyI0.s:180    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccaXlyI0.s:199    .text.TIM2_IRQHandler:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_PCD_IRQHandler
hpcd_USB_FS
HAL_TIM_IRQHandler
htim2
