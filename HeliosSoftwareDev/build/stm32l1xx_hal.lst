ARM GAS  /tmp/cc25CREp.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l1xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB74:
  25              		.file 1 "Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c"
   1:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @file    stm32l1xx_hal.c
   4:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
   8:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   @verbatim
   9:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ==============================================================================
  10:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]
  13:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]
  16:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  20:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   @endverbatim
  21:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @attention
  23:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  24:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  27:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  32:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
ARM GAS  /tmp/cc25CREp.s 			page 2


  34:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  35:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #include "stm32l1xx_hal.h"
  37:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  38:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @addtogroup STM32L1xx_HAL_Driver
  39:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  40:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  41:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  42:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  45:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  46:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  47:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  49:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  52:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Private_Defines HAL Private Defines
  53:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  54:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  55:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  56:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
  57:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  * @brief STM32L1xx HAL Driver version number V1.4.4
  58:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    */
  59:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  60:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_SUB1   (0x04) /*!< [23:16] sub1 version */
  61:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_SUB2   (0x04) /*!< [15:8]  sub2 version */
  62:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */
  63:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION         ((__STM32L1xx_HAL_VERSION_MAIN << 24)\
  64:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                                         |(__STM32L1xx_HAL_VERSION_SUB1 << 16)\
  65:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                                         |(__STM32L1xx_HAL_VERSION_SUB2 << 8 )\
  66:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                                         |(__STM32L1xx_HAL_VERSION_RC))
  67:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  68:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  69:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  70:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
  71:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
  72:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  73:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  74:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  75:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  76:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  77:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  78:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  79:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  80:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  81:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  82:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  83:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t uwTickPrio = (1UL << __NVIC_PRIO_BITS); /* Invalid priority */
  85:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  86:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
  87:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
  88:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  89:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  90:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Exported functions --------------------------------------------------------*/
ARM GAS  /tmp/cc25CREp.s 			page 3


  91:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  92:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  94:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  95:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
  96:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  97:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *
  98:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @verbatim
  99:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    [..]  This section provides functions allowing to:
 103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Initialize the Flash interface, the NVIC allocation and initial clock
 104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****           configuration. It initializes the source of time base also when timeout
 105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****           is needed and the backup domain when enabled.
 106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) De-initialize common part of the HAL.
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated
 108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****           Tick interrupt priority.
 109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              handled in milliseconds basis.
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             ISR process will be blocked.
 122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @endverbatim
 126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
 127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function configures the Flash prefetch,
 131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        configures time base source, NVIC and Low level hardware
 132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is called at the beginning of program after reset and before
 133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       the clock configuration
 134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note The time base configuration is based on MSI clock when exiting from Reset.
 135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       Once done, time base tick start incrementing.
 136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        In the default implementation,Systick is used as source of time base.
 137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        the tick variable is incremented each 1ms in its ISR.
 138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Configure Flash prefetch */
 145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #endif /* PREFETCH_ENABLE */
ARM GAS  /tmp/cc25CREp.s 			page 4


 148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Set Interrupt Group Priority */
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     status = HAL_ERROR;
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   else
 158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     /* Init the low level hardware */
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     HAL_MspInit();
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Return function status */
 164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return status;
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function de-initializes common part of the HAL and stops the source
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        of time base.
 170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is optional.
 171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
 172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Reset of all peripherals */
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* De-Init the low level hardware */
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_MspDeInit();
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Return function status */
 189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return HAL_OK;
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Initialize the MSP.
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_MspInit(void)
 197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
  26              		.loc 1 197 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
ARM GAS  /tmp/cc25CREp.s 			page 5


  33              	.LFE74:
  35              		.section	.text.HAL_MspDeInit,"ax",%progbits
  36              		.align	1
  37              		.weak	HAL_MspDeInit
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	HAL_MspDeInit:
  44              	.LFB75:
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    */
 201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  DeInitialize the MSP.
 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_MspDeInit(void)
 208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
  45              		.loc 1 208 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE75:
  54              		.section	.text.HAL_DeInit,"ax",%progbits
  55              		.align	1
  56              		.global	HAL_DeInit
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	HAL_DeInit:
  63              	.LFB73:
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Reset of all peripherals */
  64              		.loc 1 174 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 174 0
  69 0000 10B5     		push	{r4, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  74              		.loc 1 176 0
  75 0002 074B     		ldr	r3, .L5
  76 0004 4FF0FF32 		mov	r2, #-1
  77 0008 9A61     		str	r2, [r3, #24]
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  78              		.loc 1 177 0
ARM GAS  /tmp/cc25CREp.s 			page 6


  79 000a 0024     		movs	r4, #0
  80 000c 9C61     		str	r4, [r3, #24]
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  81              		.loc 1 179 0
  82 000e 5A61     		str	r2, [r3, #20]
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  83              		.loc 1 180 0
  84 0010 5C61     		str	r4, [r3, #20]
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  85              		.loc 1 182 0
  86 0012 1A61     		str	r2, [r3, #16]
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  87              		.loc 1 183 0
  88 0014 1C61     		str	r4, [r3, #16]
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  89              		.loc 1 186 0
  90 0016 FFF7FEFF 		bl	HAL_MspDeInit
  91              	.LVL0:
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  92              		.loc 1 190 0
  93 001a 2046     		mov	r0, r4
  94 001c 10BD     		pop	{r4, pc}
  95              	.L6:
  96 001e 00BF     		.align	2
  97              	.L5:
  98 0020 00380240 		.word	1073887232
  99              		.cfi_endproc
 100              	.LFE73:
 102              		.section	.text.HAL_InitTick,"ax",%progbits
 103              		.align	1
 104              		.weak	HAL_InitTick
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu softvfp
 110              	HAL_InitTick:
 111              	.LFB76:
 209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    */
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function configures the source of the time base:
 216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        The time source is configured to have 1ms time base with a dedicated
 217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        Tick interrupt priority.
 218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementation  in user file.
 227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
ARM GAS  /tmp/cc25CREp.s 			page 7


 229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 112              		.loc 1 231 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL1:
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   if (uwTickFreq != 0U)
 117              		.loc 1 234 0
 118 0000 104B     		ldr	r3, .L18
 119 0002 1B68     		ldr	r3, [r3]
 120 0004 0BB9     		cbnz	r3, .L16
 235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     /*Configure the SysTick to have interrupt in 1ms time basis*/
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) == 0U)
 238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     {
 239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       /* Configure the SysTick IRQ priority */
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       {
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         uwTickPrio = TickPriority;
 244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       }
 245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       else
 246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       {
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         status = HAL_ERROR;
 248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       }
 249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     }
 250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     else
 251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     {
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       status = HAL_ERROR;
 253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     }
 254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   else
 256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     status = HAL_ERROR;
 121              		.loc 1 257 0
 122 0006 0120     		movs	r0, #1
 123              	.LVL2:
 124 0008 7047     		bx	lr
 125              	.LVL3:
 126              	.L16:
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 127              		.loc 1 231 0
 128 000a 10B5     		push	{r4, lr}
 129              	.LCFI1:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 133 000c 0446     		mov	r4, r0
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     {
 134              		.loc 1 237 0
 135 000e 4FF47A70 		mov	r0, #1000
 136              	.LVL4:
 137 0012 B0FBF3F3 		udiv	r3, r0, r3
ARM GAS  /tmp/cc25CREp.s 			page 8


 138 0016 0C4A     		ldr	r2, .L18+4
 139 0018 1068     		ldr	r0, [r2]
 140 001a B0FBF3F0 		udiv	r0, r0, r3
 141 001e FFF7FEFF 		bl	HAL_SYSTICK_Config
 142              	.LVL5:
 143 0022 68B9     		cbnz	r0, .L10
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       {
 144              		.loc 1 240 0
 145 0024 0F2C     		cmp	r4, #15
 146 0026 01D9     		bls	.L17
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       }
 147              		.loc 1 247 0
 148 0028 0120     		movs	r0, #1
 149              	.LVL6:
 258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Return function status */
 261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return status;
 262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 150              		.loc 1 262 0
 151 002a 10BD     		pop	{r4, pc}
 152              	.LVL7:
 153              	.L17:
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         uwTickPrio = TickPriority;
 154              		.loc 1 242 0
 155 002c 0022     		movs	r2, #0
 156 002e 2146     		mov	r1, r4
 157 0030 4FF0FF30 		mov	r0, #-1
 158 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 159              	.LVL8:
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       }
 160              		.loc 1 243 0
 161 0038 044B     		ldr	r3, .L18+8
 162 003a 1C60     		str	r4, [r3]
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 163              		.loc 1 232 0
 164 003c 0020     		movs	r0, #0
 165 003e 10BD     		pop	{r4, pc}
 166              	.LVL9:
 167              	.L10:
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     }
 168              		.loc 1 252 0
 169 0040 0120     		movs	r0, #1
 170 0042 10BD     		pop	{r4, pc}
 171              	.LVL10:
 172              	.L19:
 173              		.align	2
 174              	.L18:
 175 0044 00000000 		.word	.LANCHOR0
 176 0048 00000000 		.word	SystemCoreClock
 177 004c 00000000 		.word	.LANCHOR1
 178              		.cfi_endproc
 179              	.LFE76:
 181              		.section	.text.HAL_Init,"ax",%progbits
 182              		.align	1
 183              		.global	HAL_Init
 184              		.syntax unified
ARM GAS  /tmp/cc25CREp.s 			page 9


 185              		.thumb
 186              		.thumb_func
 187              		.fpu softvfp
 189              	HAL_Init:
 190              	.LFB72:
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 191              		.loc 1 141 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 10B5     		push	{r4, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 4, -8
 199              		.cfi_offset 14, -4
 200              	.LVL11:
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 201              		.loc 1 150 0
 202 0002 0320     		movs	r0, #3
 203 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 204              	.LVL12:
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 205              		.loc 1 153 0
 206 0008 0F20     		movs	r0, #15
 207 000a FFF7FEFF 		bl	HAL_InitTick
 208              	.LVL13:
 209 000e 10B1     		cbz	r0, .L24
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 210              		.loc 1 155 0
 211 0010 0124     		movs	r4, #1
 212              	.L21:
 213              	.LVL14:
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 214              		.loc 1 165 0
 215 0012 2046     		mov	r0, r4
 216 0014 10BD     		pop	{r4, pc}
 217              	.LVL15:
 218              	.L24:
 219 0016 0446     		mov	r4, r0
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 220              		.loc 1 160 0
 221 0018 FFF7FEFF 		bl	HAL_MspInit
 222              	.LVL16:
 223 001c F9E7     		b	.L21
 224              		.cfi_endproc
 225              	.LFE72:
 227              		.section	.text.HAL_IncTick,"ax",%progbits
 228              		.align	1
 229              		.weak	HAL_IncTick
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
 235              	HAL_IncTick:
 236              	.LFB77:
 263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
ARM GAS  /tmp/cc25CREp.s 			page 10


 265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
 266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions
 269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *  @brief    HAL Control functions
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *
 271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @verbatim
 272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                       ##### HAL Control functions #####
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]  This section provides functions allowing to:
 276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Provide a tick value in millisecond
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Suspend the time base source interrupt
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Resume the time base source interrupt
 280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the HAL API driver version
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the device identifier
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the device revision identifier
 283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the unique device identifier
 284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @endverbatim
 286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
 287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function is called to increment a global variable "uwTick"
 291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        used as application time base.
 292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       in SysTick ISR.
 294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *      implementations in user file.
 296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_IncTick(void)
 299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 237              		.loc 1 299 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uwTick += uwTickFreq;
 242              		.loc 1 300 0
 243 0000 034A     		ldr	r2, .L26
 244 0002 1368     		ldr	r3, [r2]
 245 0004 0349     		ldr	r1, .L26+4
 246 0006 0968     		ldr	r1, [r1]
 247 0008 0B44     		add	r3, r3, r1
 248 000a 1360     		str	r3, [r2]
 249 000c 7047     		bx	lr
 250              	.L27:
 251 000e 00BF     		.align	2
 252              	.L26:
 253 0010 00000000 		.word	uwTick
 254 0014 00000000 		.word	.LANCHOR0
 255              		.cfi_endproc
 256              	.LFE77:
 258              		.section	.text.HAL_GetTick,"ax",%progbits
ARM GAS  /tmp/cc25CREp.s 			page 11


 259              		.align	1
 260              		.weak	HAL_GetTick
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu softvfp
 266              	HAL_GetTick:
 267              	.LFB78:
 301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Provide a tick value in millisecond.
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval tick value
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 268              		.loc 1 310 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return uwTick;
 273              		.loc 1 311 0
 274 0000 014B     		ldr	r3, .L29
 275 0002 1868     		ldr	r0, [r3]
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 276              		.loc 1 312 0
 277 0004 7047     		bx	lr
 278              	.L30:
 279 0006 00BF     		.align	2
 280              	.L29:
 281 0008 00000000 		.word	uwTick
 282              		.cfi_endproc
 283              	.LFE78:
 285              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 286              		.align	1
 287              		.global	HAL_GetTickPrio
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu softvfp
 293              	HAL_GetTickPrio:
 294              	.LFB79:
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function returns a tick priority.
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval tick priority
 317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 295              		.loc 1 319 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
ARM GAS  /tmp/cc25CREp.s 			page 12


 320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return uwTickPrio;
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 300              		.loc 1 321 0
 301 0000 014B     		ldr	r3, .L32
 302 0002 1868     		ldr	r0, [r3]
 303 0004 7047     		bx	lr
 304              	.L33:
 305 0006 00BF     		.align	2
 306              	.L32:
 307 0008 00000000 		.word	.LANCHOR1
 308              		.cfi_endproc
 309              	.LFE79:
 311              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 312              		.align	1
 313              		.global	HAL_SetTickFreq
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu softvfp
 319              	HAL_SetTickFreq:
 320              	.LFB80:
 322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Set new tick Freq.
 325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @param Freq tick frequency
 326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
 327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(uint32_t Freq)
 329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 321              		.loc 1 329 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              	.LVL17:
 326 0000 10B5     		push	{r4, lr}
 327              	.LCFI3:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 4, -8
 330              		.cfi_offset 14, -4
 331              	.LVL18:
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uint32_t prevTickFreq;
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   if (uwTickFreq != Freq)
 332              		.loc 1 335 0
 333 0002 084B     		ldr	r3, .L38
 334 0004 1C68     		ldr	r4, [r3]
 335 0006 8442     		cmp	r4, r0
 336 0008 0AD0     		beq	.L36
 337              	.LVL19:
 336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     /* Back up uwTickFreq frequency */
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     prevTickFreq = uwTickFreq;
 339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
ARM GAS  /tmp/cc25CREp.s 			page 13


 341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     uwTickFreq = Freq;
 338              		.loc 1 341 0
 339 000a 1860     		str	r0, [r3]
 342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    /* Apply the new tick Freq  */
 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 340              		.loc 1 344 0
 341 000c 064B     		ldr	r3, .L38+4
 342 000e 1868     		ldr	r0, [r3]
 343              	.LVL20:
 344 0010 FFF7FEFF 		bl	HAL_InitTick
 345              	.LVL21:
 345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     if (status != HAL_OK)
 346              		.loc 1 346 0
 347 0014 0346     		mov	r3, r0
 348 0016 08B1     		cbz	r0, .L35
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     {
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       /* Restore previous tick frequency */
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       uwTickFreq = prevTickFreq;
 349              		.loc 1 349 0
 350 0018 024A     		ldr	r2, .L38
 351 001a 1460     		str	r4, [r2]
 352              	.LVL22:
 353              	.L35:
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     }
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return status;
 354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 354              		.loc 1 354 0
 355 001c 1846     		mov	r0, r3
 356 001e 10BD     		pop	{r4, pc}
 357              	.LVL23:
 358              	.L36:
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uint32_t prevTickFreq;
 359              		.loc 1 330 0
 360 0020 0023     		movs	r3, #0
 361 0022 FBE7     		b	.L35
 362              	.L39:
 363              		.align	2
 364              	.L38:
 365 0024 00000000 		.word	.LANCHOR0
 366 0028 00000000 		.word	.LANCHOR1
 367              		.cfi_endproc
 368              	.LFE80:
 370              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 371              		.align	1
 372              		.global	HAL_GetTickFreq
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu softvfp
 378              	HAL_GetTickFreq:
 379              	.LFB81:
 355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
ARM GAS  /tmp/cc25CREp.s 			page 14


 357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Return tick frequency.
 358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval tick period in Hz
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetTickFreq(void)
 361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 380              		.loc 1 361 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return uwTickFreq;
 363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 385              		.loc 1 363 0
 386 0000 014B     		ldr	r3, .L41
 387 0002 1868     		ldr	r0, [r3]
 388 0004 7047     		bx	lr
 389              	.L42:
 390 0006 00BF     		.align	2
 391              	.L41:
 392 0008 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE81:
 396              		.section	.text.HAL_Delay,"ax",%progbits
 397              		.align	1
 398              		.weak	HAL_Delay
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu softvfp
 404              	HAL_Delay:
 405              	.LFB82:
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        on variable incremented.
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is incremented.
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 406              		.loc 1 377 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              	.LVL24:
 411 0000 38B5     		push	{r3, r4, r5, lr}
 412              	.LCFI4:
 413              		.cfi_def_cfa_offset 16
 414              		.cfi_offset 3, -16
 415              		.cfi_offset 4, -12
 416              		.cfi_offset 5, -8
 417              		.cfi_offset 14, -4
ARM GAS  /tmp/cc25CREp.s 			page 15


 418 0002 0446     		mov	r4, r0
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 419              		.loc 1 378 0
 420 0004 FFF7FEFF 		bl	HAL_GetTick
 421              	.LVL25:
 422 0008 0546     		mov	r5, r0
 423              	.LVL26:
 379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uint32_t wait = Delay;
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Add a period to guaranty minimum wait */
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 424              		.loc 1 382 0
 425 000a B4F1FF3F 		cmp	r4, #-1
 426 000e 02D0     		beq	.L45
 383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 427              		.loc 1 384 0
 428 0010 044B     		ldr	r3, .L47
 429 0012 1B68     		ldr	r3, [r3]
 430 0014 1C44     		add	r4, r4, r3
 431              	.LVL27:
 432              	.L45:
 385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 433              		.loc 1 387 0 discriminator 1
 434 0016 FFF7FEFF 		bl	HAL_GetTick
 435              	.LVL28:
 436 001a 401B     		subs	r0, r0, r5
 437 001c 8442     		cmp	r4, r0
 438 001e FAD8     		bhi	.L45
 388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 439              		.loc 1 390 0
 440 0020 38BD     		pop	{r3, r4, r5, pc}
 441              	.LVL29:
 442              	.L48:
 443 0022 00BF     		.align	2
 444              	.L47:
 445 0024 00000000 		.word	.LANCHOR0
 446              		.cfi_endproc
 447              	.LFE82:
 449              		.section	.text.HAL_SuspendTick,"ax",%progbits
 450              		.align	1
 451              		.weak	HAL_SuspendTick
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu softvfp
 457              	HAL_SuspendTick:
 458              	.LFB83:
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Suspend the Tick increment.
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
ARM GAS  /tmp/cc25CREp.s 			page 16


 396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is suspended.
 398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_SuspendTick(void)
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 459              		.loc 1 403 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Disable SysTick Interrupt */
 405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 464              		.loc 1 405 0
 465 0000 024A     		ldr	r2, .L50
 466 0002 1368     		ldr	r3, [r2]
 467 0004 23F00203 		bic	r3, r3, #2
 468 0008 1360     		str	r3, [r2]
 469 000a 7047     		bx	lr
 470              	.L51:
 471              		.align	2
 472              	.L50:
 473 000c 10E000E0 		.word	-536813552
 474              		.cfi_endproc
 475              	.LFE83:
 477              		.section	.text.HAL_ResumeTick,"ax",%progbits
 478              		.align	1
 479              		.weak	HAL_ResumeTick
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu softvfp
 485              	HAL_ResumeTick:
 486              	.LFB84:
 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Resume the Tick increment.
 410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is resumed.
 414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_ResumeTick(void)
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 487              		.loc 1 419 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Enable SysTick Interrupt */
 421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
ARM GAS  /tmp/cc25CREp.s 			page 17


 492              		.loc 1 421 0
 493 0000 024A     		ldr	r2, .L53
 494 0002 1368     		ldr	r3, [r2]
 495 0004 43F00203 		orr	r3, r3, #2
 496 0008 1360     		str	r3, [r2]
 497 000a 7047     		bx	lr
 498              	.L54:
 499              		.align	2
 500              	.L53:
 501 000c 10E000E0 		.word	-536813552
 502              		.cfi_endproc
 503              	.LFE84:
 505              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 506              		.align	1
 507              		.global	HAL_GetHalVersion
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu softvfp
 513              	HAL_GetHalVersion:
 514              	.LFB85:
 422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Return the HAL revision
 426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval version: 0xXYZR (8bits for each decimal, R for RC)
 427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 515              		.loc 1 429 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return __STM32L1xx_HAL_VERSION;
 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 520              		.loc 1 431 0
 521 0000 0048     		ldr	r0, .L56
 522 0002 7047     		bx	lr
 523              	.L57:
 524              		.align	2
 525              	.L56:
 526 0004 00040401 		.word	17040384
 527              		.cfi_endproc
 528              	.LFE85:
 530              		.section	.text.HAL_GetREVID,"ax",%progbits
 531              		.align	1
 532              		.global	HAL_GetREVID
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu softvfp
 538              	HAL_GetREVID:
 539              	.LFB86:
 432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Return the device revision identifier.
ARM GAS  /tmp/cc25CREp.s 			page 18


 435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device revision identifier
 436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetREVID(void)
 438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 540              		.loc 1 438 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 545              		.loc 1 439 0
 546 0000 014B     		ldr	r3, .L59
 547 0002 1868     		ldr	r0, [r3]
 440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 548              		.loc 1 440 0
 549 0004 000C     		lsrs	r0, r0, #16
 550 0006 7047     		bx	lr
 551              	.L60:
 552              		.align	2
 553              	.L59:
 554 0008 002004E0 		.word	-536600576
 555              		.cfi_endproc
 556              	.LFE86:
 558              		.section	.text.HAL_GetDEVID,"ax",%progbits
 559              		.align	1
 560              		.global	HAL_GetDEVID
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu softvfp
 566              	HAL_GetDEVID:
 567              	.LFB87:
 441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Return the device identifier.
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device identifier
 445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 568              		.loc 1 447 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 573              		.loc 1 448 0
 574 0000 024B     		ldr	r3, .L62
 575 0002 1868     		ldr	r0, [r3]
 449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 576              		.loc 1 449 0
 577 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 578 0008 7047     		bx	lr
 579              	.L63:
 580 000a 00BF     		.align	2
 581              	.L62:
 582 000c 002004E0 		.word	-536600576
 583              		.cfi_endproc
ARM GAS  /tmp/cc25CREp.s 			page 19


 584              	.LFE87:
 586              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 587              		.align	1
 588              		.global	HAL_GetUIDw0
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu softvfp
 594              	HAL_GetUIDw0:
 595              	.LFB88:
 450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Return the first word of the unique device identifier (UID based on 96 bits)
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device identifier 31:0 bits
 454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 596              		.loc 1 456 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 601              		.loc 1 458 0
 602 0000 014B     		ldr	r3, .L65
 603 0002 1868     		ldr	r0, [r3]
 604 0004 7047     		bx	lr
 605              	.L66:
 606 0006 00BF     		.align	2
 607              	.L65:
 608 0008 D000F81F 		.word	536346832
 609              		.cfi_endproc
 610              	.LFE88:
 612              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 613              		.align	1
 614              		.global	HAL_GetUIDw1
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu softvfp
 620              	HAL_GetUIDw1:
 621              	.LFB89:
 459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Return the second word of the unique device identifier (UID based on 96 bits)
 462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device identifier 63:32 bits
 463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 622              		.loc 1 465 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x4U))));
 467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
ARM GAS  /tmp/cc25CREp.s 			page 20


 627              		.loc 1 467 0
 628 0000 014B     		ldr	r3, .L68
 629 0002 1868     		ldr	r0, [r3]
 630 0004 7047     		bx	lr
 631              	.L69:
 632 0006 00BF     		.align	2
 633              	.L68:
 634 0008 D400F81F 		.word	536346836
 635              		.cfi_endproc
 636              	.LFE89:
 638              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 639              		.align	1
 640              		.global	HAL_GetUIDw2
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu softvfp
 646              	HAL_GetUIDw2:
 647              	.LFB90:
 468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Return the third word of the unique device identifier (UID based on 96 bits)
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device identifier 95:64 bits
 472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 648              		.loc 1 474 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x14U))));
 476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 653              		.loc 1 476 0
 654 0000 014B     		ldr	r3, .L71
 655 0002 1868     		ldr	r0, [r3]
 656 0004 7047     		bx	lr
 657              	.L72:
 658 0006 00BF     		.align	2
 659              	.L71:
 660 0008 E400F81F 		.word	536346852
 661              		.cfi_endproc
 662              	.LFE90:
 664              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 665              		.align	1
 666              		.global	HAL_DBGMCU_EnableDBGSleepMode
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu softvfp
 672              	HAL_DBGMCU_EnableDBGSleepMode:
 673              	.LFB91:
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
ARM GAS  /tmp/cc25CREp.s 			page 21


 482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group3 DBGMCU Peripheral Control functions
 483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *  @brief    DBGMCU Peripheral Control functions
 484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *
 485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @verbatim
 486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                       ##### DBGMCU Peripheral Control functions #####
 488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]  This section provides functions allowing to:
 490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @endverbatim
 495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
 496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 674              		.loc 1 503 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 679              		.loc 1 504 0
 680 0000 024A     		ldr	r2, .L74
 681 0002 5368     		ldr	r3, [r2, #4]
 682 0004 43F00103 		orr	r3, r3, #1
 683 0008 5360     		str	r3, [r2, #4]
 684 000a 7047     		bx	lr
 685              	.L75:
 686              		.align	2
 687              	.L74:
 688 000c 002004E0 		.word	-536600576
 689              		.cfi_endproc
 690              	.LFE91:
 692              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 693              		.align	1
 694              		.global	HAL_DBGMCU_DisableDBGSleepMode
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.fpu softvfp
 700              	HAL_DBGMCU_DisableDBGSleepMode:
 701              	.LFB92:
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
ARM GAS  /tmp/cc25CREp.s 			page 22


 702              		.loc 1 512 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 707              		.loc 1 513 0
 708 0000 024A     		ldr	r2, .L77
 709 0002 5368     		ldr	r3, [r2, #4]
 710 0004 23F00103 		bic	r3, r3, #1
 711 0008 5360     		str	r3, [r2, #4]
 712 000a 7047     		bx	lr
 713              	.L78:
 714              		.align	2
 715              	.L77:
 716 000c 002004E0 		.word	-536600576
 717              		.cfi_endproc
 718              	.LFE92:
 720              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 721              		.align	1
 722              		.global	HAL_DBGMCU_EnableDBGStopMode
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu softvfp
 728              	HAL_DBGMCU_EnableDBGStopMode:
 729              	.LFB93:
 514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 730              		.loc 1 521 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 735              		.loc 1 522 0
 736 0000 024A     		ldr	r2, .L80
 737 0002 5368     		ldr	r3, [r2, #4]
 738 0004 43F00203 		orr	r3, r3, #2
 739 0008 5360     		str	r3, [r2, #4]
 740 000a 7047     		bx	lr
 741              	.L81:
 742              		.align	2
 743              	.L80:
 744 000c 002004E0 		.word	-536600576
 745              		.cfi_endproc
 746              	.LFE93:
 748              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 749              		.align	1
 750              		.global	HAL_DBGMCU_DisableDBGStopMode
 751              		.syntax unified
ARM GAS  /tmp/cc25CREp.s 			page 23


 752              		.thumb
 753              		.thumb_func
 754              		.fpu softvfp
 756              	HAL_DBGMCU_DisableDBGStopMode:
 757              	.LFB94:
 523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 758              		.loc 1 530 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 763              		.loc 1 531 0
 764 0000 024A     		ldr	r2, .L83
 765 0002 5368     		ldr	r3, [r2, #4]
 766 0004 23F00203 		bic	r3, r3, #2
 767 0008 5360     		str	r3, [r2, #4]
 768 000a 7047     		bx	lr
 769              	.L84:
 770              		.align	2
 771              	.L83:
 772 000c 002004E0 		.word	-536600576
 773              		.cfi_endproc
 774              	.LFE94:
 776              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 777              		.align	1
 778              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 782              		.fpu softvfp
 784              	HAL_DBGMCU_EnableDBGStandbyMode:
 785              	.LFB95:
 532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 786              		.loc 1 539 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
 540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 791              		.loc 1 540 0
 792 0000 024A     		ldr	r2, .L86
 793 0002 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/cc25CREp.s 			page 24


 794 0004 43F00403 		orr	r3, r3, #4
 795 0008 5360     		str	r3, [r2, #4]
 796 000a 7047     		bx	lr
 797              	.L87:
 798              		.align	2
 799              	.L86:
 800 000c 002004E0 		.word	-536600576
 801              		.cfi_endproc
 802              	.LFE95:
 804              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 805              		.align	1
 806              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 810              		.fpu softvfp
 812              	HAL_DBGMCU_DisableDBGStandbyMode:
 813              	.LFB96:
 541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 814              		.loc 1 548 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 819              		.loc 1 549 0
 820 0000 024A     		ldr	r2, .L89
 821 0002 5368     		ldr	r3, [r2, #4]
 822 0004 23F00403 		bic	r3, r3, #4
 823 0008 5360     		str	r3, [r2, #4]
 824 000a 7047     		bx	lr
 825              	.L90:
 826              		.align	2
 827              	.L89:
 828 000c 002004E0 		.word	-536600576
 829              		.cfi_endproc
 830              	.LFE96:
 832              		.global	uwTickFreq
 833              		.global	uwTickPrio
 834              		.comm	uwTick,4,4
 835              		.section	.data.uwTickFreq,"aw",%progbits
 836              		.align	2
 837              		.set	.LANCHOR0,. + 0
 840              	uwTickFreq:
 841 0000 01000000 		.word	1
 842              		.section	.data.uwTickPrio,"aw",%progbits
 843              		.align	2
 844              		.set	.LANCHOR1,. + 0
 847              	uwTickPrio:
 848 0000 10000000 		.word	16
ARM GAS  /tmp/cc25CREp.s 			page 25


 849              		.text
 850              	.Letext0:
 851              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 852              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 853              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 854              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 855              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xe.h"
 856              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 857              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
 858              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_cortex.h"
ARM GAS  /tmp/cc25CREp.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_hal.c
     /tmp/cc25CREp.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc25CREp.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc25CREp.s:36     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cc25CREp.s:43     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cc25CREp.s:55     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cc25CREp.s:62     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cc25CREp.s:98     .text.HAL_DeInit:0000000000000020 $d
     /tmp/cc25CREp.s:103    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc25CREp.s:110    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc25CREp.s:175    .text.HAL_InitTick:0000000000000044 $d
     /tmp/cc25CREp.s:182    .text.HAL_Init:0000000000000000 $t
     /tmp/cc25CREp.s:189    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cc25CREp.s:228    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cc25CREp.s:235    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cc25CREp.s:253    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/cc25CREp.s:259    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cc25CREp.s:266    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cc25CREp.s:281    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cc25CREp.s:286    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/cc25CREp.s:293    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/cc25CREp.s:307    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/cc25CREp.s:312    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/cc25CREp.s:319    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/cc25CREp.s:365    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/cc25CREp.s:371    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/cc25CREp.s:378    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/cc25CREp.s:392    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/cc25CREp.s:397    .text.HAL_Delay:0000000000000000 $t
     /tmp/cc25CREp.s:404    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cc25CREp.s:445    .text.HAL_Delay:0000000000000024 $d
     /tmp/cc25CREp.s:450    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc25CREp.s:457    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc25CREp.s:473    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/cc25CREp.s:478    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc25CREp.s:485    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc25CREp.s:501    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/cc25CREp.s:506    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cc25CREp.s:513    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cc25CREp.s:526    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cc25CREp.s:531    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cc25CREp.s:538    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cc25CREp.s:554    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cc25CREp.s:559    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cc25CREp.s:566    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cc25CREp.s:582    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cc25CREp.s:587    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/cc25CREp.s:594    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/cc25CREp.s:608    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/cc25CREp.s:613    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/cc25CREp.s:620    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/cc25CREp.s:634    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/cc25CREp.s:639    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/cc25CREp.s:646    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/cc25CREp.s:660    .text.HAL_GetUIDw2:0000000000000008 $d
ARM GAS  /tmp/cc25CREp.s 			page 27


     /tmp/cc25CREp.s:665    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/cc25CREp.s:672    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/cc25CREp.s:688    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/cc25CREp.s:693    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/cc25CREp.s:700    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/cc25CREp.s:716    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/cc25CREp.s:721    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cc25CREp.s:728    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cc25CREp.s:744    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/cc25CREp.s:749    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cc25CREp.s:756    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cc25CREp.s:772    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cc25CREp.s:777    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cc25CREp.s:784    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cc25CREp.s:800    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cc25CREp.s:805    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/cc25CREp.s:812    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cc25CREp.s:828    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/cc25CREp.s:840    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/cc25CREp.s:847    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/cc25CREp.s:836    .data.uwTickFreq:0000000000000000 $d
     /tmp/cc25CREp.s:843    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
