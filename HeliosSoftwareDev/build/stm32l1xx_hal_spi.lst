ARM GAS  /tmp/ccVXEgNb.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l1xx_hal_spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SPI_AbortRx_ISR:
  23              	.LFB125:
  24              		.file 1 "Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c"
   1:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @file    stm32l1xx_hal_spi.c
   4:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
  13:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..]
  18:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  20:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  23:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
ARM GAS  /tmp/ccVXEgNb.s 			page 2


  35:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  39:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  42:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
  46:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
  54:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
  61:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Callback registration:
  62:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  63:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  64:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  66:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  67:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  68:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  69:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  70:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  71:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  72:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
  73:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  74:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  75:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  76:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  77:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  78:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  79:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           and a pointer to the user callback function.
  80:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  81:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  82:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  83:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           weak function.
  84:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           and the Callback ID.
  86:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           This function allows to reset following callbacks:
  87:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  88:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  89:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  90:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  91:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
ARM GAS  /tmp/ccVXEgNb.s 			page 3


  92:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  94:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  95:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  96:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  97:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  98:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        [..]
  99:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
 100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        [..]
 109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        or HAL_SPI_Init() function.
 116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        [..]
 118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        When the compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        not defined, the callback registering feature is not available
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
 123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   @endverbatim
 128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   Additional table :
 130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        | Process | Transfer mode  |---------------------|----------------------|-------------------
 135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |===========================================================================================
 137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/8  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
ARM GAS  /tmp/ccVXEgNb.s 			page 4


 149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        | Process | Transfer mode  |---------------------|----------------------|-------------------
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |===========================================================================================
 162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/4  |    NA     |    NA    |    NA     |   NA  
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/32  | Fpclk/
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/4  | Fpclk/4  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (8bits, 16bits),
 181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        @note
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ******************************************************************************
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @attention
 189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * All rights reserved.</center></h2>
 192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ******************************************************************************
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #include "stm32l1xx_hal.h"
 203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @addtogroup STM32L1xx_HAL_Driver
 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
ARM GAS  /tmp/ccVXEgNb.s 			page 5


 206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI SPI
 209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief SPI HAL module driver
 210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #define SPI_BSY_FLAG_WORKAROUND_TIMEOUT 1000U /*!< Timeout 1000 µs             */
 221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
 223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
ARM GAS  /tmp/ccVXEgNb.s 			page 6


 263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
 266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @verbatim
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
 278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
 280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           the selected configuration:
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Mode
 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Direction
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Data Size
 291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Clock Polarity and Phase
 292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) NSS Management
 293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) BaudRate Prescaler
 294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) FirstBit
 295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) TIMode
 296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) CRC Calculation
 297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           of the selected SPIx peripheral.
 301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @endverbatim
 303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi == NULL)
 317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_ERROR;
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccVXEgNb.s 			page 7


 320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the parameters */
 322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* TI mode is not supported on all devices in stm32l1xx serie.
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      TIMode parameter is mandatory equal to SPI_TIMODE_DISABLE if TI mode is not supported */
 331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.Mode == SPI_MODE_MASTER)
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
 342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Force polarity and phase to TI protocaol requirements */
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Init the SPI Callback settings */
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
ARM GAS  /tmp/ccVXEgNb.s 			page 8


 377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   (hspi->Init.Direction & (SPI_CR1_RXONLY | SPI_CR1_BIDIMODE)) |
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   (hspi->Init.DataSize & SPI_CR1_DFF) |
 405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   (hspi->Init.CLKPolarity & SPI_CR1_CPOL) |
 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   (hspi->Init.CLKPhase & SPI_CR1_CPHA) |
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   (hspi->Init.NSS & SPI_CR1_SSM) |
 408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
 410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));
 411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : NSS management, TI Mode */
 414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & S
 415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : NSS management */
 417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, ((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE));
 418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, (hspi->Init.CRCPolynomial & SPI_CRCPR_CRCPOLY_Msk));
 426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccVXEgNb.s 			page 9


 434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
 438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi == NULL)
 450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_ERROR;
 452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check SPI Instance parameter */
 455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Release Lock */
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
 482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
 489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
ARM GAS  /tmp/ccVXEgNb.s 			page 10


 491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
 494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
 498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
 510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
 514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (pCallback == NULL)
 532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update the error code */
 534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_ERROR;
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccVXEgNb.s 			page 11


 548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccVXEgNb.s 			page 12


 605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
 616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update the error code */
 618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Return error status */
 621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     status =  HAL_ERROR;
 622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Release Lock */
 625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return status;
 627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
 642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
ARM GAS  /tmp/ccVXEgNb.s 			page 13


 662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
ARM GAS  /tmp/ccVXEgNb.s 			page 14


 719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update the error code */
 721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Return error status */
 724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     status =  HAL_ERROR;
 725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Release Lock */
 728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return status;
 730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
 734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *  @brief   Data transfers functions
 738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @verbatim
 740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ==============================================================================
 741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                       ##### IO operation functions #####
 742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
 743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  [..]
 744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     data transfers.
 746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     (#) There are two modes of transfer:
 750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             after finishing transfer.
 753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The end of the data processing will be indicated through the
 756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             using DMA mode.
 758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @endverbatim
 766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
 775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
ARM GAS  /tmp/ccVXEgNb.s 			page 15


 776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
 785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
 793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
 807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
 824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
 830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
ARM GAS  /tmp/ccVXEgNb.s 			page 16


 833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
 840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
 863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
 865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
 875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
ARM GAS  /tmp/ccVXEgNb.s 			page 17


 890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
 892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
 894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
 904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
 911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error:
 928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
 930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be received
 940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
ARM GAS  /tmp/ccVXEgNb.s 			page 18


 947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
 977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
 992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
 996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount--;
 997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
ARM GAS  /tmp/ccVXEgNb.s 			page 19


1004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
1017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Transfer loop */
1019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check the RXNE flag */
1022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* read the received data */
1025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
1030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
1032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
1036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Transfer loop */
1043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check the RXNE flag */
1046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
1053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
1055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
1059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
ARM GAS  /tmp/ccVXEgNb.s 			page 20


1061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Handle the CRC Transmission */
1066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Read the latest data */
1072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* the latest data has not been received */
1075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       goto error;
1077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
1086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait the CRC data */
1091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       goto error;
1096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     tmpreg = READ_REG(hspi->Instance->DR);
1100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* To avoid GCC warning */
1101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     UNUSED(tmpreg);
1102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
1113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccVXEgNb.s 			page 21


1118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
1139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                           uint32_t Timeout)
1143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
1146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tickstart;
1148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
1150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init temporary variables */
1166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_state           = hspi->State;
1167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
1169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/ccVXEgNb.s 			page 22


1175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
1225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check TXE flag */
1229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
ARM GAS  /tmp/ccVXEgNb.s 			page 23


1232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
1234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 0U;
1236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Enable CRC Transmission */
1239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check RXNE flag */
1247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 1U;
1254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
1268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
1269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
1270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check TXE flag */
1274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
1279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 0U;
1281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Enable CRC Transmission */
1284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/ccVXEgNb.s 			page 24


1289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
1295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
1296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 1U;
1299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
1304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait until TXE flag */
1313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Error on the CRC reception */
1316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       goto error;
1319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Read CRC */
1321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     tmpreg = READ_REG(hspi->Instance->DR);
1322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* To avoid GCC warning */
1323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     UNUSED(tmpreg);
1324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
1327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Clear CRC Flag */
1331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
1338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
ARM GAS  /tmp/ccVXEgNb.s 			page 25


1346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
1347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
1349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the function for IT treatment */
1401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccVXEgNb.s 			page 26


1403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccVXEgNb.s 			page 27


1460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the function for IT treatment */
1490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
ARM GAS  /tmp/ccVXEgNb.s 			page 28


1517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             process unlock */
1521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
1547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
1554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init temporary variables */
1557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_state           = hspi->State;
1558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
ARM GAS  /tmp/ccVXEgNb.s 			page 29


1574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the function for IT treatment */
1589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
ARM GAS  /tmp/ccVXEgNb.s 			page 30


1631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check tx dma handle */
1637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
ARM GAS  /tmp/ccVXEgNb.s 			page 31


1688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA error callback */
1694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
1702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check rx dma handle */
ARM GAS  /tmp/ccVXEgNb.s 			page 32


1745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check tx dma handle */
1752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccVXEgNb.s 			page 33


1802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
1807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA error callback */
1809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
1817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error:
1840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                               uint16_t Size)
1857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
ARM GAS  /tmp/ccVXEgNb.s 			page 34


1859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check rx & tx dma handles */
1863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
1870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init temporary variables */
1873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_state           = hspi->State;
1874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
1877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccVXEgNb.s 			page 35


1916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
1918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
1922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
1927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
1928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA error callback */
1931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
1939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   is performed in DMA reception complete callback  */
1953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
1955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
1956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
1957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
1961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccVXEgNb.s 			page 36


1973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
1990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle.
1991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         This procedure performs following operations :
1994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Set handle State to READY
1998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
2005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t resetcount;
2006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Initialized local variable  */
2008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   errorcode = HAL_OK;
2009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
2011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
2021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
2023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
2026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
2028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
ARM GAS  /tmp/ccVXEgNb.s 			page 37


2030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
2031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
2038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
2040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
2043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
2045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
2047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
2048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable Tx DMA Request */
2067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until TXE flag is set */
2070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       do
2071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (count == 0U)
2073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
2074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           break;
2076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
2077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         count--;
2078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
2079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
ARM GAS  /tmp/ccVXEgNb.s 			page 38


2087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable peripheral */
2099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable Rx DMA Request */
2102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check error during Abort procedure */
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
2114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
2116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset errorCode */
2118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Restore hspi->state to ready */
2128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
2131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle.
2136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         This procedure performs following operations :
2139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Set handle State to READY
2143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
ARM GAS  /tmp/ccVXEgNb.s 			page 39


2144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t abortcplt ;
2152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
2153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t resetcount;
2154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Initialized local variable  */
2156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   errorcode = HAL_OK;
2157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   abortcplt = 1U;
2158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
2160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
2170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
2172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
2175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
2177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
2179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
2180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
2187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
2189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
2192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
2194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
2196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
2197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      before any call to DMA Abort functions */
ARM GAS  /tmp/ccVXEgNb.s 			page 40


2201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Otherwise, set it to NULL */
2206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Otherwise, set it to NULL */
2220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         abortcplt = 0U;
2245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccVXEgNb.s 			page 41


2258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         abortcplt = 0U;
2263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (abortcplt == 1U)
2268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check error during Abort procedure */
2274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Reset errorCode */
2282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
2289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
2303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
2314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
ARM GAS  /tmp/ccVXEgNb.s 			page 42


2315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
2320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
2323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
2334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
2335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
2340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      */
2359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccVXEgNb.s 			page 43


2372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
2383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR(hspi);
2401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
2402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR(hspi);
2408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
2409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
2415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
2418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
ARM GAS  /tmp/ccVXEgNb.s 			page 44


2429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return;
2432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
2445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable all interrupts */
2454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
2465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
2470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
2472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
2473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
2476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
2481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
2483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
2484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
ARM GAS  /tmp/ccVXEgNb.s 			page 45


2486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user error callback */
2488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
2496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/ccVXEgNb.s 			page 46


2543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  SPI error callback.
2597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/ccVXEgNb.s 			page 47


2600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle.
2617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
2631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief   SPI control functions
2635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
2636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @verbatim
2637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
2638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
2640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..]
2641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @endverbatim
2645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
2646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval SPI state
2653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI handle state */
ARM GAS  /tmp/ccVXEgNb.s 			page 48


2657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return hspi->State;
2658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Return the SPI error code.
2662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI ErrorCode */
2669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return hspi->ErrorCode;
2670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
2674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
2678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief   Private functions
2682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
2683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
2695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Normal Mode */
2700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable ERR interrupt */
2703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable Tx DMA Request */
2706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check the end of the transaction */
2709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccVXEgNb.s 			page 49


2714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
2716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
2726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Tx complete callback */
2735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
2752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
2754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Normal Mode */
2760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable ERR interrupt */
2763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* CRC handling */
2767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until RXNE flag */
2770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
ARM GAS  /tmp/ccVXEgNb.s 			page 50


2771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Error on the CRC reception */
2773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Read CRC */
2776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       tmpreg = READ_REG(hspi->Instance->DR);
2777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* To avoid GCC warning */
2778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       UNUSED(tmpreg);
2779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check if we are in Master RX 2 line mode */
2783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
2784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines)
2786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Normal case */
2791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check the end of the transaction */
2795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
2798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check if CRC error occurred */
2805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
2815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Rx complete callback */
2824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
2826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
ARM GAS  /tmp/ccVXEgNb.s 			page 51


2828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
2841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
2843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Normal Mode */
2849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable ERR interrupt */
2852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* CRC handling */
2856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait the CRC data */
2859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Read CRC to Flush DR and RXNE flag */
2864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       tmpreg = READ_REG(hspi->Instance->DR);
2865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* To avoid GCC warning */
2866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       UNUSED(tmpreg);
2867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check the end of the transaction */
2871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check if CRC error occurred */
ARM GAS  /tmp/ccVXEgNb.s 			page 52


2885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
2895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user TxRx complete callback */
2904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
2906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
2908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Tx half complete callback */
2922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
2924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
2926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Rx half complete callback */
2940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
ARM GAS  /tmp/ccVXEgNb.s 			page 53


2942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
2944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
2949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user TxRx half complete callback */
2958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
2960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
2962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
2967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
2976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user error callback */
2981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
2983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
2990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma DMA handle.
2992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
ARM GAS  /tmp/ccVXEgNb.s 			page 54


2999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user error callback */
3001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma DMA handle.
3014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
3020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable Tx DMA Request */
3025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
3031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
3034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
3036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset errorCode */
3055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/ccVXEgNb.s 			page 55


3056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
3061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
3063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Abort complete callback */
3068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma DMA handle.
3081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable Rx DMA Request */
3093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Busy flag */
3096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
ARM GAS  /tmp/ccVXEgNb.s 			page 56


3113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset errorCode */
3118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
3124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
3126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Abort complete callback */
3131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 8bit mode */
3147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check end of the reception */
3152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccVXEgNb.s 			page 57


3170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint8_t  * ptmpreg8;
3182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint8_t  tmpreg8 = 0;
3183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Initialize the 8bit temporary pointer */
3185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
3186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmpreg8 = *ptmpreg8;
3188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* To avoid GCC warning */
3189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(tmpreg8);
3190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseRxTx_ISR(hspi);
3197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transmission */
3214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable TXE interrupt */
3222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccVXEgNb.s 			page 58


3227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable TXE interrupt */
3228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable RXNE interrupt */
3261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
3280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmpreg = READ_REG(hspi->Instance->DR);
3283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* To avoid GCC warning */
ARM GAS  /tmp/ccVXEgNb.s 			page 59


3284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(tmpreg);  
3285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE interrupt */
3287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
3307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable TXE interrupt */
3315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable TXE interrupt */
3321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint8_t  * ptmpreg8;
3340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint8_t  tmpreg8 = 0;
ARM GAS  /tmp/ccVXEgNb.s 			page 60


3341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Initialize the 8bit temporary pointer */
3343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
3344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmpreg8 = *ptmpreg8;
3346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* To avoid GCC warning */
3347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(tmpreg8);
3348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
3367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
3396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
ARM GAS  /tmp/ccVXEgNb.s 			page 61


3398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmpreg = READ_REG(hspi->Instance->DR);
3399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* To avoid GCC warning */
3400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(tmpreg);
3401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
3423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
ARM GAS  /tmp/ccVXEgNb.s 			page 62


3455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Enable CRC Transmission */
3460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Enable CRC Transmission */
3486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *              the configuration information for SPI module.
3497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Flag SPI flag to check
3498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  State flag state to check
3499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Tickstart tick start value
3501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
3502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
3507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tmp_timeout;
3508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tmp_tickstart;
3509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Adjust Timeout value  in case of end of transfer */
3511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
ARM GAS  /tmp/ccVXEgNb.s 			page 63


3512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_tickstart = HAL_GetTick();
3513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
3515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
3516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
3518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
3520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
3522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****            and slave for their respective CRC calculation */
3526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
3529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
3533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           /* Disable SPI peripheral */
3534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
3536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Reset CRC Calculation */
3538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
3540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
3542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Process Unlocked */
3546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
3547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop proced
3551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if(count == 0U)
3552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         tmp_timeout = 0U;
3554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
3556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
3560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Tickstart tick start value
3568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
ARM GAS  /tmp/ccVXEgNb.s 			page 64


3569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable SPI peripheral */
3576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
3580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
3581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
3583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Control the BSY flag */
3585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
3592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait the RXNE reset */
3594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait the RXNE reset */
3604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
3608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
3611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle
3616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Tickstart tick start value
3618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
3619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Timeout in µs */
3623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
3624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
3625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
ARM GAS  /tmp/ccVXEgNb.s 			page 65


3626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Control the BSY flag */
3628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
3632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait BSY flag during 1 Byte time transfer in case of Full-Duplex and Tx transfer
3637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     * If Timeout is reached, the transfer is considered as finish.
3638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     * User have to calculate the timeout value to fit with the time of 1 byte transfer.
3639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     * This time is directly link with the SPI clock from Master device.
3640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     */
3641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
3642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
3644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
3646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
3648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
3649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
3652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
3663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management */
3666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable ERR interrupt */
3669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
3675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
3678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
3680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
ARM GAS  /tmp/ccVXEgNb.s 			page 66


3683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
3696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user error callback */
3702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
3714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user Rx complete callback */
3717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
3719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
3721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
3724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user TxRx complete callback */
3727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
3729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
3735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
3738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
ARM GAS  /tmp/ccVXEgNb.s 			page 67


3740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
3761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
3775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user error callback */
3780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user Rx complete callback */
3792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
3796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccVXEgNb.s 			page 68


3797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
3799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
3801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
3821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
3830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
3833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
3835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
3839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
3841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
ARM GAS  /tmp/ccVXEgNb.s 			page 69


3854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user error callback */
3856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user Rx complete callback */
3865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
3867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
  25              		.loc 1 3880 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
3881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
  34              		.loc 1 3881 0
  35 0002 0023     		movs	r3, #0
  36 0004 0193     		str	r3, [sp, #4]
3882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
  37              		.loc 1 3882 0
  38 0006 164B     		ldr	r3, .L7
  39 0008 1B68     		ldr	r3, [r3]
  40 000a 164A     		ldr	r2, .L7+4
  41 000c A2FB0323 		umull	r2, r3, r2, r3
  42 0010 5B0A     		lsrs	r3, r3, #9
  43 0012 6422     		movs	r2, #100
  44 0014 02FB03F3 		mul	r3, r2, r3
  45 0018 0093     		str	r3, [sp]
  46              	.L4:
3883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
  47              		.loc 1 3887 0
ARM GAS  /tmp/ccVXEgNb.s 			page 70


  48 001a 009B     		ldr	r3, [sp]
  49 001c 43B1     		cbz	r3, .L6
3888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
3891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
  50              		.loc 1 3892 0
  51 001e 009B     		ldr	r3, [sp]
  52 0020 013B     		subs	r3, r3, #1
  53 0022 0093     		str	r3, [sp]
3893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
  54              		.loc 1 3893 0
  55 0024 0368     		ldr	r3, [r0]
  56 0026 9B68     		ldr	r3, [r3, #8]
  57 0028 13F0020F 		tst	r3, #2
  58 002c F5D0     		beq	.L4
  59 002e 03E0     		b	.L3
  60              	.L6:
3889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
  61              		.loc 1 3889 0
  62 0030 436D     		ldr	r3, [r0, #84]
  63 0032 43F04003 		orr	r3, r3, #64
  64 0036 4365     		str	r3, [r0, #84]
  65              	.L3:
3894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  66              		.loc 1 3896 0
  67 0038 0268     		ldr	r2, [r0]
  68 003a 1368     		ldr	r3, [r2]
  69 003c 23F04003 		bic	r3, r3, #64
  70 0040 1360     		str	r3, [r2]
3897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
  71              		.loc 1 3899 0
  72 0042 0268     		ldr	r2, [r0]
  73 0044 5368     		ldr	r3, [r2, #4]
  74 0046 23F0E003 		bic	r3, r3, #224
  75 004a 5360     		str	r3, [r2, #4]
3900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Flush Data Register by a blank read */
3902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmpreg = READ_REG(hspi->Instance->DR);
  76              		.loc 1 3902 0
  77 004c 0368     		ldr	r3, [r0]
  78 004e DB68     		ldr	r3, [r3, #12]
  79 0050 0193     		str	r3, [sp, #4]
3903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* To avoid GCC warning */
3904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(tmpreg);
  80              		.loc 1 3904 0
  81 0052 019B     		ldr	r3, [sp, #4]
3905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
  82              		.loc 1 3906 0
  83 0054 0723     		movs	r3, #7
  84 0056 80F85130 		strb	r3, [r0, #81]
ARM GAS  /tmp/ccVXEgNb.s 			page 71


3907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
  85              		.loc 1 3907 0
  86 005a 02B0     		add	sp, sp, #8
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 0
  89              		@ sp needed
  90 005c 7047     		bx	lr
  91              	.L8:
  92 005e 00BF     		.align	2
  93              	.L7:
  94 0060 00000000 		.word	SystemCoreClock
  95 0064 F1197605 		.word	91625969
  96              		.cfi_endproc
  97              	.LFE125:
  99              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 100              		.align	1
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu softvfp
 106              	SPI_AbortTx_ISR:
 107              	.LFB126:
3908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 108              		.loc 1 3916 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113              	.LVL1:
3917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXEIE interrupt */
3918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 114              		.loc 1 3918 0
 115 0000 0268     		ldr	r2, [r0]
 116 0002 5368     		ldr	r3, [r2, #4]
 117 0004 23F08003 		bic	r3, r3, #128
 118 0008 5360     		str	r3, [r2, #4]
3919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 119              		.loc 1 3921 0
 120 000a 0268     		ldr	r2, [r0]
 121 000c 1368     		ldr	r3, [r2]
 122 000e 23F04003 		bic	r3, r3, #64
 123 0012 1360     		str	r3, [r2]
3922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 124              		.loc 1 3923 0
 125 0014 0723     		movs	r3, #7
 126 0016 80F85130 		strb	r3, [r0, #81]
ARM GAS  /tmp/ccVXEgNb.s 			page 72


 127 001a 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE126:
 131              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 132              		.align	1
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu softvfp
 138              	SPI_WaitFlagStateUntilTimeout:
 139              	.LFB119:
3505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
 140              		.loc 1 3505 0
 141              		.cfi_startproc
 142              		@ args = 4, pretend = 0, frame = 8
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              	.LVL2:
 145 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 28
 148              		.cfi_offset 4, -28
 149              		.cfi_offset 5, -24
 150              		.cfi_offset 6, -20
 151              		.cfi_offset 7, -16
 152              		.cfi_offset 8, -12
 153              		.cfi_offset 9, -8
 154              		.cfi_offset 14, -4
 155 0004 83B0     		sub	sp, sp, #12
 156              	.LCFI3:
 157              		.cfi_def_cfa_offset 40
 158 0006 0446     		mov	r4, r0
 159 0008 0F46     		mov	r7, r1
 160 000a 1646     		mov	r6, r2
 161 000c 1D46     		mov	r5, r3
3511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_tickstart = HAL_GetTick();
 162              		.loc 1 3511 0
 163 000e FFF7FEFF 		bl	HAL_GetTick
 164              	.LVL3:
 165 0012 0A9B     		ldr	r3, [sp, #40]
 166 0014 181A     		subs	r0, r3, r0
 167 0016 00EB0508 		add	r8, r0, r5
 168              	.LVL4:
3512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 169              		.loc 1 3512 0
 170 001a FFF7FEFF 		bl	HAL_GetTick
 171              	.LVL5:
 172 001e 8146     		mov	r9, r0
 173              	.LVL6:
3515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 174              		.loc 1 3515 0
 175 0020 2A4B     		ldr	r3, .L26
 176 0022 1B68     		ldr	r3, [r3]
 177 0024 C3F3CB33 		ubfx	r3, r3, #15, #12
 178 0028 03FB08F3 		mul	r3, r3, r8
 179 002c 0193     		str	r3, [sp, #4]
 180              	.LVL7:
 181              	.L12:
ARM GAS  /tmp/ccVXEgNb.s 			page 73


3517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 182              		.loc 1 3517 0
 183 002e 2368     		ldr	r3, [r4]
 184 0030 9B68     		ldr	r3, [r3, #8]
 185 0032 37EA0303 		bics	r3, r7, r3
 186 0036 0CBF     		ite	eq
 187 0038 0123     		moveq	r3, #1
 188 003a 0023     		movne	r3, #0
 189 003c B342     		cmp	r3, r6
 190 003e 40D0     		beq	.L23
3519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 191              		.loc 1 3519 0
 192 0040 B5F1FF3F 		cmp	r5, #-1
 193 0044 F3D0     		beq	.L12
3521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 194              		.loc 1 3521 0
 195 0046 FFF7FEFF 		bl	HAL_GetTick
 196              	.LVL8:
 197 004a A0EB0900 		sub	r0, r0, r9
 198 004e 8045     		cmp	r8, r0
 199 0050 0AD9     		bls	.L13
3521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 200              		.loc 1 3521 0 is_stmt 0 discriminator 1
 201 0052 B8F1000F 		cmp	r8, #0
 202 0056 07D0     		beq	.L13
3551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 203              		.loc 1 3551 0 is_stmt 1
 204 0058 019B     		ldr	r3, [sp, #4]
 205 005a 0BB9     		cbnz	r3, .L19
3553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 206              		.loc 1 3553 0
 207 005c 4FF00008 		mov	r8, #0
 208              	.LVL9:
 209              	.L19:
3555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 210              		.loc 1 3555 0
 211 0060 019B     		ldr	r3, [sp, #4]
 212 0062 013B     		subs	r3, r3, #1
 213 0064 0193     		str	r3, [sp, #4]
 214 0066 E2E7     		b	.L12
 215              	.L13:
3528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 216              		.loc 1 3528 0
 217 0068 2268     		ldr	r2, [r4]
 218 006a 5368     		ldr	r3, [r2, #4]
 219 006c 23F0E003 		bic	r3, r3, #224
 220 0070 5360     		str	r3, [r2, #4]
3530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 221              		.loc 1 3530 0
 222 0072 6368     		ldr	r3, [r4, #4]
 223 0074 B3F5827F 		cmp	r3, #260
 224 0078 0BD0     		beq	.L24
 225              	.L15:
3538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 226              		.loc 1 3538 0
 227 007a A36A     		ldr	r3, [r4, #40]
 228 007c B3F5005F 		cmp	r3, #8192
ARM GAS  /tmp/ccVXEgNb.s 			page 74


 229 0080 14D0     		beq	.L25
 230              	.L17:
3543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 231              		.loc 1 3543 0
 232 0082 0123     		movs	r3, #1
 233 0084 84F85130 		strb	r3, [r4, #81]
3546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 234              		.loc 1 3546 0
 235 0088 0023     		movs	r3, #0
 236 008a 84F85030 		strb	r3, [r4, #80]
3548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 237              		.loc 1 3548 0
 238 008e 0320     		movs	r0, #3
 239 0090 18E0     		b	.L18
 240              	.L24:
3530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 241              		.loc 1 3530 0 discriminator 1
 242 0092 A368     		ldr	r3, [r4, #8]
 243 0094 B3F5004F 		cmp	r3, #32768
 244 0098 02D0     		beq	.L16
3531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 245              		.loc 1 3531 0
 246 009a B3F5806F 		cmp	r3, #1024
 247 009e ECD1     		bne	.L15
 248              	.L16:
3534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 249              		.loc 1 3534 0
 250 00a0 2268     		ldr	r2, [r4]
 251 00a2 1368     		ldr	r3, [r2]
 252 00a4 23F04003 		bic	r3, r3, #64
 253 00a8 1360     		str	r3, [r2]
 254 00aa E6E7     		b	.L15
 255              	.L25:
3540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 256              		.loc 1 3540 0
 257 00ac 2268     		ldr	r2, [r4]
 258 00ae 1368     		ldr	r3, [r2]
 259 00b0 23F40053 		bic	r3, r3, #8192
 260 00b4 1360     		str	r3, [r2]
 261 00b6 2268     		ldr	r2, [r4]
 262 00b8 1368     		ldr	r3, [r2]
 263 00ba 43F40053 		orr	r3, r3, #8192
 264 00be 1360     		str	r3, [r2]
 265 00c0 DFE7     		b	.L17
 266              	.L23:
3559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 267              		.loc 1 3559 0
 268 00c2 0020     		movs	r0, #0
 269              	.L18:
3560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 270              		.loc 1 3560 0
 271 00c4 03B0     		add	sp, sp, #12
 272              	.LCFI4:
 273              		.cfi_def_cfa_offset 28
 274              		@ sp needed
 275 00c6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 276              	.LVL10:
ARM GAS  /tmp/ccVXEgNb.s 			page 75


 277              	.L27:
 278 00ca 00BF     		.align	2
 279              	.L26:
 280 00cc 00000000 		.word	SystemCoreClock
 281              		.cfi_endproc
 282              	.LFE119:
 284              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 285              		.align	1
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu softvfp
 291              	SPI_EndRxTxTransaction:
 292              	.LFB121:
3621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Timeout in µs */
 293              		.loc 1 3621 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 8
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              	.LVL11:
 298 0000 30B5     		push	{r4, r5, lr}
 299              	.LCFI5:
 300              		.cfi_def_cfa_offset 12
 301              		.cfi_offset 4, -12
 302              		.cfi_offset 5, -8
 303              		.cfi_offset 14, -4
 304 0002 85B0     		sub	sp, sp, #20
 305              	.LCFI6:
 306              		.cfi_def_cfa_offset 32
3623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
 307              		.loc 1 3623 0
 308 0004 164C     		ldr	r4, .L34
 309 0006 2468     		ldr	r4, [r4]
 310 0008 164D     		ldr	r5, .L34+4
 311 000a A5FB0434 		umull	r3, r4, r5, r4
 312 000e 640D     		lsrs	r4, r4, #21
 313 0010 4FF47A75 		mov	r5, #1000
 314 0014 05FB04F4 		mul	r4, r5, r4
 315 0018 0394     		str	r4, [sp, #12]
3625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 316              		.loc 1 3625 0
 317 001a 4468     		ldr	r4, [r0, #4]
 318 001c B4F5827F 		cmp	r4, #260
 319 0020 0BD0     		beq	.L33
 320              	.L29:
3643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 321              		.loc 1 3643 0
 322 0022 039B     		ldr	r3, [sp, #12]
 323 0024 C3B1     		cbz	r3, .L31
3647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 324              		.loc 1 3647 0
 325 0026 039B     		ldr	r3, [sp, #12]
 326 0028 013B     		subs	r3, r3, #1
 327 002a 0393     		str	r3, [sp, #12]
3648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 328              		.loc 1 3648 0
 329 002c 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccVXEgNb.s 			page 76


 330 002e 9B68     		ldr	r3, [r3, #8]
 331 0030 13F0800F 		tst	r3, #128
 332 0034 F5D1     		bne	.L29
3651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 333              		.loc 1 3651 0
 334 0036 0023     		movs	r3, #0
 335 0038 0FE0     		b	.L30
 336              	.L33:
 337 003a 0B46     		mov	r3, r1
 338 003c 0446     		mov	r4, r0
3628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 339              		.loc 1 3628 0
 340 003e 0092     		str	r2, [sp]
 341 0040 0022     		movs	r2, #0
 342              	.LVL12:
 343 0042 8021     		movs	r1, #128
 344              	.LVL13:
 345 0044 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 346              	.LVL14:
 347 0048 0346     		mov	r3, r0
 348 004a 30B1     		cbz	r0, .L30
3630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
 349              		.loc 1 3630 0
 350 004c 636D     		ldr	r3, [r4, #84]
 351 004e 43F02003 		orr	r3, r3, #32
 352 0052 6365     		str	r3, [r4, #84]
3631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 353              		.loc 1 3631 0
 354 0054 0323     		movs	r3, #3
 355 0056 00E0     		b	.L30
 356              	.LVL15:
 357              	.L31:
3651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 358              		.loc 1 3651 0
 359 0058 0023     		movs	r3, #0
 360              	.LVL16:
 361              	.L30:
3652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 362              		.loc 1 3652 0
 363 005a 1846     		mov	r0, r3
 364 005c 05B0     		add	sp, sp, #20
 365              	.LCFI7:
 366              		.cfi_def_cfa_offset 12
 367              		@ sp needed
 368 005e 30BD     		pop	{r4, r5, pc}
 369              	.L35:
 370              		.align	2
 371              	.L34:
 372 0060 00000000 		.word	SystemCoreClock
 373 0064 819F5E16 		.word	375299969
 374              		.cfi_endproc
 375              	.LFE121:
 377              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 378              		.align	1
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
ARM GAS  /tmp/ccVXEgNb.s 			page 77


 382              		.fpu softvfp
 384              	SPI_EndRxTransaction:
 385              	.LFB120:
3571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 386              		.loc 1 3571 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              	.LVL17:
 391 0000 10B5     		push	{r4, lr}
 392              	.LCFI8:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 4, -8
 395              		.cfi_offset 14, -4
 396 0002 82B0     		sub	sp, sp, #8
 397              	.LCFI9:
 398              		.cfi_def_cfa_offset 16
 399 0004 0446     		mov	r4, r0
3572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 400              		.loc 1 3572 0
 401 0006 4068     		ldr	r0, [r0, #4]
 402              	.LVL18:
 403 0008 B0F5827F 		cmp	r0, #260
 404 000c 14D0     		beq	.L43
 405              	.L37:
3580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 406              		.loc 1 3580 0
 407 000e 6068     		ldr	r0, [r4, #4]
 408 0010 B0F5827F 		cmp	r0, #260
 409 0014 1DD0     		beq	.L44
3604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 410              		.loc 1 3604 0
 411 0016 0092     		str	r2, [sp]
 412 0018 0B46     		mov	r3, r1
 413 001a 0022     		movs	r2, #0
 414              	.LVL19:
 415 001c 0121     		movs	r1, #1
 416              	.LVL20:
 417 001e 2046     		mov	r0, r4
 418 0020 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 419              	.LVL21:
 420 0024 0346     		mov	r3, r0
 421 0026 20B1     		cbz	r0, .L41
3606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
 422              		.loc 1 3606 0
 423 0028 636D     		ldr	r3, [r4, #84]
 424 002a 43F02003 		orr	r3, r3, #32
 425 002e 6365     		str	r3, [r4, #84]
3607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 426              		.loc 1 3607 0
 427 0030 0323     		movs	r3, #3
 428              	.L41:
3611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 429              		.loc 1 3611 0
 430 0032 1846     		mov	r0, r3
 431 0034 02B0     		add	sp, sp, #8
 432              	.LCFI10:
ARM GAS  /tmp/ccVXEgNb.s 			page 78


 433              		.cfi_remember_state
 434              		.cfi_def_cfa_offset 8
 435              		@ sp needed
 436 0036 10BD     		pop	{r4, pc}
 437              	.LVL22:
 438              	.L43:
 439              	.LCFI11:
 440              		.cfi_restore_state
3572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 441              		.loc 1 3572 0 discriminator 1
 442 0038 A368     		ldr	r3, [r4, #8]
 443 003a B3F5004F 		cmp	r3, #32768
 444 003e 02D0     		beq	.L38
3573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 445              		.loc 1 3573 0
 446 0040 B3F5806F 		cmp	r3, #1024
 447 0044 E3D1     		bne	.L37
 448              	.L38:
3576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 449              		.loc 1 3576 0
 450 0046 2068     		ldr	r0, [r4]
 451 0048 0368     		ldr	r3, [r0]
 452 004a 23F04003 		bic	r3, r3, #64
 453 004e 0360     		str	r3, [r0]
 454 0050 DDE7     		b	.L37
 455              	.L44:
3582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 456              		.loc 1 3582 0
 457 0052 A368     		ldr	r3, [r4, #8]
 458 0054 B3F5806F 		cmp	r3, #1024
 459 0058 0FD0     		beq	.L40
3585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 460              		.loc 1 3585 0
 461 005a 0092     		str	r2, [sp]
 462 005c 0B46     		mov	r3, r1
 463 005e 0022     		movs	r2, #0
 464              	.LVL23:
 465 0060 8021     		movs	r1, #128
 466              	.LVL24:
 467 0062 2046     		mov	r0, r4
 468 0064 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 469              	.LVL25:
 470 0068 0346     		mov	r3, r0
 471 006a 0028     		cmp	r0, #0
 472 006c E1D0     		beq	.L41
3587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
 473              		.loc 1 3587 0
 474 006e 636D     		ldr	r3, [r4, #84]
 475 0070 43F02003 		orr	r3, r3, #32
 476 0074 6365     		str	r3, [r4, #84]
3588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 477              		.loc 1 3588 0
 478 0076 0323     		movs	r3, #3
 479 0078 DBE7     		b	.L41
 480              	.LVL26:
 481              	.L40:
3594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
ARM GAS  /tmp/ccVXEgNb.s 			page 79


 482              		.loc 1 3594 0
 483 007a 0092     		str	r2, [sp]
 484 007c 0B46     		mov	r3, r1
 485 007e 0022     		movs	r2, #0
 486              	.LVL27:
 487 0080 0121     		movs	r1, #1
 488              	.LVL28:
 489 0082 2046     		mov	r0, r4
 490 0084 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 491              	.LVL29:
 492 0088 0346     		mov	r3, r0
 493 008a 0028     		cmp	r0, #0
 494 008c D1D0     		beq	.L41
3596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
 495              		.loc 1 3596 0
 496 008e 636D     		ldr	r3, [r4, #84]
 497 0090 43F02003 		orr	r3, r3, #32
 498 0094 6365     		str	r3, [r4, #84]
3597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 499              		.loc 1 3597 0
 500 0096 0323     		movs	r3, #3
 501 0098 CBE7     		b	.L41
 502              		.cfi_endproc
 503              	.LFE120:
 505              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 506              		.align	1
 507              		.weak	HAL_SPI_MspInit
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu softvfp
 513              	HAL_SPI_MspInit:
 514              	.LFB74:
 491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 515              		.loc 1 491 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520              	.LVL30:
 521 0000 7047     		bx	lr
 522              		.cfi_endproc
 523              	.LFE74:
 525              		.section	.text.HAL_SPI_Init,"ax",%progbits
 526              		.align	1
 527              		.global	HAL_SPI_Init
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu softvfp
 533              	HAL_SPI_Init:
 534              	.LFB72:
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 535              		.loc 1 314 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccVXEgNb.s 			page 80


 539              	.LVL31:
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 540              		.loc 1 316 0
 541 0000 0028     		cmp	r0, #0
 542 0002 5AD0     		beq	.L51
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 543              		.loc 1 314 0
 544 0004 10B5     		push	{r4, lr}
 545              	.LCFI12:
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 4, -8
 548              		.cfi_offset 14, -4
 549 0006 0446     		mov	r4, r0
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 550              		.loc 1 332 0
 551 0008 436A     		ldr	r3, [r0, #36]
 552 000a 33B9     		cbnz	r3, .L48
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 553              		.loc 1 337 0
 554 000c 4368     		ldr	r3, [r0, #4]
 555 000e B3F5827F 		cmp	r3, #260
 556 0012 05D0     		beq	.L49
 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 557              		.loc 1 344 0
 558 0014 0023     		movs	r3, #0
 559 0016 C361     		str	r3, [r0, #28]
 560 0018 02E0     		b	.L49
 561              	.L48:
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 562              		.loc 1 352 0
 563 001a 0023     		movs	r3, #0
 564 001c 0361     		str	r3, [r0, #16]
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 565              		.loc 1 353 0
 566 001e 4361     		str	r3, [r0, #20]
 567              	.L49:
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 568              		.loc 1 362 0
 569 0020 0023     		movs	r3, #0
 570 0022 A362     		str	r3, [r4, #40]
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 571              		.loc 1 365 0
 572 0024 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 573 0028 002B     		cmp	r3, #0
 574 002a 40D0     		beq	.L56
 575              	.LVL32:
 576              	.L50:
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 577              		.loc 1 394 0
 578 002c 0223     		movs	r3, #2
 579 002e 84F85130 		strb	r3, [r4, #81]
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 580              		.loc 1 397 0
 581 0032 2268     		ldr	r2, [r4]
 582 0034 1368     		ldr	r3, [r2]
 583 0036 23F04003 		bic	r3, r3, #64
 584 003a 1360     		str	r3, [r2]
ARM GAS  /tmp/ccVXEgNb.s 			page 81


 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   (hspi->Init.Direction & (SPI_CR1_RXONLY | SPI_CR1_BIDIMODE)) |
 585              		.loc 1 402 0
 586 003c 2268     		ldr	r2, [r4]
 587 003e 6368     		ldr	r3, [r4, #4]
 588 0040 03F48273 		and	r3, r3, #260
 589 0044 A168     		ldr	r1, [r4, #8]
 590 0046 01F40441 		and	r1, r1, #33792
 591 004a 0B43     		orrs	r3, r3, r1
 592 004c E168     		ldr	r1, [r4, #12]
 593 004e 01F40061 		and	r1, r1, #2048
 594 0052 0B43     		orrs	r3, r3, r1
 595 0054 2169     		ldr	r1, [r4, #16]
 596 0056 01F00201 		and	r1, r1, #2
 597 005a 0B43     		orrs	r3, r3, r1
 598 005c 6169     		ldr	r1, [r4, #20]
 599 005e 01F00101 		and	r1, r1, #1
 600 0062 0B43     		orrs	r3, r3, r1
 601 0064 A169     		ldr	r1, [r4, #24]
 602 0066 01F40071 		and	r1, r1, #512
 603 006a 0B43     		orrs	r3, r3, r1
 604 006c E169     		ldr	r1, [r4, #28]
 605 006e 01F03801 		and	r1, r1, #56
 606 0072 0B43     		orrs	r3, r3, r1
 607 0074 216A     		ldr	r1, [r4, #32]
 608 0076 01F08001 		and	r1, r1, #128
 609 007a 0B43     		orrs	r3, r3, r1
 610 007c A16A     		ldr	r1, [r4, #40]
 611 007e 01F40051 		and	r1, r1, #8192
 612 0082 0B43     		orrs	r3, r3, r1
 613 0084 1360     		str	r3, [r2]
 414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 614              		.loc 1 414 0
 615 0086 2168     		ldr	r1, [r4]
 616 0088 638B     		ldrh	r3, [r4, #26]
 617 008a 03F00403 		and	r3, r3, #4
 618 008e 626A     		ldr	r2, [r4, #36]
 619 0090 02F01002 		and	r2, r2, #16
 620 0094 1343     		orrs	r3, r3, r2
 621 0096 4B60     		str	r3, [r1, #4]
 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 622              		.loc 1 431 0
 623 0098 2268     		ldr	r2, [r4]
 624 009a D369     		ldr	r3, [r2, #28]
 625 009c 23F40063 		bic	r3, r3, #2048
 626 00a0 D361     		str	r3, [r2, #28]
 434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 627              		.loc 1 434 0
 628 00a2 0020     		movs	r0, #0
 629 00a4 6065     		str	r0, [r4, #84]
 435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 630              		.loc 1 435 0
 631 00a6 0123     		movs	r3, #1
 632 00a8 84F85130 		strb	r3, [r4, #81]
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 633              		.loc 1 437 0
 634 00ac 10BD     		pop	{r4, pc}
 635              	.LVL33:
ARM GAS  /tmp/ccVXEgNb.s 			page 82


 636              	.L56:
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 637              		.loc 1 368 0
 638 00ae 84F85030 		strb	r3, [r4, #80]
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 639              		.loc 1 390 0
 640 00b2 2046     		mov	r0, r4
 641              	.LVL34:
 642 00b4 FFF7FEFF 		bl	HAL_SPI_MspInit
 643              	.LVL35:
 644 00b8 B8E7     		b	.L50
 645              	.LVL36:
 646              	.L51:
 647              	.LCFI13:
 648              		.cfi_def_cfa_offset 0
 649              		.cfi_restore 4
 650              		.cfi_restore 14
 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 651              		.loc 1 318 0
 652 00ba 0120     		movs	r0, #1
 653              	.LVL37:
 654 00bc 7047     		bx	lr
 655              		.cfi_endproc
 656              	.LFE72:
 658              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 659              		.align	1
 660              		.weak	HAL_SPI_MspDeInit
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 664              		.fpu softvfp
 666              	HAL_SPI_MspDeInit:
 667              	.LFB75:
 507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 668              		.loc 1 507 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673              	.LVL38:
 674 0000 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE75:
 678              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 679              		.align	1
 680              		.global	HAL_SPI_DeInit
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu softvfp
 686              	HAL_SPI_DeInit:
 687              	.LFB73:
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 688              		.loc 1 447 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccVXEgNb.s 			page 83


 692              	.LVL39:
 449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 693              		.loc 1 449 0
 694 0000 90B1     		cbz	r0, .L60
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 695              		.loc 1 447 0
 696 0002 10B5     		push	{r4, lr}
 697              	.LCFI14:
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0004 0446     		mov	r4, r0
 457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 702              		.loc 1 457 0
 703 0006 0223     		movs	r3, #2
 704 0008 80F85130 		strb	r3, [r0, #81]
 460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 705              		.loc 1 460 0
 706 000c 0268     		ldr	r2, [r0]
 707 000e 1368     		ldr	r3, [r2]
 708 0010 23F04003 		bic	r3, r3, #64
 709 0014 1360     		str	r3, [r2]
 472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 710              		.loc 1 472 0
 711 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 712              	.LVL40:
 475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 713              		.loc 1 475 0
 714 001a 0020     		movs	r0, #0
 715 001c 6065     		str	r0, [r4, #84]
 476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 716              		.loc 1 476 0
 717 001e 84F85100 		strb	r0, [r4, #81]
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 718              		.loc 1 479 0
 719 0022 84F85000 		strb	r0, [r4, #80]
 481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 720              		.loc 1 481 0
 721 0026 10BD     		pop	{r4, pc}
 722              	.LVL41:
 723              	.L60:
 724              	.LCFI15:
 725              		.cfi_def_cfa_offset 0
 726              		.cfi_restore 4
 727              		.cfi_restore 14
 451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 728              		.loc 1 451 0
 729 0028 0120     		movs	r0, #1
 730              	.LVL42:
 731 002a 7047     		bx	lr
 732              		.cfi_endproc
 733              	.LFE73:
 735              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 736              		.align	1
 737              		.global	HAL_SPI_Transmit
 738              		.syntax unified
 739              		.thumb
ARM GAS  /tmp/ccVXEgNb.s 			page 84


 740              		.thumb_func
 741              		.fpu softvfp
 743              	HAL_SPI_Transmit:
 744              	.LFB76:
 779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 745              		.loc 1 779 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 8
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              	.LVL43:
 750 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 751              	.LCFI16:
 752              		.cfi_def_cfa_offset 24
 753              		.cfi_offset 4, -24
 754              		.cfi_offset 5, -20
 755              		.cfi_offset 6, -16
 756              		.cfi_offset 7, -12
 757              		.cfi_offset 8, -8
 758              		.cfi_offset 14, -4
 759 0004 82B0     		sub	sp, sp, #8
 760              	.LCFI17:
 761              		.cfi_def_cfa_offset 32
 762              	.LVL44:
 788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 763              		.loc 1 788 0
 764 0006 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 765 000a 012C     		cmp	r4, #1
 766 000c 03D1     		bne	.L98
 767 000e 0220     		movs	r0, #2
 768              	.LVL45:
 769              	.L66:
 932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 770              		.loc 1 932 0
 771 0010 02B0     		add	sp, sp, #8
 772              	.LCFI18:
 773              		.cfi_remember_state
 774              		.cfi_def_cfa_offset 24
 775              		@ sp needed
 776 0012 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 777              	.LVL46:
 778              	.L98:
 779              	.LCFI19:
 780              		.cfi_restore_state
 781 0016 1D46     		mov	r5, r3
 782 0018 1746     		mov	r7, r2
 783 001a 8846     		mov	r8, r1
 784 001c 0446     		mov	r4, r0
 788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 785              		.loc 1 788 0 discriminator 2
 786 001e 0123     		movs	r3, #1
 787              	.LVL47:
 788 0020 80F85030 		strb	r3, [r0, #80]
 791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
 789              		.loc 1 791 0 discriminator 2
 790 0024 FFF7FEFF 		bl	HAL_GetTick
 791              	.LVL48:
 792 0028 0646     		mov	r6, r0
ARM GAS  /tmp/ccVXEgNb.s 			page 85


 793              	.LVL49:
 794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 794              		.loc 1 794 0 discriminator 2
 795 002a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 796 002e DBB2     		uxtb	r3, r3
 797 0030 012B     		cmp	r3, #1
 798 0032 07D0     		beq	.L99
 796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 799              		.loc 1 796 0
 800 0034 0220     		movs	r0, #2
 801              	.LVL50:
 802              	.L67:
 928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
 803              		.loc 1 928 0
 804 0036 0123     		movs	r3, #1
 805 0038 84F85130 		strb	r3, [r4, #81]
 930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 806              		.loc 1 930 0
 807 003c 0023     		movs	r3, #0
 808 003e 84F85030 		strb	r3, [r4, #80]
 931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 809              		.loc 1 931 0
 810 0042 E5E7     		b	.L66
 811              	.LVL51:
 812              	.L99:
 800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 813              		.loc 1 800 0
 814 0044 B8F1000F 		cmp	r8, #0
 815 0048 00F0A180 		beq	.L90
 800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 816              		.loc 1 800 0 is_stmt 0 discriminator 1
 817 004c 002F     		cmp	r7, #0
 818 004e 00F0A080 		beq	.L91
 807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 819              		.loc 1 807 0 is_stmt 1
 820 0052 0323     		movs	r3, #3
 821 0054 84F85130 		strb	r3, [r4, #81]
 808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 822              		.loc 1 808 0
 823 0058 0023     		movs	r3, #0
 824 005a 6365     		str	r3, [r4, #84]
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 825              		.loc 1 809 0
 826 005c C4F83080 		str	r8, [r4, #48]
 810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 827              		.loc 1 810 0
 828 0060 A786     		strh	r7, [r4, #52]	@ movhi
 811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 829              		.loc 1 811 0
 830 0062 E786     		strh	r7, [r4, #54]	@ movhi
 814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 831              		.loc 1 814 0
 832 0064 A363     		str	r3, [r4, #56]
 815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 833              		.loc 1 815 0
 834 0066 A387     		strh	r3, [r4, #60]	@ movhi
 816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
ARM GAS  /tmp/ccVXEgNb.s 			page 86


 835              		.loc 1 816 0
 836 0068 E387     		strh	r3, [r4, #62]	@ movhi
 817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 837              		.loc 1 817 0
 838 006a 6364     		str	r3, [r4, #68]
 818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 839              		.loc 1 818 0
 840 006c 2364     		str	r3, [r4, #64]
 821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 841              		.loc 1 821 0
 842 006e A368     		ldr	r3, [r4, #8]
 843 0070 B3F5004F 		cmp	r3, #32768
 844 0074 1DD0     		beq	.L100
 845              	.L68:
 837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 846              		.loc 1 837 0
 847 0076 2368     		ldr	r3, [r4]
 848 0078 1A68     		ldr	r2, [r3]
 849 007a 12F0400F 		tst	r2, #64
 850 007e 03D1     		bne	.L69
 840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 851              		.loc 1 840 0
 852 0080 1A68     		ldr	r2, [r3]
 853 0082 42F04002 		orr	r2, r2, #64
 854 0086 1A60     		str	r2, [r3]
 855              	.L69:
 844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 856              		.loc 1 844 0
 857 0088 E368     		ldr	r3, [r4, #12]
 858 008a B3F5006F 		cmp	r3, #2048
 859 008e 1BD0     		beq	.L101
 876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 860              		.loc 1 876 0
 861 0090 6368     		ldr	r3, [r4, #4]
 862 0092 0BB1     		cbz	r3, .L79
 876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 863              		.loc 1 876 0 is_stmt 0 discriminator 1
 864 0094 012F     		cmp	r7, #1
 865 0096 51D1     		bne	.L81
 866              	.L79:
 878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 867              		.loc 1 878 0 is_stmt 1
 868 0098 2368     		ldr	r3, [r4]
 869 009a 226B     		ldr	r2, [r4, #48]
 870 009c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 871 009e 1A73     		strb	r2, [r3, #12]
 879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 872              		.loc 1 879 0
 873 00a0 236B     		ldr	r3, [r4, #48]
 874 00a2 0133     		adds	r3, r3, #1
 875 00a4 2363     		str	r3, [r4, #48]
 880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 876              		.loc 1 880 0
 877 00a6 E38E     		ldrh	r3, [r4, #54]
 878 00a8 9BB2     		uxth	r3, r3
 879 00aa 013B     		subs	r3, r3, #1
 880 00ac 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccVXEgNb.s 			page 87


 881 00ae E386     		strh	r3, [r4, #54]	@ movhi
 882 00b0 44E0     		b	.L81
 883              	.L100:
 824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 884              		.loc 1 824 0
 885 00b2 2268     		ldr	r2, [r4]
 886 00b4 1368     		ldr	r3, [r2]
 887 00b6 23F04003 		bic	r3, r3, #64
 888 00ba 1360     		str	r3, [r2]
 825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 889              		.loc 1 825 0
 890 00bc 2268     		ldr	r2, [r4]
 891 00be 1368     		ldr	r3, [r2]
 892 00c0 43F48043 		orr	r3, r3, #16384
 893 00c4 1360     		str	r3, [r2]
 894 00c6 D6E7     		b	.L68
 895              	.L101:
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 896              		.loc 1 846 0
 897 00c8 6368     		ldr	r3, [r4, #4]
 898 00ca 0BB1     		cbz	r3, .L71
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 899              		.loc 1 846 0 is_stmt 0 discriminator 1
 900 00cc 012F     		cmp	r7, #1
 901 00ce 16D1     		bne	.L73
 902              	.L71:
 848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 903              		.loc 1 848 0 is_stmt 1
 904 00d0 2368     		ldr	r3, [r4]
 905 00d2 226B     		ldr	r2, [r4, #48]
 906 00d4 1288     		ldrh	r2, [r2]
 907 00d6 DA60     		str	r2, [r3, #12]
 849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 908              		.loc 1 849 0
 909 00d8 236B     		ldr	r3, [r4, #48]
 910 00da 0233     		adds	r3, r3, #2
 911 00dc 2363     		str	r3, [r4, #48]
 850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 912              		.loc 1 850 0
 913 00de E38E     		ldrh	r3, [r4, #54]
 914 00e0 9BB2     		uxth	r3, r3
 915 00e2 013B     		subs	r3, r3, #1
 916 00e4 9BB2     		uxth	r3, r3
 917 00e6 E386     		strh	r3, [r4, #54]	@ movhi
 918 00e8 09E0     		b	.L73
 919              	.LVL52:
 920              	.L74:
 865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 921              		.loc 1 865 0
 922 00ea FFF7FEFF 		bl	HAL_GetTick
 923              	.LVL53:
 924 00ee 801B     		subs	r0, r0, r6
 925 00f0 A842     		cmp	r0, r5
 926 00f2 02D3     		bcc	.L76
 865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 927              		.loc 1 865 0 is_stmt 0 discriminator 1
 928 00f4 B5F1FF3F 		cmp	r5, #-1
ARM GAS  /tmp/ccVXEgNb.s 			page 88


 929 00f8 4DD1     		bne	.L92
 930              	.L76:
 865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 931              		.loc 1 865 0 discriminator 3
 932 00fa 002D     		cmp	r5, #0
 933 00fc 4DD0     		beq	.L93
 934              	.L73:
 853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 935              		.loc 1 853 0 is_stmt 1
 936 00fe E38E     		ldrh	r3, [r4, #54]
 937 0100 9BB2     		uxth	r3, r3
 938 0102 002B     		cmp	r3, #0
 939 0104 2ED0     		beq	.L78
 856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 940              		.loc 1 856 0
 941 0106 2368     		ldr	r3, [r4]
 942 0108 9A68     		ldr	r2, [r3, #8]
 943 010a 12F0020F 		tst	r2, #2
 944 010e ECD0     		beq	.L74
 858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 945              		.loc 1 858 0
 946 0110 226B     		ldr	r2, [r4, #48]
 947 0112 1288     		ldrh	r2, [r2]
 948 0114 DA60     		str	r2, [r3, #12]
 859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 949              		.loc 1 859 0
 950 0116 236B     		ldr	r3, [r4, #48]
 951 0118 0233     		adds	r3, r3, #2
 952 011a 2363     		str	r3, [r4, #48]
 860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 953              		.loc 1 860 0
 954 011c E38E     		ldrh	r3, [r4, #54]
 955 011e 9BB2     		uxth	r3, r3
 956 0120 013B     		subs	r3, r3, #1
 957 0122 9BB2     		uxth	r3, r3
 958 0124 E386     		strh	r3, [r4, #54]	@ movhi
 959 0126 EAE7     		b	.L73
 960              	.L82:
 894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 961              		.loc 1 894 0
 962 0128 FFF7FEFF 		bl	HAL_GetTick
 963              	.LVL54:
 964 012c 801B     		subs	r0, r0, r6
 965 012e 8542     		cmp	r5, r0
 966 0130 02D8     		bhi	.L84
 894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 967              		.loc 1 894 0 is_stmt 0 discriminator 1
 968 0132 B5F1FF3F 		cmp	r5, #-1
 969 0136 32D1     		bne	.L94
 970              	.L84:
 894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 971              		.loc 1 894 0 discriminator 3
 972 0138 002D     		cmp	r5, #0
 973 013a 32D0     		beq	.L95
 974              	.L81:
 882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 975              		.loc 1 882 0 is_stmt 1
ARM GAS  /tmp/ccVXEgNb.s 			page 89


 976 013c E28E     		ldrh	r2, [r4, #54]
 977 013e 92B2     		uxth	r2, r2
 978 0140 82B1     		cbz	r2, .L78
 885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 979              		.loc 1 885 0
 980 0142 2368     		ldr	r3, [r4]
 981 0144 9A68     		ldr	r2, [r3, #8]
 982 0146 12F0020F 		tst	r2, #2
 983 014a EDD0     		beq	.L82
 887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 984              		.loc 1 887 0
 985 014c 226B     		ldr	r2, [r4, #48]
 986 014e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 987 0150 1A73     		strb	r2, [r3, #12]
 888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 988              		.loc 1 888 0
 989 0152 236B     		ldr	r3, [r4, #48]
 990 0154 0133     		adds	r3, r3, #1
 991 0156 2363     		str	r3, [r4, #48]
 889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 992              		.loc 1 889 0
 993 0158 E28E     		ldrh	r2, [r4, #54]
 994 015a 92B2     		uxth	r2, r2
 995 015c 013A     		subs	r2, r2, #1
 996 015e 92B2     		uxth	r2, r2
 997 0160 E286     		strh	r2, [r4, #54]	@ movhi
 998 0162 EBE7     		b	.L81
 999              	.L78:
 911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1000              		.loc 1 911 0
 1001 0164 3246     		mov	r2, r6
 1002 0166 2946     		mov	r1, r5
 1003 0168 2046     		mov	r0, r4
 1004 016a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1005              	.LVL55:
 1006 016e 08B1     		cbz	r0, .L86
 913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1007              		.loc 1 913 0
 1008 0170 2023     		movs	r3, #32
 1009 0172 6365     		str	r3, [r4, #84]
 1010              	.L86:
 917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1011              		.loc 1 917 0
 1012 0174 A368     		ldr	r3, [r4, #8]
 1013 0176 33B9     		cbnz	r3, .L87
 1014              	.LBB2:
 919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1015              		.loc 1 919 0
 1016 0178 0193     		str	r3, [sp, #4]
 1017 017a 2368     		ldr	r3, [r4]
 1018 017c DA68     		ldr	r2, [r3, #12]
 1019 017e 0192     		str	r2, [sp, #4]
 1020 0180 9B68     		ldr	r3, [r3, #8]
 1021 0182 0193     		str	r3, [sp, #4]
 1022 0184 019B     		ldr	r3, [sp, #4]
 1023              	.L87:
 1024              	.LBE2:
ARM GAS  /tmp/ccVXEgNb.s 			page 90


 922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1025              		.loc 1 922 0
 1026 0186 636D     		ldr	r3, [r4, #84]
 1027 0188 6BB9     		cbnz	r3, .L96
 781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 1028              		.loc 1 781 0
 1029 018a 0020     		movs	r0, #0
 1030 018c 53E7     		b	.L67
 1031              	.LVL56:
 1032              	.L90:
 802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1033              		.loc 1 802 0
 1034 018e 0120     		movs	r0, #1
 1035              	.LVL57:
 1036 0190 51E7     		b	.L67
 1037              	.LVL58:
 1038              	.L91:
 1039 0192 0120     		movs	r0, #1
 1040              	.LVL59:
 1041 0194 4FE7     		b	.L67
 1042              	.L92:
 867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 1043              		.loc 1 867 0
 1044 0196 0320     		movs	r0, #3
 1045 0198 4DE7     		b	.L67
 1046              	.L93:
 1047 019a 0320     		movs	r0, #3
 1048 019c 4BE7     		b	.L67
 1049              	.L94:
 896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 1050              		.loc 1 896 0
 1051 019e 0320     		movs	r0, #3
 1052 01a0 49E7     		b	.L67
 1053              	.L95:
 1054 01a2 0320     		movs	r0, #3
 1055 01a4 47E7     		b	.L67
 1056              	.L96:
 924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1057              		.loc 1 924 0
 1058 01a6 0120     		movs	r0, #1
 1059 01a8 45E7     		b	.L67
 1060              		.cfi_endproc
 1061              	.LFE76:
 1063              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1064              		.align	1
 1065              		.global	HAL_SPI_TransmitReceive
 1066              		.syntax unified
 1067              		.thumb
 1068              		.thumb_func
 1069              		.fpu softvfp
 1071              	HAL_SPI_TransmitReceive:
 1072              	.LFB78:
1143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 1073              		.loc 1 1143 0
 1074              		.cfi_startproc
 1075              		@ args = 4, pretend = 0, frame = 8
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccVXEgNb.s 			page 91


 1077              	.LVL60:
 1078 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1079              	.LCFI20:
 1080              		.cfi_def_cfa_offset 28
 1081              		.cfi_offset 4, -28
 1082              		.cfi_offset 5, -24
 1083              		.cfi_offset 6, -20
 1084              		.cfi_offset 7, -16
 1085              		.cfi_offset 8, -12
 1086              		.cfi_offset 9, -8
 1087              		.cfi_offset 14, -4
 1088 0004 83B0     		sub	sp, sp, #12
 1089              	.LCFI21:
 1090              		.cfi_def_cfa_offset 40
 1091 0006 0A9D     		ldr	r5, [sp, #40]
 1092              	.LVL61:
1160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1093              		.loc 1 1160 0
 1094 0008 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1095 000c 012C     		cmp	r4, #1
 1096 000e 04D1     		bne	.L135
 1097 0010 0223     		movs	r3, #2
 1098              	.LVL62:
 1099              	.L103:
1355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1100              		.loc 1 1355 0
 1101 0012 1846     		mov	r0, r3
 1102 0014 03B0     		add	sp, sp, #12
 1103              	.LCFI22:
 1104              		.cfi_remember_state
 1105              		.cfi_def_cfa_offset 28
 1106              		@ sp needed
 1107 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1108              	.LVL63:
 1109              	.L135:
 1110              	.LCFI23:
 1111              		.cfi_restore_state
 1112 001a 1E46     		mov	r6, r3
 1113 001c 9046     		mov	r8, r2
 1114 001e 0F46     		mov	r7, r1
 1115 0020 0446     		mov	r4, r0
1160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1116              		.loc 1 1160 0 discriminator 2
 1117 0022 0123     		movs	r3, #1
 1118              	.LVL64:
 1119 0024 80F85030 		strb	r3, [r0, #80]
1163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1120              		.loc 1 1163 0 discriminator 2
 1121 0028 FFF7FEFF 		bl	HAL_GetTick
 1122              	.LVL65:
 1123 002c 8146     		mov	r9, r0
 1124              	.LVL66:
1166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1125              		.loc 1 1166 0 discriminator 2
 1126 002e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1127 0032 DBB2     		uxtb	r3, r3
 1128              	.LVL67:
ARM GAS  /tmp/ccVXEgNb.s 			page 92


1167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
 1129              		.loc 1 1167 0 discriminator 2
 1130 0034 6268     		ldr	r2, [r4, #4]
 1131              	.LVL68:
1170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1132              		.loc 1 1170 0 discriminator 2
 1133 0036 012B     		cmp	r3, #1
 1134 0038 12D0     		beq	.L104
1170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1135              		.loc 1 1170 0 is_stmt 0 discriminator 1
 1136 003a B2F5827F 		cmp	r2, #260
 1137 003e 07D0     		beq	.L136
1173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1138              		.loc 1 1173 0 is_stmt 1
 1139 0040 0223     		movs	r3, #2
 1140              	.LVL69:
 1141              	.L105:
1352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1142              		.loc 1 1352 0
 1143 0042 0122     		movs	r2, #1
 1144 0044 84F85120 		strb	r2, [r4, #81]
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1145              		.loc 1 1353 0
 1146 0048 0022     		movs	r2, #0
 1147 004a 84F85020 		strb	r2, [r4, #80]
1354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1148              		.loc 1 1354 0
 1149 004e E0E7     		b	.L103
 1150              	.LVL70:
 1151              	.L136:
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1152              		.loc 1 1171 0
 1153 0050 A268     		ldr	r2, [r4, #8]
 1154              	.LVL71:
 1155 0052 002A     		cmp	r2, #0
 1156 0054 40F0E280 		bne	.L126
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1157              		.loc 1 1171 0 is_stmt 0 discriminator 1
 1158 0058 042B     		cmp	r3, #4
 1159 005a 01D0     		beq	.L104
1173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1160              		.loc 1 1173 0 is_stmt 1
 1161 005c 0223     		movs	r3, #2
 1162              	.LVL72:
 1163 005e F0E7     		b	.L105
 1164              	.LVL73:
 1165              	.L104:
1177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1166              		.loc 1 1177 0
 1167 0060 002F     		cmp	r7, #0
 1168 0062 00F0DD80 		beq	.L128
1177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1169              		.loc 1 1177 0 is_stmt 0 discriminator 1
 1170 0066 B8F1000F 		cmp	r8, #0
 1171 006a 00F0DB80 		beq	.L129
1177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1172              		.loc 1 1177 0 discriminator 2
ARM GAS  /tmp/ccVXEgNb.s 			page 93


 1173 006e 002E     		cmp	r6, #0
 1174 0070 00F0DA80 		beq	.L130
1184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1175              		.loc 1 1184 0 is_stmt 1
 1176 0074 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1177              	.LVL74:
 1178 0078 DBB2     		uxtb	r3, r3
 1179 007a 042B     		cmp	r3, #4
 1180 007c 02D0     		beq	.L106
1186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1181              		.loc 1 1186 0
 1182 007e 0523     		movs	r3, #5
 1183 0080 84F85130 		strb	r3, [r4, #81]
 1184              	.L106:
1190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1185              		.loc 1 1190 0
 1186 0084 0023     		movs	r3, #0
 1187 0086 6365     		str	r3, [r4, #84]
1191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1188              		.loc 1 1191 0
 1189 0088 C4F83880 		str	r8, [r4, #56]
1192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1190              		.loc 1 1192 0
 1191 008c E687     		strh	r6, [r4, #62]	@ movhi
1193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1192              		.loc 1 1193 0
 1193 008e A687     		strh	r6, [r4, #60]	@ movhi
1194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1194              		.loc 1 1194 0
 1195 0090 2763     		str	r7, [r4, #48]
1195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1196              		.loc 1 1195 0
 1197 0092 E686     		strh	r6, [r4, #54]	@ movhi
1196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1198              		.loc 1 1196 0
 1199 0094 A686     		strh	r6, [r4, #52]	@ movhi
1199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1200              		.loc 1 1199 0
 1201 0096 2364     		str	r3, [r4, #64]
1200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1202              		.loc 1 1200 0
 1203 0098 6364     		str	r3, [r4, #68]
1211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1204              		.loc 1 1211 0
 1205 009a 2368     		ldr	r3, [r4]
 1206 009c 1A68     		ldr	r2, [r3]
 1207 009e 12F0400F 		tst	r2, #64
 1208 00a2 03D1     		bne	.L107
1214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1209              		.loc 1 1214 0
 1210 00a4 1A68     		ldr	r2, [r3]
 1211 00a6 42F04002 		orr	r2, r2, #64
 1212 00aa 1A60     		str	r2, [r3]
 1213              	.LVL75:
 1214              	.L107:
1218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1215              		.loc 1 1218 0
ARM GAS  /tmp/ccVXEgNb.s 			page 94


 1216 00ac E368     		ldr	r3, [r4, #12]
 1217 00ae B3F5006F 		cmp	r3, #2048
 1218 00b2 11D0     		beq	.L137
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1219              		.loc 1 1265 0
 1220 00b4 6368     		ldr	r3, [r4, #4]
 1221 00b6 0BB1     		cbz	r3, .L116
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1222              		.loc 1 1265 0 is_stmt 0 discriminator 1
 1223 00b8 012E     		cmp	r6, #1
 1224 00ba 0BD1     		bne	.L117
 1225              	.L116:
1267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 1226              		.loc 1 1267 0 is_stmt 1
 1227 00bc 2368     		ldr	r3, [r4]
 1228 00be 226B     		ldr	r2, [r4, #48]
 1229 00c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1230 00c2 1A73     		strb	r2, [r3, #12]
1268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 1231              		.loc 1 1268 0
 1232 00c4 236B     		ldr	r3, [r4, #48]
 1233 00c6 0133     		adds	r3, r3, #1
 1234 00c8 2363     		str	r3, [r4, #48]
1269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 1235              		.loc 1 1269 0
 1236 00ca E38E     		ldrh	r3, [r4, #54]
 1237 00cc 9BB2     		uxth	r3, r3
 1238 00ce 013B     		subs	r3, r3, #1
 1239 00d0 9BB2     		uxth	r3, r3
 1240 00d2 E386     		strh	r3, [r4, #54]	@ movhi
 1241              	.L117:
1298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1242              		.loc 1 1298 0
 1243 00d4 0126     		movs	r6, #1
 1244              	.LVL76:
 1245 00d6 6CE0     		b	.L121
 1246              	.LVL77:
 1247              	.L137:
1220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1248              		.loc 1 1220 0
 1249 00d8 6368     		ldr	r3, [r4, #4]
 1250 00da 0BB1     		cbz	r3, .L109
1220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1251              		.loc 1 1220 0 is_stmt 0 discriminator 1
 1252 00dc 012E     		cmp	r6, #1
 1253 00de 0BD1     		bne	.L110
 1254              	.L109:
1222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1255              		.loc 1 1222 0 is_stmt 1
 1256 00e0 2368     		ldr	r3, [r4]
 1257 00e2 226B     		ldr	r2, [r4, #48]
 1258 00e4 1288     		ldrh	r2, [r2]
 1259 00e6 DA60     		str	r2, [r3, #12]
1223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 1260              		.loc 1 1223 0
 1261 00e8 236B     		ldr	r3, [r4, #48]
 1262 00ea 0233     		adds	r3, r3, #2
ARM GAS  /tmp/ccVXEgNb.s 			page 95


 1263 00ec 2363     		str	r3, [r4, #48]
1224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 1264              		.loc 1 1224 0
 1265 00ee E38E     		ldrh	r3, [r4, #54]
 1266 00f0 9BB2     		uxth	r3, r3
 1267 00f2 013B     		subs	r3, r3, #1
 1268 00f4 9BB2     		uxth	r3, r3
 1269 00f6 E386     		strh	r3, [r4, #54]	@ movhi
 1270              	.L110:
1253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1271              		.loc 1 1253 0
 1272 00f8 0126     		movs	r6, #1
 1273              	.LVL78:
 1274 00fa 1CE0     		b	.L111
 1275              	.LVL79:
 1276              	.L112:
1247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1277              		.loc 1 1247 0
 1278 00fc 2368     		ldr	r3, [r4]
 1279 00fe 9A68     		ldr	r2, [r3, #8]
 1280 0100 12F0010F 		tst	r2, #1
 1281 0104 0ED0     		beq	.L113
1247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1282              		.loc 1 1247 0 is_stmt 0 discriminator 1
 1283 0106 E28F     		ldrh	r2, [r4, #62]
 1284 0108 92B2     		uxth	r2, r2
 1285 010a 5AB1     		cbz	r2, .L113
1249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1286              		.loc 1 1249 0 is_stmt 1
 1287 010c A26B     		ldr	r2, [r4, #56]
 1288 010e DB68     		ldr	r3, [r3, #12]
 1289 0110 1380     		strh	r3, [r2]	@ movhi
1250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1290              		.loc 1 1250 0
 1291 0112 A36B     		ldr	r3, [r4, #56]
 1292 0114 0233     		adds	r3, r3, #2
 1293 0116 A363     		str	r3, [r4, #56]
1251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1294              		.loc 1 1251 0
 1295 0118 E38F     		ldrh	r3, [r4, #62]
 1296 011a 9BB2     		uxth	r3, r3
 1297 011c 013B     		subs	r3, r3, #1
 1298 011e 9BB2     		uxth	r3, r3
 1299 0120 E387     		strh	r3, [r4, #62]	@ movhi
 1300              	.LVL80:
1253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1301              		.loc 1 1253 0
 1302 0122 0126     		movs	r6, #1
 1303              	.LVL81:
 1304              	.L113:
1255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1305              		.loc 1 1255 0
 1306 0124 FFF7FEFF 		bl	HAL_GetTick
 1307              	.LVL82:
 1308 0128 A0EB0900 		sub	r0, r0, r9
 1309 012c A842     		cmp	r0, r5
 1310 012e 02D3     		bcc	.L111
ARM GAS  /tmp/ccVXEgNb.s 			page 96


1255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1311              		.loc 1 1255 0 is_stmt 0 discriminator 1
 1312 0130 B5F1FF3F 		cmp	r5, #-1
 1313 0134 7AD1     		bne	.L131
 1314              	.LVL83:
 1315              	.L111:
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1316              		.loc 1 1226 0 is_stmt 1
 1317 0136 E38E     		ldrh	r3, [r4, #54]
 1318 0138 9BB2     		uxth	r3, r3
 1319 013a 1BB9     		cbnz	r3, .L114
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1320              		.loc 1 1226 0 is_stmt 0 discriminator 1
 1321 013c E38F     		ldrh	r3, [r4, #62]
 1322 013e 9BB2     		uxth	r3, r3
 1323 0140 002B     		cmp	r3, #0
 1324 0142 54D0     		beq	.L115
 1325              	.L114:
1229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1326              		.loc 1 1229 0 is_stmt 1
 1327 0144 2368     		ldr	r3, [r4]
 1328 0146 9A68     		ldr	r2, [r3, #8]
 1329 0148 12F0020F 		tst	r2, #2
 1330 014c D6D0     		beq	.L112
1229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1331              		.loc 1 1229 0 is_stmt 0 discriminator 1
 1332 014e E28E     		ldrh	r2, [r4, #54]
 1333 0150 92B2     		uxth	r2, r2
 1334 0152 002A     		cmp	r2, #0
 1335 0154 D2D0     		beq	.L112
1229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1336              		.loc 1 1229 0 discriminator 2
 1337 0156 002E     		cmp	r6, #0
 1338 0158 D0D0     		beq	.L112
1231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1339              		.loc 1 1231 0 is_stmt 1
 1340 015a 226B     		ldr	r2, [r4, #48]
 1341 015c 1288     		ldrh	r2, [r2]
 1342 015e DA60     		str	r2, [r3, #12]
1232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 1343              		.loc 1 1232 0
 1344 0160 236B     		ldr	r3, [r4, #48]
 1345 0162 0233     		adds	r3, r3, #2
 1346 0164 2363     		str	r3, [r4, #48]
1233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1347              		.loc 1 1233 0
 1348 0166 E38E     		ldrh	r3, [r4, #54]
 1349 0168 9BB2     		uxth	r3, r3
 1350 016a 013B     		subs	r3, r3, #1
 1351 016c 9BB2     		uxth	r3, r3
 1352 016e E386     		strh	r3, [r4, #54]	@ movhi
 1353              	.LVL84:
1235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1354              		.loc 1 1235 0
 1355 0170 0026     		movs	r6, #0
 1356 0172 C3E7     		b	.L112
 1357              	.LVL85:
ARM GAS  /tmp/ccVXEgNb.s 			page 97


 1358              	.L118:
1292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1359              		.loc 1 1292 0
 1360 0174 2368     		ldr	r3, [r4]
 1361 0176 9A68     		ldr	r2, [r3, #8]
 1362 0178 12F0010F 		tst	r2, #1
 1363 017c 0ED0     		beq	.L119
1292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1364              		.loc 1 1292 0 is_stmt 0 discriminator 1
 1365 017e E28F     		ldrh	r2, [r4, #62]
 1366 0180 92B2     		uxth	r2, r2
 1367 0182 5AB1     		cbz	r2, .L119
1294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
 1368              		.loc 1 1294 0 is_stmt 1
 1369 0184 A26B     		ldr	r2, [r4, #56]
 1370 0186 DB68     		ldr	r3, [r3, #12]
 1371 0188 1370     		strb	r3, [r2]
1295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1372              		.loc 1 1295 0
 1373 018a A36B     		ldr	r3, [r4, #56]
 1374 018c 0133     		adds	r3, r3, #1
 1375 018e A363     		str	r3, [r4, #56]
1296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1376              		.loc 1 1296 0
 1377 0190 E38F     		ldrh	r3, [r4, #62]
 1378 0192 9BB2     		uxth	r3, r3
 1379 0194 013B     		subs	r3, r3, #1
 1380 0196 9BB2     		uxth	r3, r3
 1381 0198 E387     		strh	r3, [r4, #62]	@ movhi
 1382              	.LVL86:
1298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1383              		.loc 1 1298 0
 1384 019a 0126     		movs	r6, #1
 1385              	.LVL87:
 1386              	.L119:
1300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1387              		.loc 1 1300 0
 1388 019c FFF7FEFF 		bl	HAL_GetTick
 1389              	.LVL88:
 1390 01a0 A0EB0900 		sub	r0, r0, r9
 1391 01a4 8542     		cmp	r5, r0
 1392 01a6 02D8     		bhi	.L120
1300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1393              		.loc 1 1300 0 is_stmt 0 discriminator 1
 1394 01a8 B5F1FF3F 		cmp	r5, #-1
 1395 01ac 40D1     		bne	.L132
 1396              	.L120:
1300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1397              		.loc 1 1300 0 discriminator 3
 1398 01ae 002D     		cmp	r5, #0
 1399 01b0 40D0     		beq	.L138
 1400              	.LVL89:
 1401              	.L121:
1271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1402              		.loc 1 1271 0 is_stmt 1
 1403 01b2 E38E     		ldrh	r3, [r4, #54]
 1404 01b4 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccVXEgNb.s 			page 98


 1405 01b6 13B9     		cbnz	r3, .L122
1271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1406              		.loc 1 1271 0 is_stmt 0 discriminator 1
 1407 01b8 E38F     		ldrh	r3, [r4, #62]
 1408 01ba 9BB2     		uxth	r3, r3
 1409 01bc BBB1     		cbz	r3, .L115
 1410              	.L122:
1274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1411              		.loc 1 1274 0 is_stmt 1
 1412 01be 2368     		ldr	r3, [r4]
 1413 01c0 9A68     		ldr	r2, [r3, #8]
 1414 01c2 12F0020F 		tst	r2, #2
 1415 01c6 D5D0     		beq	.L118
1274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1416              		.loc 1 1274 0 is_stmt 0 discriminator 1
 1417 01c8 E28E     		ldrh	r2, [r4, #54]
 1418 01ca 92B2     		uxth	r2, r2
 1419 01cc 002A     		cmp	r2, #0
 1420 01ce D1D0     		beq	.L118
1274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1421              		.loc 1 1274 0 discriminator 2
 1422 01d0 002E     		cmp	r6, #0
 1423 01d2 CFD0     		beq	.L118
1276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1424              		.loc 1 1276 0 is_stmt 1
 1425 01d4 226B     		ldr	r2, [r4, #48]
 1426 01d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1427 01d8 1A73     		strb	r2, [r3, #12]
1277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 1428              		.loc 1 1277 0
 1429 01da 236B     		ldr	r3, [r4, #48]
 1430 01dc 0133     		adds	r3, r3, #1
 1431 01de 2363     		str	r3, [r4, #48]
1278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1432              		.loc 1 1278 0
 1433 01e0 E38E     		ldrh	r3, [r4, #54]
 1434 01e2 9BB2     		uxth	r3, r3
 1435 01e4 013B     		subs	r3, r3, #1
 1436 01e6 9BB2     		uxth	r3, r3
 1437 01e8 E386     		strh	r3, [r4, #54]	@ movhi
 1438              	.LVL90:
1280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1439              		.loc 1 1280 0
 1440 01ea 0026     		movs	r6, #0
 1441 01ec C2E7     		b	.L118
 1442              	.LVL91:
 1443              	.L115:
1338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1444              		.loc 1 1338 0
 1445 01ee 4A46     		mov	r2, r9
 1446 01f0 2946     		mov	r1, r5
 1447 01f2 2046     		mov	r0, r4
 1448 01f4 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1449              	.LVL92:
 1450 01f8 0346     		mov	r3, r0
 1451 01fa 18B1     		cbz	r0, .L123
 1452              	.LVL93:
ARM GAS  /tmp/ccVXEgNb.s 			page 99


1341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1453              		.loc 1 1341 0
 1454 01fc 2023     		movs	r3, #32
 1455 01fe 6365     		str	r3, [r4, #84]
1340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1456              		.loc 1 1340 0
 1457 0200 0123     		movs	r3, #1
1342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1458              		.loc 1 1342 0
 1459 0202 1EE7     		b	.L105
 1460              	.LVL94:
 1461              	.L123:
1346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1462              		.loc 1 1346 0
 1463 0204 A268     		ldr	r2, [r4, #8]
 1464 0206 002A     		cmp	r2, #0
 1465 0208 7FF41BAF 		bne	.L105
 1466              	.LBB3:
1348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1467              		.loc 1 1348 0
 1468 020c 0192     		str	r2, [sp, #4]
 1469 020e 2268     		ldr	r2, [r4]
 1470 0210 D168     		ldr	r1, [r2, #12]
 1471 0212 0191     		str	r1, [sp, #4]
 1472 0214 9268     		ldr	r2, [r2, #8]
 1473 0216 0192     		str	r2, [sp, #4]
 1474 0218 019A     		ldr	r2, [sp, #4]
 1475 021a 12E7     		b	.L105
 1476              	.LVL95:
 1477              	.L126:
 1478              	.LBE3:
1173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1479              		.loc 1 1173 0
 1480 021c 0223     		movs	r3, #2
 1481              	.LVL96:
 1482 021e 10E7     		b	.L105
 1483              	.LVL97:
 1484              	.L128:
1179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1485              		.loc 1 1179 0
 1486 0220 0123     		movs	r3, #1
 1487              	.LVL98:
 1488 0222 0EE7     		b	.L105
 1489              	.LVL99:
 1490              	.L129:
 1491 0224 0123     		movs	r3, #1
 1492              	.LVL100:
 1493 0226 0CE7     		b	.L105
 1494              	.LVL101:
 1495              	.L130:
 1496 0228 0123     		movs	r3, #1
 1497              	.LVL102:
 1498 022a 0AE7     		b	.L105
 1499              	.LVL103:
 1500              	.L131:
1257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
 1501              		.loc 1 1257 0
ARM GAS  /tmp/ccVXEgNb.s 			page 100


 1502 022c 0323     		movs	r3, #3
 1503 022e 08E7     		b	.L105
 1504              	.L132:
1302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
 1505              		.loc 1 1302 0
 1506 0230 0323     		movs	r3, #3
 1507 0232 06E7     		b	.L105
 1508              	.L138:
 1509 0234 0323     		movs	r3, #3
 1510 0236 04E7     		b	.L105
 1511              		.cfi_endproc
 1512              	.LFE78:
 1514              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1515              		.align	1
 1516              		.global	HAL_SPI_Receive
 1517              		.syntax unified
 1518              		.thumb
 1519              		.thumb_func
 1520              		.fpu softvfp
 1522              	HAL_SPI_Receive:
 1523              	.LFB77:
 944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 1524              		.loc 1 944 0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 1528              	.LVL104:
 1529 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1530              	.LCFI24:
 1531              		.cfi_def_cfa_offset 24
 1532              		.cfi_offset 4, -24
 1533              		.cfi_offset 5, -20
 1534              		.cfi_offset 6, -16
 1535              		.cfi_offset 7, -12
 1536              		.cfi_offset 8, -8
 1537              		.cfi_offset 14, -4
 1538 0004 82B0     		sub	sp, sp, #8
 1539              	.LCFI25:
 1540              		.cfi_def_cfa_offset 32
 1541 0006 0446     		mov	r4, r0
 1542 0008 0F46     		mov	r7, r1
 1543 000a 9046     		mov	r8, r2
 1544 000c 1D46     		mov	r5, r3
 1545              	.LVL105:
 951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1546              		.loc 1 951 0
 1547 000e 4368     		ldr	r3, [r0, #4]
 1548              	.LVL106:
 1549 0010 B3F5827F 		cmp	r3, #260
 1550 0014 07D0     		beq	.L167
 1551              	.L140:
 959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1552              		.loc 1 959 0
 1553 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1554 001a 012B     		cmp	r3, #1
 1555 001c 0FD1     		bne	.L168
 1556 001e 0220     		movs	r0, #2
ARM GAS  /tmp/ccVXEgNb.s 			page 101


 1557              	.LVL107:
 1558              	.L141:
1129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1559              		.loc 1 1129 0
 1560 0020 02B0     		add	sp, sp, #8
 1561              	.LCFI26:
 1562              		.cfi_remember_state
 1563              		.cfi_def_cfa_offset 24
 1564              		@ sp needed
 1565 0022 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1566              	.LVL108:
 1567              	.L167:
 1568              	.LCFI27:
 1569              		.cfi_restore_state
 951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1570              		.loc 1 951 0 discriminator 1
 1571 0026 8368     		ldr	r3, [r0, #8]
 1572 0028 002B     		cmp	r3, #0
 1573 002a F4D1     		bne	.L140
 953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 1574              		.loc 1 953 0
 1575 002c 0423     		movs	r3, #4
 1576 002e 80F85130 		strb	r3, [r0, #81]
 955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1577              		.loc 1 955 0
 1578 0032 0095     		str	r5, [sp]
 1579 0034 1346     		mov	r3, r2
 1580 0036 0A46     		mov	r2, r1
 1581              	.LVL109:
 1582 0038 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1583              	.LVL110:
 1584 003c F0E7     		b	.L141
 1585              	.LVL111:
 1586              	.L168:
 959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1587              		.loc 1 959 0 discriminator 2
 1588 003e 0123     		movs	r3, #1
 1589 0040 84F85030 		strb	r3, [r4, #80]
 962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1590              		.loc 1 962 0 discriminator 2
 1591 0044 FFF7FEFF 		bl	HAL_GetTick
 1592              	.LVL112:
 1593 0048 0646     		mov	r6, r0
 1594              	.LVL113:
 964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1595              		.loc 1 964 0 discriminator 2
 1596 004a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1597 004e DBB2     		uxtb	r3, r3
 1598 0050 012B     		cmp	r3, #1
 1599 0052 07D0     		beq	.L169
 966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1600              		.loc 1 966 0
 1601 0054 0220     		movs	r0, #2
 1602              	.LVL114:
 1603              	.L142:
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1604              		.loc 1 1126 0
ARM GAS  /tmp/ccVXEgNb.s 			page 102


 1605 0056 0123     		movs	r3, #1
 1606 0058 84F85130 		strb	r3, [r4, #81]
1127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1607              		.loc 1 1127 0
 1608 005c 0023     		movs	r3, #0
 1609 005e 84F85030 		strb	r3, [r4, #80]
1128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1610              		.loc 1 1128 0
 1611 0062 DDE7     		b	.L141
 1612              	.LVL115:
 1613              	.L169:
 970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1614              		.loc 1 970 0
 1615 0064 002F     		cmp	r7, #0
 1616 0066 74D0     		beq	.L159
 970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1617              		.loc 1 970 0 is_stmt 0 discriminator 1
 1618 0068 B8F1000F 		cmp	r8, #0
 1619 006c 73D0     		beq	.L160
 977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1620              		.loc 1 977 0 is_stmt 1
 1621 006e 0423     		movs	r3, #4
 1622 0070 84F85130 		strb	r3, [r4, #81]
 978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1623              		.loc 1 978 0
 1624 0074 0023     		movs	r3, #0
 1625 0076 6365     		str	r3, [r4, #84]
 979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1626              		.loc 1 979 0
 1627 0078 A763     		str	r7, [r4, #56]
 980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1628              		.loc 1 980 0
 1629 007a A4F83C80 		strh	r8, [r4, #60]	@ movhi
 981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1630              		.loc 1 981 0
 1631 007e A4F83E80 		strh	r8, [r4, #62]	@ movhi
 984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1632              		.loc 1 984 0
 1633 0082 2363     		str	r3, [r4, #48]
 985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1634              		.loc 1 985 0
 1635 0084 A386     		strh	r3, [r4, #52]	@ movhi
 986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1636              		.loc 1 986 0
 1637 0086 E386     		strh	r3, [r4, #54]	@ movhi
 987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1638              		.loc 1 987 0
 1639 0088 2364     		str	r3, [r4, #64]
 988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1640              		.loc 1 988 0
 1641 008a 6364     		str	r3, [r4, #68]
1001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1642              		.loc 1 1001 0
 1643 008c A368     		ldr	r3, [r4, #8]
 1644 008e B3F5004F 		cmp	r3, #32768
 1645 0092 0BD0     		beq	.L170
 1646              	.L143:
ARM GAS  /tmp/ccVXEgNb.s 			page 103


1009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1647              		.loc 1 1009 0
 1648 0094 2368     		ldr	r3, [r4]
 1649 0096 1A68     		ldr	r2, [r3]
 1650 0098 12F0400F 		tst	r2, #64
 1651 009c 03D1     		bne	.L144
1012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1652              		.loc 1 1012 0
 1653 009e 1A68     		ldr	r2, [r3]
 1654 00a0 42F04002 		orr	r2, r2, #64
 1655 00a4 1A60     		str	r2, [r3]
 1656              	.L144:
1016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1657              		.loc 1 1016 0
 1658 00a6 E368     		ldr	r3, [r4, #12]
 1659 00a8 ABB1     		cbz	r3, .L145
 1660 00aa 32E0     		b	.L146
 1661              	.L170:
1004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 1662              		.loc 1 1004 0
 1663 00ac 2268     		ldr	r2, [r4]
 1664 00ae 1368     		ldr	r3, [r2]
 1665 00b0 23F04003 		bic	r3, r3, #64
 1666 00b4 1360     		str	r3, [r2]
1005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1667              		.loc 1 1005 0
 1668 00b6 2268     		ldr	r2, [r4]
 1669 00b8 1368     		ldr	r3, [r2]
 1670 00ba 23F48043 		bic	r3, r3, #16384
 1671 00be 1360     		str	r3, [r2]
 1672 00c0 E8E7     		b	.L143
 1673              	.LVL116:
 1674              	.L147:
1032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1675              		.loc 1 1032 0
 1676 00c2 FFF7FEFF 		bl	HAL_GetTick
 1677              	.LVL117:
 1678 00c6 801B     		subs	r0, r0, r6
 1679 00c8 8542     		cmp	r5, r0
 1680 00ca 02D8     		bhi	.L149
1032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1681              		.loc 1 1032 0 is_stmt 0 discriminator 1
 1682 00cc B5F1FF3F 		cmp	r5, #-1
 1683 00d0 43D1     		bne	.L161
 1684              	.L149:
1032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1685              		.loc 1 1032 0 discriminator 3
 1686 00d2 002D     		cmp	r5, #0
 1687 00d4 43D0     		beq	.L162
 1688              	.L145:
1019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1689              		.loc 1 1019 0 is_stmt 1
 1690 00d6 E38F     		ldrh	r3, [r4, #62]
 1691 00d8 9BB2     		uxth	r3, r3
 1692 00da 002B     		cmp	r3, #0
 1693 00dc 2DD0     		beq	.L151
1022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
ARM GAS  /tmp/ccVXEgNb.s 			page 104


 1694              		.loc 1 1022 0
 1695 00de 2368     		ldr	r3, [r4]
 1696 00e0 9A68     		ldr	r2, [r3, #8]
 1697 00e2 12F0010F 		tst	r2, #1
 1698 00e6 ECD0     		beq	.L147
1025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1699              		.loc 1 1025 0
 1700 00e8 A26B     		ldr	r2, [r4, #56]
 1701 00ea 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1702 00ec 1370     		strb	r3, [r2]
1026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1703              		.loc 1 1026 0
 1704 00ee A36B     		ldr	r3, [r4, #56]
 1705 00f0 0133     		adds	r3, r3, #1
 1706 00f2 A363     		str	r3, [r4, #56]
1027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1707              		.loc 1 1027 0
 1708 00f4 E38F     		ldrh	r3, [r4, #62]
 1709 00f6 9BB2     		uxth	r3, r3
 1710 00f8 013B     		subs	r3, r3, #1
 1711 00fa 9BB2     		uxth	r3, r3
 1712 00fc E387     		strh	r3, [r4, #62]	@ movhi
 1713 00fe EAE7     		b	.L145
 1714              	.L152:
1055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1715              		.loc 1 1055 0
 1716 0100 FFF7FEFF 		bl	HAL_GetTick
 1717              	.LVL118:
 1718 0104 801B     		subs	r0, r0, r6
 1719 0106 8542     		cmp	r5, r0
 1720 0108 02D8     		bhi	.L154
1055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1721              		.loc 1 1055 0 is_stmt 0 discriminator 1
 1722 010a B5F1FF3F 		cmp	r5, #-1
 1723 010e 28D1     		bne	.L163
 1724              	.L154:
1055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1725              		.loc 1 1055 0 discriminator 3
 1726 0110 4DB3     		cbz	r5, .L164
 1727              	.L146:
1043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1728              		.loc 1 1043 0 is_stmt 1
 1729 0112 E38F     		ldrh	r3, [r4, #62]
 1730 0114 9BB2     		uxth	r3, r3
 1731 0116 83B1     		cbz	r3, .L151
1046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1732              		.loc 1 1046 0
 1733 0118 2368     		ldr	r3, [r4]
 1734 011a 9A68     		ldr	r2, [r3, #8]
 1735 011c 12F0010F 		tst	r2, #1
 1736 0120 EED0     		beq	.L152
1048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1737              		.loc 1 1048 0
 1738 0122 A26B     		ldr	r2, [r4, #56]
 1739 0124 DB68     		ldr	r3, [r3, #12]
 1740 0126 1380     		strh	r3, [r2]	@ movhi
1049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
ARM GAS  /tmp/ccVXEgNb.s 			page 105


 1741              		.loc 1 1049 0
 1742 0128 A36B     		ldr	r3, [r4, #56]
 1743 012a 0233     		adds	r3, r3, #2
 1744 012c A363     		str	r3, [r4, #56]
1050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1745              		.loc 1 1050 0
 1746 012e E38F     		ldrh	r3, [r4, #62]
 1747 0130 9BB2     		uxth	r3, r3
 1748 0132 013B     		subs	r3, r3, #1
 1749 0134 9BB2     		uxth	r3, r3
 1750 0136 E387     		strh	r3, [r4, #62]	@ movhi
 1751 0138 EBE7     		b	.L146
 1752              	.L151:
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1753              		.loc 1 1106 0
 1754 013a 3246     		mov	r2, r6
 1755 013c 2946     		mov	r1, r5
 1756 013e 2046     		mov	r0, r4
 1757 0140 FFF7FEFF 		bl	SPI_EndRxTransaction
 1758              	.LVL119:
 1759 0144 08B1     		cbz	r0, .L156
1108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1760              		.loc 1 1108 0
 1761 0146 2023     		movs	r3, #32
 1762 0148 6365     		str	r3, [r4, #84]
 1763              	.L156:
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1764              		.loc 1 1120 0
 1765 014a 636D     		ldr	r3, [r4, #84]
 1766 014c 6BB9     		cbnz	r3, .L165
 949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1767              		.loc 1 949 0
 1768 014e 0020     		movs	r0, #0
 1769 0150 81E7     		b	.L142
 1770              	.LVL120:
 1771              	.L159:
 972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1772              		.loc 1 972 0
 1773 0152 0120     		movs	r0, #1
 1774              	.LVL121:
 1775 0154 7FE7     		b	.L142
 1776              	.LVL122:
 1777              	.L160:
 1778 0156 0120     		movs	r0, #1
 1779              	.LVL123:
 1780 0158 7DE7     		b	.L142
 1781              	.L161:
1034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 1782              		.loc 1 1034 0
 1783 015a 0320     		movs	r0, #3
 1784 015c 7BE7     		b	.L142
 1785              	.L162:
 1786 015e 0320     		movs	r0, #3
 1787 0160 79E7     		b	.L142
 1788              	.L163:
1057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 1789              		.loc 1 1057 0
ARM GAS  /tmp/ccVXEgNb.s 			page 106


 1790 0162 0320     		movs	r0, #3
 1791 0164 77E7     		b	.L142
 1792              	.L164:
 1793 0166 0320     		movs	r0, #3
 1794 0168 75E7     		b	.L142
 1795              	.L165:
1122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1796              		.loc 1 1122 0
 1797 016a 0120     		movs	r0, #1
 1798 016c 73E7     		b	.L142
 1799              		.cfi_endproc
 1800              	.LFE77:
 1802              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1803              		.align	1
 1804              		.global	HAL_SPI_Transmit_IT
 1805              		.syntax unified
 1806              		.thumb
 1807              		.thumb_func
 1808              		.fpu softvfp
 1810              	HAL_SPI_Transmit_IT:
 1811              	.LFB79:
1366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1812              		.loc 1 1366 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 0
 1815              		@ frame_needed = 0, uses_anonymous_args = 0
 1816              		@ link register save eliminated.
 1817              	.LVL124:
 1818 0000 0346     		mov	r3, r0
 1819              	.LVL125:
1373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1820              		.loc 1 1373 0
 1821 0002 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
 1822              	.LVL126:
 1823 0006 0128     		cmp	r0, #1
 1824 0008 48D0     		beq	.L177
1373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1825              		.loc 1 1373 0 is_stmt 0 discriminator 2
 1826 000a 0120     		movs	r0, #1
 1827 000c 83F85000 		strb	r0, [r3, #80]
1375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1828              		.loc 1 1375 0 is_stmt 1 discriminator 2
 1829 0010 0029     		cmp	r1, #0
 1830 0012 3AD0     		beq	.L178
1375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1831              		.loc 1 1375 0 is_stmt 0 discriminator 1
 1832 0014 002A     		cmp	r2, #0
 1833 0016 3AD0     		beq	.L179
1381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1834              		.loc 1 1381 0 is_stmt 1
 1835 0018 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 1836 001c C0B2     		uxtb	r0, r0
 1837 001e 0128     		cmp	r0, #1
 1838 0020 01D0     		beq	.L182
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1839              		.loc 1 1383 0
 1840 0022 0220     		movs	r0, #2
ARM GAS  /tmp/ccVXEgNb.s 			page 107


 1841 0024 34E0     		b	.L173
 1842              	.L182:
1388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1843              		.loc 1 1388 0
 1844 0026 0320     		movs	r0, #3
 1845 0028 83F85100 		strb	r0, [r3, #81]
1389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1846              		.loc 1 1389 0
 1847 002c 0020     		movs	r0, #0
 1848 002e 5865     		str	r0, [r3, #84]
1390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1849              		.loc 1 1390 0
 1850 0030 1963     		str	r1, [r3, #48]
1391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1851              		.loc 1 1391 0
 1852 0032 9A86     		strh	r2, [r3, #52]	@ movhi
1392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1853              		.loc 1 1392 0
 1854 0034 DA86     		strh	r2, [r3, #54]	@ movhi
1395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1855              		.loc 1 1395 0
 1856 0036 9863     		str	r0, [r3, #56]
1396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1857              		.loc 1 1396 0
 1858 0038 9887     		strh	r0, [r3, #60]	@ movhi
1397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1859              		.loc 1 1397 0
 1860 003a D887     		strh	r0, [r3, #62]	@ movhi
1398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1861              		.loc 1 1398 0
 1862 003c 1864     		str	r0, [r3, #64]
1401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1863              		.loc 1 1401 0
 1864 003e DA68     		ldr	r2, [r3, #12]
 1865              	.LVL127:
 1866 0040 AAB1     		cbz	r2, .L174
1403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1867              		.loc 1 1403 0
 1868 0042 174A     		ldr	r2, .L184
 1869 0044 5A64     		str	r2, [r3, #68]
 1870              	.L175:
1411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1871              		.loc 1 1411 0
 1872 0046 9A68     		ldr	r2, [r3, #8]
 1873 0048 B2F5004F 		cmp	r2, #32768
 1874 004c 12D0     		beq	.L183
 1875              	.LVL128:
 1876              	.L176:
1427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1877              		.loc 1 1427 0
 1878 004e 1968     		ldr	r1, [r3]
 1879 0050 4A68     		ldr	r2, [r1, #4]
 1880 0052 42F0A002 		orr	r2, r2, #160
 1881 0056 4A60     		str	r2, [r1, #4]
1431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1882              		.loc 1 1431 0
 1883 0058 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccVXEgNb.s 			page 108


 1884 005a 1168     		ldr	r1, [r2]
 1885 005c 11F0400F 		tst	r1, #64
 1886 0060 1AD1     		bne	.L181
1434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1887              		.loc 1 1434 0
 1888 0062 1168     		ldr	r1, [r2]
 1889 0064 41F04001 		orr	r1, r1, #64
 1890 0068 1160     		str	r1, [r2]
1367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1891              		.loc 1 1367 0
 1892 006a 0020     		movs	r0, #0
 1893 006c 10E0     		b	.L173
 1894              	.LVL129:
 1895              	.L174:
1407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1896              		.loc 1 1407 0
 1897 006e 0D4A     		ldr	r2, .L184+4
 1898 0070 5A64     		str	r2, [r3, #68]
 1899 0072 E8E7     		b	.L175
 1900              	.L183:
1414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 1901              		.loc 1 1414 0
 1902 0074 1968     		ldr	r1, [r3]
 1903              	.LVL130:
 1904 0076 0A68     		ldr	r2, [r1]
 1905 0078 22F04002 		bic	r2, r2, #64
 1906 007c 0A60     		str	r2, [r1]
 1907              	.LVL131:
1415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1908              		.loc 1 1415 0
 1909 007e 1968     		ldr	r1, [r3]
 1910 0080 0A68     		ldr	r2, [r1]
 1911 0082 42F48042 		orr	r2, r2, #16384
 1912 0086 0A60     		str	r2, [r1]
 1913 0088 E1E7     		b	.L176
 1914              	.LVL132:
 1915              	.L178:
1377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1916              		.loc 1 1377 0
 1917 008a 0120     		movs	r0, #1
 1918 008c 00E0     		b	.L173
 1919              	.L179:
 1920 008e 0120     		movs	r0, #1
 1921              	.LVL133:
 1922              	.L173:
1438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1923              		.loc 1 1438 0
 1924 0090 0022     		movs	r2, #0
 1925 0092 83F85020 		strb	r2, [r3, #80]
1439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1926              		.loc 1 1439 0
 1927 0096 7047     		bx	lr
 1928              	.LVL134:
 1929              	.L181:
1367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1930              		.loc 1 1367 0
 1931 0098 0020     		movs	r0, #0
ARM GAS  /tmp/ccVXEgNb.s 			page 109


 1932 009a F9E7     		b	.L173
 1933              	.LVL135:
 1934              	.L177:
1373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1935              		.loc 1 1373 0
 1936 009c 0220     		movs	r0, #2
1440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1937              		.loc 1 1440 0
 1938 009e 7047     		bx	lr
 1939              	.L185:
 1940              		.align	2
 1941              	.L184:
 1942 00a0 00000000 		.word	SPI_TxISR_16BIT
 1943 00a4 00000000 		.word	SPI_TxISR_8BIT
 1944              		.cfi_endproc
 1945              	.LFE79:
 1947              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 1948              		.align	1
 1949              		.global	HAL_SPI_TransmitReceive_IT
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1953              		.fpu softvfp
 1955              	HAL_SPI_TransmitReceive_IT:
 1956              	.LFB81:
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
 1957              		.loc 1 1545 0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961              		@ link register save eliminated.
 1962              	.LVL136:
 1963 0000 30B4     		push	{r4, r5}
 1964              	.LCFI28:
 1965              		.cfi_def_cfa_offset 8
 1966              		.cfi_offset 4, -8
 1967              		.cfi_offset 5, -4
 1968              	.LVL137:
1554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1969              		.loc 1 1554 0
 1970 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1971 0006 012C     		cmp	r4, #1
 1972 0008 54D0     		beq	.L193
1554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1973              		.loc 1 1554 0 is_stmt 0 discriminator 2
 1974 000a 0124     		movs	r4, #1
 1975 000c 80F85040 		strb	r4, [r0, #80]
1557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1976              		.loc 1 1557 0 is_stmt 1 discriminator 2
 1977 0010 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1978 0014 E4B2     		uxtb	r4, r4
 1979              	.LVL138:
1558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1980              		.loc 1 1558 0 discriminator 2
 1981 0016 4568     		ldr	r5, [r0, #4]
 1982              	.LVL139:
1560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
ARM GAS  /tmp/ccVXEgNb.s 			page 110


 1983              		.loc 1 1560 0 discriminator 2
 1984 0018 012C     		cmp	r4, #1
 1985 001a 10D0     		beq	.L188
1560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1986              		.loc 1 1560 0 is_stmt 0 discriminator 1
 1987 001c B5F5827F 		cmp	r5, #260
 1988 0020 06D0     		beq	.L202
1563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1989              		.loc 1 1563 0 is_stmt 1
 1990 0022 0223     		movs	r3, #2
 1991              	.LVL140:
 1992              	.L189:
1620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1993              		.loc 1 1620 0
 1994 0024 0022     		movs	r2, #0
 1995 0026 80F85020 		strb	r2, [r0, #80]
 1996              	.LVL141:
 1997              	.L187:
1622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1998              		.loc 1 1622 0
 1999 002a 1846     		mov	r0, r3
 2000              	.LVL142:
 2001 002c 30BC     		pop	{r4, r5}
 2002              	.LCFI29:
 2003              		.cfi_remember_state
 2004              		.cfi_restore 5
 2005              		.cfi_restore 4
 2006              		.cfi_def_cfa_offset 0
 2007 002e 7047     		bx	lr
 2008              	.LVL143:
 2009              	.L202:
 2010              	.LCFI30:
 2011              		.cfi_restore_state
1561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2012              		.loc 1 1561 0
 2013 0030 8568     		ldr	r5, [r0, #8]
 2014              	.LVL144:
 2015 0032 002D     		cmp	r5, #0
 2016 0034 34D1     		bne	.L195
1561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2017              		.loc 1 1561 0 is_stmt 0 discriminator 1
 2018 0036 042C     		cmp	r4, #4
 2019 0038 01D0     		beq	.L188
1563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2020              		.loc 1 1563 0 is_stmt 1
 2021 003a 0223     		movs	r3, #2
 2022              	.LVL145:
 2023 003c F2E7     		b	.L189
 2024              	.LVL146:
 2025              	.L188:
1567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2026              		.loc 1 1567 0
 2027 003e 0029     		cmp	r1, #0
 2028 0040 30D0     		beq	.L197
1567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2029              		.loc 1 1567 0 is_stmt 0 discriminator 1
 2030 0042 002A     		cmp	r2, #0
ARM GAS  /tmp/ccVXEgNb.s 			page 111


 2031 0044 30D0     		beq	.L198
1567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2032              		.loc 1 1567 0 discriminator 2
 2033 0046 002B     		cmp	r3, #0
 2034 0048 30D0     		beq	.L199
1574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2035              		.loc 1 1574 0 is_stmt 1
 2036 004a 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 2037              	.LVL147:
 2038 004e E4B2     		uxtb	r4, r4
 2039 0050 042C     		cmp	r4, #4
 2040 0052 02D0     		beq	.L190
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2041              		.loc 1 1576 0
 2042 0054 0524     		movs	r4, #5
 2043 0056 80F85140 		strb	r4, [r0, #81]
 2044              	.L190:
1580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2045              		.loc 1 1580 0
 2046 005a 0024     		movs	r4, #0
 2047 005c 4465     		str	r4, [r0, #84]
1581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2048              		.loc 1 1581 0
 2049 005e 0163     		str	r1, [r0, #48]
1582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2050              		.loc 1 1582 0
 2051 0060 8386     		strh	r3, [r0, #52]	@ movhi
1583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2052              		.loc 1 1583 0
 2053 0062 C386     		strh	r3, [r0, #54]	@ movhi
1584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2054              		.loc 1 1584 0
 2055 0064 8263     		str	r2, [r0, #56]
1585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2056              		.loc 1 1585 0
 2057 0066 8387     		strh	r3, [r0, #60]	@ movhi
1586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2058              		.loc 1 1586 0
 2059 0068 C387     		strh	r3, [r0, #62]	@ movhi
1589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2060              		.loc 1 1589 0
 2061 006a C368     		ldr	r3, [r0, #12]
 2062              	.LVL148:
 2063 006c 9BB1     		cbz	r3, .L191
1591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2064              		.loc 1 1591 0
 2065 006e 124B     		ldr	r3, .L203
 2066 0070 0364     		str	r3, [r0, #64]
1592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2067              		.loc 1 1592 0
 2068 0072 124B     		ldr	r3, .L203+4
 2069 0074 4364     		str	r3, [r0, #68]
 2070              	.L192:
1609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2071              		.loc 1 1609 0
 2072 0076 0268     		ldr	r2, [r0]
 2073              	.LVL149:
ARM GAS  /tmp/ccVXEgNb.s 			page 112


 2074 0078 5368     		ldr	r3, [r2, #4]
 2075 007a 43F0E003 		orr	r3, r3, #224
 2076 007e 5360     		str	r3, [r2, #4]
 2077              	.LVL150:
1612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2078              		.loc 1 1612 0
 2079 0080 0368     		ldr	r3, [r0]
 2080 0082 1A68     		ldr	r2, [r3]
 2081 0084 12F0400F 		tst	r2, #64
 2082 0088 12D1     		bne	.L200
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2083              		.loc 1 1615 0
 2084 008a 1A68     		ldr	r2, [r3]
 2085 008c 42F04002 		orr	r2, r2, #64
 2086 0090 1A60     		str	r2, [r3]
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2087              		.loc 1 1548 0
 2088 0092 0023     		movs	r3, #0
 2089 0094 C6E7     		b	.L189
 2090              	.LVL151:
 2091              	.L191:
1596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2092              		.loc 1 1596 0
 2093 0096 0A4B     		ldr	r3, .L203+8
 2094 0098 0364     		str	r3, [r0, #64]
1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2095              		.loc 1 1597 0
 2096 009a 0A4B     		ldr	r3, .L203+12
 2097 009c 4364     		str	r3, [r0, #68]
 2098 009e EAE7     		b	.L192
 2099              	.LVL152:
 2100              	.L195:
1563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2101              		.loc 1 1563 0
 2102 00a0 0223     		movs	r3, #2
 2103              	.LVL153:
 2104 00a2 BFE7     		b	.L189
 2105              	.LVL154:
 2106              	.L197:
1569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2107              		.loc 1 1569 0
 2108 00a4 0123     		movs	r3, #1
 2109              	.LVL155:
 2110 00a6 BDE7     		b	.L189
 2111              	.LVL156:
 2112              	.L198:
 2113 00a8 0123     		movs	r3, #1
 2114              	.LVL157:
 2115 00aa BBE7     		b	.L189
 2116              	.LVL158:
 2117              	.L199:
 2118 00ac 0123     		movs	r3, #1
 2119              	.LVL159:
 2120 00ae B9E7     		b	.L189
 2121              	.LVL160:
 2122              	.L200:
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccVXEgNb.s 			page 113


 2123              		.loc 1 1548 0
 2124 00b0 0023     		movs	r3, #0
 2125 00b2 B7E7     		b	.L189
 2126              	.LVL161:
 2127              	.L193:
1554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2128              		.loc 1 1554 0
 2129 00b4 0223     		movs	r3, #2
 2130              	.LVL162:
 2131 00b6 B8E7     		b	.L187
 2132              	.L204:
 2133              		.align	2
 2134              	.L203:
 2135 00b8 00000000 		.word	SPI_2linesRxISR_16BIT
 2136 00bc 00000000 		.word	SPI_2linesTxISR_16BIT
 2137 00c0 00000000 		.word	SPI_2linesRxISR_8BIT
 2138 00c4 00000000 		.word	SPI_2linesTxISR_8BIT
 2139              		.cfi_endproc
 2140              	.LFE81:
 2142              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2143              		.align	1
 2144              		.global	HAL_SPI_Receive_IT
 2145              		.syntax unified
 2146              		.thumb
 2147              		.thumb_func
 2148              		.fpu softvfp
 2150              	HAL_SPI_Receive_IT:
 2151              	.LFB80:
1451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2152              		.loc 1 1451 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              	.LVL163:
 2157 0000 38B5     		push	{r3, r4, r5, lr}
 2158              	.LCFI31:
 2159              		.cfi_def_cfa_offset 16
 2160              		.cfi_offset 3, -16
 2161              		.cfi_offset 4, -12
 2162              		.cfi_offset 5, -8
 2163              		.cfi_offset 14, -4
 2164 0002 0446     		mov	r4, r0
 2165              	.LVL164:
1454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2166              		.loc 1 1454 0
 2167 0004 8568     		ldr	r5, [r0, #8]
 2168 0006 1DB9     		cbnz	r5, .L206
1454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2169              		.loc 1 1454 0 is_stmt 0 discriminator 1
 2170 0008 4368     		ldr	r3, [r0, #4]
 2171 000a B3F5827F 		cmp	r3, #260
 2172 000e 10D0     		beq	.L218
 2173              	.L206:
1462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2174              		.loc 1 1462 0 is_stmt 1
 2175 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2176              	.LVL165:
ARM GAS  /tmp/ccVXEgNb.s 			page 114


 2177 0014 0128     		cmp	r0, #1
 2178 0016 4FD0     		beq	.L212
1462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2179              		.loc 1 1462 0 is_stmt 0 discriminator 2
 2180 0018 0123     		movs	r3, #1
 2181 001a 84F85030 		strb	r3, [r4, #80]
1464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2182              		.loc 1 1464 0 is_stmt 1 discriminator 2
 2183 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2184 0022 C0B2     		uxtb	r0, r0
 2185 0024 9842     		cmp	r0, r3
 2186 0026 0CD0     		beq	.L219
1466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2187              		.loc 1 1466 0
 2188 0028 0220     		movs	r0, #2
 2189              	.LVL166:
 2190              	.L208:
1531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2191              		.loc 1 1531 0
 2192 002a 0023     		movs	r3, #0
 2193 002c 84F85030 		strb	r3, [r4, #80]
1532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 2194              		.loc 1 1532 0
 2195 0030 38BD     		pop	{r3, r4, r5, pc}
 2196              	.LVL167:
 2197              	.L218:
 2198 0032 1346     		mov	r3, r2
1456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2199              		.loc 1 1456 0
 2200 0034 0422     		movs	r2, #4
 2201              	.LVL168:
 2202 0036 80F85120 		strb	r2, [r0, #81]
1458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2203              		.loc 1 1458 0
 2204 003a 0A46     		mov	r2, r1
 2205 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2206              	.LVL169:
 2207 0040 38BD     		pop	{r3, r4, r5, pc}
 2208              	.LVL170:
 2209              	.L219:
1470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2210              		.loc 1 1470 0
 2211 0042 0029     		cmp	r1, #0
 2212 0044 32D0     		beq	.L214
1470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2213              		.loc 1 1470 0 is_stmt 0 discriminator 1
 2214 0046 002A     		cmp	r2, #0
 2215 0048 32D0     		beq	.L215
1477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2216              		.loc 1 1477 0 is_stmt 1
 2217 004a 0423     		movs	r3, #4
 2218 004c 84F85130 		strb	r3, [r4, #81]
1478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2219              		.loc 1 1478 0
 2220 0050 0023     		movs	r3, #0
 2221 0052 6365     		str	r3, [r4, #84]
1479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
ARM GAS  /tmp/ccVXEgNb.s 			page 115


 2222              		.loc 1 1479 0
 2223 0054 A163     		str	r1, [r4, #56]
1480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2224              		.loc 1 1480 0
 2225 0056 A287     		strh	r2, [r4, #60]	@ movhi
1481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2226              		.loc 1 1481 0
 2227 0058 E287     		strh	r2, [r4, #62]	@ movhi
1484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2228              		.loc 1 1484 0
 2229 005a 2363     		str	r3, [r4, #48]
1485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2230              		.loc 1 1485 0
 2231 005c A386     		strh	r3, [r4, #52]	@ movhi
1486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2232              		.loc 1 1486 0
 2233 005e E386     		strh	r3, [r4, #54]	@ movhi
1487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2234              		.loc 1 1487 0
 2235 0060 6364     		str	r3, [r4, #68]
1490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2236              		.loc 1 1490 0
 2237 0062 E368     		ldr	r3, [r4, #12]
 2238 0064 A3B1     		cbz	r3, .L209
1492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2239              		.loc 1 1492 0
 2240 0066 154B     		ldr	r3, .L221
 2241 0068 2364     		str	r3, [r4, #64]
 2242              	.L210:
1500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2243              		.loc 1 1500 0
 2244 006a B5F5004F 		cmp	r5, #32768
 2245 006e 12D0     		beq	.L220
 2246              	.LVL171:
 2247              	.L211:
1516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2248              		.loc 1 1516 0
 2249 0070 2268     		ldr	r2, [r4]
 2250 0072 5368     		ldr	r3, [r2, #4]
 2251 0074 43F06003 		orr	r3, r3, #96
 2252 0078 5360     		str	r3, [r2, #4]
1523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2253              		.loc 1 1523 0
 2254 007a 2368     		ldr	r3, [r4]
 2255 007c 1A68     		ldr	r2, [r3]
 2256 007e 12F0400F 		tst	r2, #64
 2257 0082 17D1     		bne	.L216
1526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2258              		.loc 1 1526 0
 2259 0084 1A68     		ldr	r2, [r3]
 2260 0086 42F04002 		orr	r2, r2, #64
 2261 008a 1A60     		str	r2, [r3]
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2262              		.loc 1 1452 0
 2263 008c 0020     		movs	r0, #0
 2264 008e CCE7     		b	.L208
 2265              	.LVL172:
ARM GAS  /tmp/ccVXEgNb.s 			page 116


 2266              	.L209:
1496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2267              		.loc 1 1496 0
 2268 0090 0B4B     		ldr	r3, .L221+4
 2269 0092 2364     		str	r3, [r4, #64]
 2270 0094 E9E7     		b	.L210
 2271              	.L220:
1503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2272              		.loc 1 1503 0
 2273 0096 2268     		ldr	r2, [r4]
 2274              	.LVL173:
 2275 0098 1368     		ldr	r3, [r2]
 2276 009a 23F04003 		bic	r3, r3, #64
 2277 009e 1360     		str	r3, [r2]
 2278              	.LVL174:
1504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2279              		.loc 1 1504 0
 2280 00a0 2268     		ldr	r2, [r4]
 2281 00a2 1368     		ldr	r3, [r2]
 2282 00a4 23F48043 		bic	r3, r3, #16384
 2283 00a8 1360     		str	r3, [r2]
 2284 00aa E1E7     		b	.L211
 2285              	.LVL175:
 2286              	.L214:
1472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2287              		.loc 1 1472 0
 2288 00ac 0120     		movs	r0, #1
 2289 00ae BCE7     		b	.L208
 2290              	.L215:
 2291 00b0 0120     		movs	r0, #1
 2292 00b2 BAE7     		b	.L208
 2293              	.LVL176:
 2294              	.L216:
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2295              		.loc 1 1452 0
 2296 00b4 0020     		movs	r0, #0
 2297 00b6 B8E7     		b	.L208
 2298              	.LVL177:
 2299              	.L212:
1462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2300              		.loc 1 1462 0
 2301 00b8 0220     		movs	r0, #2
1533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2302              		.loc 1 1533 0
 2303 00ba 38BD     		pop	{r3, r4, r5, pc}
 2304              	.LVL178:
 2305              	.L222:
 2306              		.align	2
 2307              	.L221:
 2308 00bc 00000000 		.word	SPI_RxISR_16BIT
 2309 00c0 00000000 		.word	SPI_RxISR_8BIT
 2310              		.cfi_endproc
 2311              	.LFE80:
 2313              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2314              		.align	1
 2315              		.global	HAL_SPI_Transmit_DMA
 2316              		.syntax unified
ARM GAS  /tmp/ccVXEgNb.s 			page 117


 2317              		.thumb
 2318              		.thumb_func
 2319              		.fpu softvfp
 2321              	HAL_SPI_Transmit_DMA:
 2322              	.LFB82:
1633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2323              		.loc 1 1633 0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 0
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 2327              	.LVL179:
1643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2328              		.loc 1 1643 0
 2329 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2330 0004 012B     		cmp	r3, #1
 2331 0006 65D0     		beq	.L229
1633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2332              		.loc 1 1633 0 discriminator 2
 2333 0008 10B5     		push	{r4, lr}
 2334              	.LCFI32:
 2335              		.cfi_def_cfa_offset 8
 2336              		.cfi_offset 4, -8
 2337              		.cfi_offset 14, -4
 2338 000a 0446     		mov	r4, r0
1643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2339              		.loc 1 1643 0 discriminator 2
 2340 000c 0123     		movs	r3, #1
 2341 000e 80F85030 		strb	r3, [r0, #80]
1645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2342              		.loc 1 1645 0 discriminator 2
 2343 0012 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 2344 0016 DBB2     		uxtb	r3, r3
 2345 0018 012B     		cmp	r3, #1
 2346 001a 05D0     		beq	.L237
1647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2347              		.loc 1 1647 0
 2348 001c 0223     		movs	r3, #2
 2349              	.LVL180:
 2350              	.L225:
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2351              		.loc 1 1726 0
 2352 001e 0022     		movs	r2, #0
 2353 0020 84F85020 		strb	r2, [r4, #80]
1728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2354              		.loc 1 1728 0
 2355 0024 1846     		mov	r0, r3
 2356 0026 10BD     		pop	{r4, pc}
 2357              	.LVL181:
 2358              	.L237:
1651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2359              		.loc 1 1651 0
 2360 0028 0029     		cmp	r1, #0
 2361 002a 4FD0     		beq	.L231
1651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2362              		.loc 1 1651 0 is_stmt 0 discriminator 1
 2363 002c 002A     		cmp	r2, #0
 2364 002e 4FD0     		beq	.L232
ARM GAS  /tmp/ccVXEgNb.s 			page 118


1658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2365              		.loc 1 1658 0 is_stmt 1
 2366 0030 0323     		movs	r3, #3
 2367 0032 80F85130 		strb	r3, [r0, #81]
1659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2368              		.loc 1 1659 0
 2369 0036 0023     		movs	r3, #0
 2370 0038 4365     		str	r3, [r0, #84]
1660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2371              		.loc 1 1660 0
 2372 003a 0163     		str	r1, [r0, #48]
1661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2373              		.loc 1 1661 0
 2374 003c 8286     		strh	r2, [r0, #52]	@ movhi
1662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2375              		.loc 1 1662 0
 2376 003e C286     		strh	r2, [r0, #54]	@ movhi
1665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2377              		.loc 1 1665 0
 2378 0040 8363     		str	r3, [r0, #56]
1666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2379              		.loc 1 1666 0
 2380 0042 4364     		str	r3, [r0, #68]
1667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2381              		.loc 1 1667 0
 2382 0044 0364     		str	r3, [r0, #64]
1668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2383              		.loc 1 1668 0
 2384 0046 8387     		strh	r3, [r0, #60]	@ movhi
1669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2385              		.loc 1 1669 0
 2386 0048 C387     		strh	r3, [r0, #62]	@ movhi
1672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2387              		.loc 1 1672 0
 2388 004a 8368     		ldr	r3, [r0, #8]
 2389 004c B3F5004F 		cmp	r3, #32768
 2390 0050 1DD0     		beq	.L238
 2391              	.LVL182:
 2392              	.L226:
1688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2393              		.loc 1 1688 0
 2394 0052 A36C     		ldr	r3, [r4, #72]
 2395 0054 214A     		ldr	r2, .L239
 2396 0056 DA62     		str	r2, [r3, #44]
1691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2397              		.loc 1 1691 0
 2398 0058 A36C     		ldr	r3, [r4, #72]
 2399 005a 214A     		ldr	r2, .L239+4
 2400 005c 9A62     		str	r2, [r3, #40]
1694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2401              		.loc 1 1694 0
 2402 005e A36C     		ldr	r3, [r4, #72]
 2403 0060 204A     		ldr	r2, .L239+8
 2404 0062 1A63     		str	r2, [r3, #48]
1697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2405              		.loc 1 1697 0
 2406 0064 A36C     		ldr	r3, [r4, #72]
ARM GAS  /tmp/ccVXEgNb.s 			page 119


 2407 0066 0022     		movs	r2, #0
 2408 0068 5A63     		str	r2, [r3, #52]
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2409              		.loc 1 1700 0
 2410 006a 2268     		ldr	r2, [r4]
1701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2411              		.loc 1 1701 0
 2412 006c E38E     		ldrh	r3, [r4, #54]
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2413              		.loc 1 1700 0
 2414 006e 9BB2     		uxth	r3, r3
 2415 0070 0C32     		adds	r2, r2, #12
 2416 0072 216B     		ldr	r1, [r4, #48]
 2417              	.LVL183:
 2418 0074 A06C     		ldr	r0, [r4, #72]
 2419              	.LVL184:
 2420 0076 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2421              	.LVL185:
 2422 007a 0346     		mov	r3, r0
 2423 007c 90B1     		cbz	r0, .L227
1704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2424              		.loc 1 1704 0
 2425 007e 636D     		ldr	r3, [r4, #84]
 2426 0080 43F01003 		orr	r3, r3, #16
 2427 0084 6365     		str	r3, [r4, #84]
 2428              	.LVL186:
1707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2429              		.loc 1 1707 0
 2430 0086 0123     		movs	r3, #1
 2431 0088 84F85130 		strb	r3, [r4, #81]
1708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2432              		.loc 1 1708 0
 2433 008c C7E7     		b	.L225
 2434              	.LVL187:
 2435              	.L238:
1675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 2436              		.loc 1 1675 0
 2437 008e 0268     		ldr	r2, [r0]
 2438              	.LVL188:
 2439 0090 1368     		ldr	r3, [r2]
 2440 0092 23F04003 		bic	r3, r3, #64
 2441 0096 1360     		str	r3, [r2]
 2442              	.LVL189:
1676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2443              		.loc 1 1676 0
 2444 0098 0268     		ldr	r2, [r0]
 2445 009a 1368     		ldr	r3, [r2]
 2446 009c 43F48043 		orr	r3, r3, #16384
 2447 00a0 1360     		str	r3, [r2]
 2448 00a2 D6E7     		b	.L226
 2449              	.LVL190:
 2450              	.L227:
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2451              		.loc 1 1712 0
 2452 00a4 2268     		ldr	r2, [r4]
 2453 00a6 1168     		ldr	r1, [r2]
 2454 00a8 11F0400F 		tst	r1, #64
ARM GAS  /tmp/ccVXEgNb.s 			page 120


 2455 00ac 03D1     		bne	.L228
1715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2456              		.loc 1 1715 0
 2457 00ae 1168     		ldr	r1, [r2]
 2458 00b0 41F04001 		orr	r1, r1, #64
 2459 00b4 1160     		str	r1, [r2]
 2460              	.L228:
1719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2461              		.loc 1 1719 0
 2462 00b6 2168     		ldr	r1, [r4]
 2463 00b8 4A68     		ldr	r2, [r1, #4]
 2464 00ba 42F02002 		orr	r2, r2, #32
 2465 00be 4A60     		str	r2, [r1, #4]
1722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2466              		.loc 1 1722 0
 2467 00c0 2168     		ldr	r1, [r4]
 2468 00c2 4A68     		ldr	r2, [r1, #4]
 2469 00c4 42F00202 		orr	r2, r2, #2
 2470 00c8 4A60     		str	r2, [r1, #4]
 2471 00ca A8E7     		b	.L225
 2472              	.LVL191:
 2473              	.L231:
1653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2474              		.loc 1 1653 0
 2475 00cc 0123     		movs	r3, #1
 2476 00ce A6E7     		b	.L225
 2477              	.L232:
 2478 00d0 0123     		movs	r3, #1
 2479 00d2 A4E7     		b	.L225
 2480              	.L229:
 2481              	.LCFI33:
 2482              		.cfi_def_cfa_offset 0
 2483              		.cfi_restore 4
 2484              		.cfi_restore 14
1643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2485              		.loc 1 1643 0
 2486 00d4 0223     		movs	r3, #2
1728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2487              		.loc 1 1728 0
 2488 00d6 1846     		mov	r0, r3
 2489              	.LVL192:
 2490 00d8 7047     		bx	lr
 2491              	.L240:
 2492 00da 00BF     		.align	2
 2493              	.L239:
 2494 00dc 00000000 		.word	SPI_DMAHalfTransmitCplt
 2495 00e0 00000000 		.word	SPI_DMATransmitCplt
 2496 00e4 00000000 		.word	SPI_DMAError
 2497              		.cfi_endproc
 2498              	.LFE82:
 2500              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2501              		.align	1
 2502              		.global	HAL_SPI_TransmitReceive_DMA
 2503              		.syntax unified
 2504              		.thumb
 2505              		.thumb_func
 2506              		.fpu softvfp
ARM GAS  /tmp/ccVXEgNb.s 			page 121


 2508              	HAL_SPI_TransmitReceive_DMA:
 2509              	.LFB84:
1857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
 2510              		.loc 1 1857 0
 2511              		.cfi_startproc
 2512              		@ args = 0, pretend = 0, frame = 0
 2513              		@ frame_needed = 0, uses_anonymous_args = 0
 2514              	.LVL193:
 2515 0000 38B5     		push	{r3, r4, r5, lr}
 2516              	.LCFI34:
 2517              		.cfi_def_cfa_offset 16
 2518              		.cfi_offset 3, -16
 2519              		.cfi_offset 4, -12
 2520              		.cfi_offset 5, -8
 2521              		.cfi_offset 14, -4
 2522              	.LVL194:
1870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2523              		.loc 1 1870 0
 2524 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 2525 0006 012C     		cmp	r4, #1
 2526 0008 00F09780 		beq	.L251
 2527 000c 0446     		mov	r4, r0
1870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2528              		.loc 1 1870 0 is_stmt 0 discriminator 2
 2529 000e 0120     		movs	r0, #1
 2530              	.LVL195:
 2531 0010 84F85000 		strb	r0, [r4, #80]
1873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2532              		.loc 1 1873 0 is_stmt 1 discriminator 2
 2533 0014 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2534 0018 C0B2     		uxtb	r0, r0
 2535              	.LVL196:
1874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2536              		.loc 1 1874 0 discriminator 2
 2537 001a 6568     		ldr	r5, [r4, #4]
 2538              	.LVL197:
1876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2539              		.loc 1 1876 0 discriminator 2
 2540 001c 0128     		cmp	r0, #1
 2541 001e 0FD0     		beq	.L243
1876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2542              		.loc 1 1876 0 is_stmt 0 discriminator 1
 2543 0020 B5F5827F 		cmp	r5, #260
 2544 0024 05D0     		beq	.L259
1879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2545              		.loc 1 1879 0 is_stmt 1
 2546 0026 0223     		movs	r3, #2
 2547              	.LVL198:
 2548              	.L244:
1984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2549              		.loc 1 1984 0
 2550 0028 0022     		movs	r2, #0
 2551 002a 84F85020 		strb	r2, [r4, #80]
 2552              	.LVL199:
 2553              	.L242:
1986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2554              		.loc 1 1986 0
ARM GAS  /tmp/ccVXEgNb.s 			page 122


 2555 002e 1846     		mov	r0, r3
 2556 0030 38BD     		pop	{r3, r4, r5, pc}
 2557              	.LVL200:
 2558              	.L259:
1877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2559              		.loc 1 1877 0
 2560 0032 A568     		ldr	r5, [r4, #8]
 2561              	.LVL201:
 2562 0034 002D     		cmp	r5, #0
 2563 0036 78D1     		bne	.L253
1877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2564              		.loc 1 1877 0 is_stmt 0 discriminator 1
 2565 0038 0428     		cmp	r0, #4
 2566 003a 01D0     		beq	.L243
1879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2567              		.loc 1 1879 0 is_stmt 1
 2568 003c 0223     		movs	r3, #2
 2569              	.LVL202:
 2570 003e F3E7     		b	.L244
 2571              	.LVL203:
 2572              	.L243:
1883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2573              		.loc 1 1883 0
 2574 0040 0029     		cmp	r1, #0
 2575 0042 74D0     		beq	.L255
1883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2576              		.loc 1 1883 0 is_stmt 0 discriminator 1
 2577 0044 002A     		cmp	r2, #0
 2578 0046 74D0     		beq	.L256
1883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2579              		.loc 1 1883 0 discriminator 2
 2580 0048 002B     		cmp	r3, #0
 2581 004a 74D0     		beq	.L257
1890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2582              		.loc 1 1890 0 is_stmt 1
 2583 004c 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2584              	.LVL204:
 2585 0050 C0B2     		uxtb	r0, r0
 2586 0052 0428     		cmp	r0, #4
 2587 0054 02D0     		beq	.L245
1892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2588              		.loc 1 1892 0
 2589 0056 0520     		movs	r0, #5
 2590 0058 84F85100 		strb	r0, [r4, #81]
 2591              	.L245:
1896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2592              		.loc 1 1896 0
 2593 005c 0020     		movs	r0, #0
 2594 005e 6065     		str	r0, [r4, #84]
1897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2595              		.loc 1 1897 0
 2596 0060 2163     		str	r1, [r4, #48]
1898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2597              		.loc 1 1898 0
 2598 0062 A386     		strh	r3, [r4, #52]	@ movhi
1899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2599              		.loc 1 1899 0
ARM GAS  /tmp/ccVXEgNb.s 			page 123


 2600 0064 E386     		strh	r3, [r4, #54]	@ movhi
1900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2601              		.loc 1 1900 0
 2602 0066 A263     		str	r2, [r4, #56]
1901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2603              		.loc 1 1901 0
 2604 0068 A387     		strh	r3, [r4, #60]	@ movhi
1902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2605              		.loc 1 1902 0
 2606 006a E387     		strh	r3, [r4, #62]	@ movhi
1905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2607              		.loc 1 1905 0
 2608 006c 2064     		str	r0, [r4, #64]
1906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2609              		.loc 1 1906 0
 2610 006e 6064     		str	r0, [r4, #68]
1917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2611              		.loc 1 1917 0
 2612 0070 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2613              	.LVL205:
 2614 0074 DBB2     		uxtb	r3, r3
 2615 0076 042B     		cmp	r3, #4
 2616 0078 1CD0     		beq	.L260
1926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 2617              		.loc 1 1926 0
 2618 007a E36C     		ldr	r3, [r4, #76]
 2619 007c 304A     		ldr	r2, .L261
 2620              	.LVL206:
 2621 007e DA62     		str	r2, [r3, #44]
 2622              	.LVL207:
1927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2623              		.loc 1 1927 0
 2624 0080 E36C     		ldr	r3, [r4, #76]
 2625 0082 304A     		ldr	r2, .L261+4
 2626 0084 9A62     		str	r2, [r3, #40]
 2627              	.L247:
1931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2628              		.loc 1 1931 0
 2629 0086 E36C     		ldr	r3, [r4, #76]
 2630 0088 2F4A     		ldr	r2, .L261+8
 2631 008a 1A63     		str	r2, [r3, #48]
1934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2632              		.loc 1 1934 0
 2633 008c E36C     		ldr	r3, [r4, #76]
 2634 008e 0022     		movs	r2, #0
 2635 0090 5A63     		str	r2, [r3, #52]
1937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2636              		.loc 1 1937 0
 2637 0092 2168     		ldr	r1, [r4]
 2638              	.LVL208:
1938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2639              		.loc 1 1938 0
 2640 0094 E38F     		ldrh	r3, [r4, #62]
1937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2641              		.loc 1 1937 0
 2642 0096 9BB2     		uxth	r3, r3
 2643 0098 A26B     		ldr	r2, [r4, #56]
ARM GAS  /tmp/ccVXEgNb.s 			page 124


 2644 009a 0C31     		adds	r1, r1, #12
 2645 009c E06C     		ldr	r0, [r4, #76]
 2646 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 2647              	.LVL209:
 2648 00a2 70B1     		cbz	r0, .L248
1941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2649              		.loc 1 1941 0
 2650 00a4 636D     		ldr	r3, [r4, #84]
 2651 00a6 43F01003 		orr	r3, r3, #16
 2652 00aa 6365     		str	r3, [r4, #84]
 2653              	.LVL210:
1944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2654              		.loc 1 1944 0
 2655 00ac 0123     		movs	r3, #1
 2656 00ae 84F85130 		strb	r3, [r4, #81]
1945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2657              		.loc 1 1945 0
 2658 00b2 B9E7     		b	.L244
 2659              	.LVL211:
 2660              	.L260:
1920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 2661              		.loc 1 1920 0
 2662 00b4 E36C     		ldr	r3, [r4, #76]
 2663 00b6 254A     		ldr	r2, .L261+12
 2664              	.LVL212:
 2665 00b8 DA62     		str	r2, [r3, #44]
 2666              	.LVL213:
1921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2667              		.loc 1 1921 0
 2668 00ba E36C     		ldr	r3, [r4, #76]
 2669 00bc 244A     		ldr	r2, .L261+16
 2670 00be 9A62     		str	r2, [r3, #40]
 2671 00c0 E1E7     		b	.L247
 2672              	.LVL214:
 2673              	.L248:
1949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2674              		.loc 1 1949 0
 2675 00c2 2268     		ldr	r2, [r4]
 2676 00c4 5368     		ldr	r3, [r2, #4]
 2677 00c6 43F00103 		orr	r3, r3, #1
 2678 00ca 5360     		str	r3, [r2, #4]
1953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 2679              		.loc 1 1953 0
 2680 00cc A26C     		ldr	r2, [r4, #72]
 2681 00ce 0023     		movs	r3, #0
 2682 00d0 D362     		str	r3, [r2, #44]
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 2683              		.loc 1 1954 0
 2684 00d2 A26C     		ldr	r2, [r4, #72]
 2685 00d4 9362     		str	r3, [r2, #40]
1955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 2686              		.loc 1 1955 0
 2687 00d6 A26C     		ldr	r2, [r4, #72]
 2688 00d8 1363     		str	r3, [r2, #48]
1956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2689              		.loc 1 1956 0
 2690 00da A26C     		ldr	r2, [r4, #72]
ARM GAS  /tmp/ccVXEgNb.s 			page 125


 2691 00dc 5363     		str	r3, [r2, #52]
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2692              		.loc 1 1959 0
 2693 00de 2268     		ldr	r2, [r4]
1960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2694              		.loc 1 1960 0
 2695 00e0 E38E     		ldrh	r3, [r4, #54]
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2696              		.loc 1 1959 0
 2697 00e2 9BB2     		uxth	r3, r3
 2698 00e4 0C32     		adds	r2, r2, #12
 2699 00e6 216B     		ldr	r1, [r4, #48]
 2700 00e8 A06C     		ldr	r0, [r4, #72]
 2701 00ea FFF7FEFF 		bl	HAL_DMA_Start_IT
 2702              	.LVL215:
 2703 00ee 0346     		mov	r3, r0
 2704 00f0 38B1     		cbz	r0, .L249
1963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2705              		.loc 1 1963 0
 2706 00f2 636D     		ldr	r3, [r4, #84]
 2707 00f4 43F01003 		orr	r3, r3, #16
 2708 00f8 6365     		str	r3, [r4, #84]
 2709              	.LVL216:
1966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2710              		.loc 1 1966 0
 2711 00fa 0123     		movs	r3, #1
 2712 00fc 84F85130 		strb	r3, [r4, #81]
1967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2713              		.loc 1 1967 0
 2714 0100 92E7     		b	.L244
 2715              	.LVL217:
 2716              	.L249:
1971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2717              		.loc 1 1971 0
 2718 0102 2268     		ldr	r2, [r4]
 2719 0104 1168     		ldr	r1, [r2]
 2720 0106 11F0400F 		tst	r1, #64
 2721 010a 03D1     		bne	.L250
1974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2722              		.loc 1 1974 0
 2723 010c 1168     		ldr	r1, [r2]
 2724 010e 41F04001 		orr	r1, r1, #64
 2725 0112 1160     		str	r1, [r2]
 2726              	.L250:
1977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2727              		.loc 1 1977 0
 2728 0114 2168     		ldr	r1, [r4]
 2729 0116 4A68     		ldr	r2, [r1, #4]
 2730 0118 42F02002 		orr	r2, r2, #32
 2731 011c 4A60     		str	r2, [r1, #4]
1980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2732              		.loc 1 1980 0
 2733 011e 2168     		ldr	r1, [r4]
 2734 0120 4A68     		ldr	r2, [r1, #4]
 2735 0122 42F00202 		orr	r2, r2, #2
 2736 0126 4A60     		str	r2, [r1, #4]
 2737 0128 7EE7     		b	.L244
ARM GAS  /tmp/ccVXEgNb.s 			page 126


 2738              	.LVL218:
 2739              	.L253:
1879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2740              		.loc 1 1879 0
 2741 012a 0223     		movs	r3, #2
 2742              	.LVL219:
 2743 012c 7CE7     		b	.L244
 2744              	.LVL220:
 2745              	.L255:
1885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2746              		.loc 1 1885 0
 2747 012e 0123     		movs	r3, #1
 2748              	.LVL221:
 2749 0130 7AE7     		b	.L244
 2750              	.LVL222:
 2751              	.L256:
 2752 0132 0123     		movs	r3, #1
 2753              	.LVL223:
 2754 0134 78E7     		b	.L244
 2755              	.LVL224:
 2756              	.L257:
 2757 0136 0123     		movs	r3, #1
 2758              	.LVL225:
 2759 0138 76E7     		b	.L244
 2760              	.LVL226:
 2761              	.L251:
1870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2762              		.loc 1 1870 0
 2763 013a 0223     		movs	r3, #2
 2764              	.LVL227:
 2765 013c 77E7     		b	.L242
 2766              	.L262:
 2767 013e 00BF     		.align	2
 2768              	.L261:
 2769 0140 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 2770 0144 00000000 		.word	SPI_DMATransmitReceiveCplt
 2771 0148 00000000 		.word	SPI_DMAError
 2772 014c 00000000 		.word	SPI_DMAHalfReceiveCplt
 2773 0150 00000000 		.word	SPI_DMAReceiveCplt
 2774              		.cfi_endproc
 2775              	.LFE84:
 2777              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2778              		.align	1
 2779              		.global	HAL_SPI_Receive_DMA
 2780              		.syntax unified
 2781              		.thumb
 2782              		.thumb_func
 2783              		.fpu softvfp
 2785              	HAL_SPI_Receive_DMA:
 2786              	.LFB83:
1741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2787              		.loc 1 1741 0
 2788              		.cfi_startproc
 2789              		@ args = 0, pretend = 0, frame = 0
 2790              		@ frame_needed = 0, uses_anonymous_args = 0
 2791              	.LVL228:
 2792 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccVXEgNb.s 			page 127


 2793              	.LCFI35:
 2794              		.cfi_def_cfa_offset 16
 2795              		.cfi_offset 3, -16
 2796              		.cfi_offset 4, -12
 2797              		.cfi_offset 5, -8
 2798              		.cfi_offset 14, -4
 2799 0002 0446     		mov	r4, r0
 2800              	.LVL229:
1747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2801              		.loc 1 1747 0
 2802 0004 8568     		ldr	r5, [r0, #8]
 2803 0006 1DB9     		cbnz	r5, .L264
1747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2804              		.loc 1 1747 0 is_stmt 0 discriminator 1
 2805 0008 4368     		ldr	r3, [r0, #4]
 2806 000a B3F5827F 		cmp	r3, #260
 2807 000e 11D0     		beq	.L275
 2808              	.L264:
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2809              		.loc 1 1759 0 is_stmt 1
 2810 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2811              	.LVL230:
 2812 0014 0128     		cmp	r0, #1
 2813 0016 6AD0     		beq	.L270
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2814              		.loc 1 1759 0 is_stmt 0 discriminator 2
 2815 0018 0123     		movs	r3, #1
 2816 001a 84F85030 		strb	r3, [r4, #80]
1761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2817              		.loc 1 1761 0 is_stmt 1 discriminator 2
 2818 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2819 0022 C0B2     		uxtb	r0, r0
 2820 0024 9842     		cmp	r0, r3
 2821 0026 0ED0     		beq	.L276
1763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2822              		.loc 1 1763 0
 2823 0028 0223     		movs	r3, #2
 2824              	.LVL231:
 2825              	.L266:
1841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2826              		.loc 1 1841 0
 2827 002a 0022     		movs	r2, #0
 2828 002c 84F85020 		strb	r2, [r4, #80]
 2829              	.LVL232:
 2830              	.L265:
1843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2831              		.loc 1 1843 0
 2832 0030 1846     		mov	r0, r3
 2833 0032 38BD     		pop	{r3, r4, r5, pc}
 2834              	.LVL233:
 2835              	.L275:
1749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2836              		.loc 1 1749 0
 2837 0034 0423     		movs	r3, #4
 2838 0036 80F85130 		strb	r3, [r0, #81]
1755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2839              		.loc 1 1755 0
ARM GAS  /tmp/ccVXEgNb.s 			page 128


 2840 003a 1346     		mov	r3, r2
 2841 003c 0A46     		mov	r2, r1
 2842              	.LVL234:
 2843 003e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2844              	.LVL235:
 2845 0042 0346     		mov	r3, r0
 2846 0044 F4E7     		b	.L265
 2847              	.LVL236:
 2848              	.L276:
1767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2849              		.loc 1 1767 0
 2850 0046 0029     		cmp	r1, #0
 2851 0048 4DD0     		beq	.L272
1767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2852              		.loc 1 1767 0 is_stmt 0 discriminator 1
 2853 004a 002A     		cmp	r2, #0
 2854 004c 4DD0     		beq	.L273
1774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2855              		.loc 1 1774 0 is_stmt 1
 2856 004e 0423     		movs	r3, #4
 2857 0050 84F85130 		strb	r3, [r4, #81]
1775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2858              		.loc 1 1775 0
 2859 0054 0023     		movs	r3, #0
 2860 0056 6365     		str	r3, [r4, #84]
1776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2861              		.loc 1 1776 0
 2862 0058 A163     		str	r1, [r4, #56]
1777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2863              		.loc 1 1777 0
 2864 005a A287     		strh	r2, [r4, #60]	@ movhi
1778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2865              		.loc 1 1778 0
 2866 005c E287     		strh	r2, [r4, #62]	@ movhi
1781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2867              		.loc 1 1781 0
 2868 005e 2364     		str	r3, [r4, #64]
1782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2869              		.loc 1 1782 0
 2870 0060 6364     		str	r3, [r4, #68]
1783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2871              		.loc 1 1783 0
 2872 0062 A386     		strh	r3, [r4, #52]	@ movhi
1784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2873              		.loc 1 1784 0
 2874 0064 E386     		strh	r3, [r4, #54]	@ movhi
1787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2875              		.loc 1 1787 0
 2876 0066 B5F5004F 		cmp	r5, #32768
 2877 006a 1DD0     		beq	.L277
 2878              	.LVL237:
 2879              	.L267:
1803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2880              		.loc 1 1803 0
 2881 006c E36C     		ldr	r3, [r4, #76]
 2882 006e 214A     		ldr	r2, .L278
 2883 0070 DA62     		str	r2, [r3, #44]
ARM GAS  /tmp/ccVXEgNb.s 			page 129


1806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2884              		.loc 1 1806 0
 2885 0072 E36C     		ldr	r3, [r4, #76]
 2886 0074 204A     		ldr	r2, .L278+4
 2887 0076 9A62     		str	r2, [r3, #40]
1809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2888              		.loc 1 1809 0
 2889 0078 E36C     		ldr	r3, [r4, #76]
 2890 007a 204A     		ldr	r2, .L278+8
 2891 007c 1A63     		str	r2, [r3, #48]
1812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2892              		.loc 1 1812 0
 2893 007e E36C     		ldr	r3, [r4, #76]
 2894 0080 0022     		movs	r2, #0
 2895 0082 5A63     		str	r2, [r3, #52]
1815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2896              		.loc 1 1815 0
 2897 0084 2168     		ldr	r1, [r4]
 2898              	.LVL238:
1816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2899              		.loc 1 1816 0
 2900 0086 E38F     		ldrh	r3, [r4, #62]
1815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2901              		.loc 1 1815 0
 2902 0088 9BB2     		uxth	r3, r3
 2903 008a A26B     		ldr	r2, [r4, #56]
 2904 008c 0C31     		adds	r1, r1, #12
 2905 008e E06C     		ldr	r0, [r4, #76]
 2906 0090 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2907              	.LVL239:
 2908 0094 0346     		mov	r3, r0
 2909 0096 90B1     		cbz	r0, .L268
1819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2910              		.loc 1 1819 0
 2911 0098 636D     		ldr	r3, [r4, #84]
 2912 009a 43F01003 		orr	r3, r3, #16
 2913 009e 6365     		str	r3, [r4, #84]
 2914              	.LVL240:
1822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2915              		.loc 1 1822 0
 2916 00a0 0123     		movs	r3, #1
 2917 00a2 84F85130 		strb	r3, [r4, #81]
1823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2918              		.loc 1 1823 0
 2919 00a6 C0E7     		b	.L266
 2920              	.LVL241:
 2921              	.L277:
1790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2922              		.loc 1 1790 0
 2923 00a8 2268     		ldr	r2, [r4]
 2924              	.LVL242:
 2925 00aa 1368     		ldr	r3, [r2]
 2926 00ac 23F04003 		bic	r3, r3, #64
 2927 00b0 1360     		str	r3, [r2]
 2928              	.LVL243:
1791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2929              		.loc 1 1791 0
ARM GAS  /tmp/ccVXEgNb.s 			page 130


 2930 00b2 2268     		ldr	r2, [r4]
 2931 00b4 1368     		ldr	r3, [r2]
 2932 00b6 23F48043 		bic	r3, r3, #16384
 2933 00ba 1360     		str	r3, [r2]
 2934 00bc D6E7     		b	.L267
 2935              	.LVL244:
 2936              	.L268:
1827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2937              		.loc 1 1827 0
 2938 00be 2268     		ldr	r2, [r4]
 2939 00c0 1168     		ldr	r1, [r2]
 2940 00c2 11F0400F 		tst	r1, #64
 2941 00c6 03D1     		bne	.L269
1830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2942              		.loc 1 1830 0
 2943 00c8 1168     		ldr	r1, [r2]
 2944 00ca 41F04001 		orr	r1, r1, #64
 2945 00ce 1160     		str	r1, [r2]
 2946              	.L269:
1834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2947              		.loc 1 1834 0
 2948 00d0 2168     		ldr	r1, [r4]
 2949 00d2 4A68     		ldr	r2, [r1, #4]
 2950 00d4 42F02002 		orr	r2, r2, #32
 2951 00d8 4A60     		str	r2, [r1, #4]
1837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2952              		.loc 1 1837 0
 2953 00da 2168     		ldr	r1, [r4]
 2954 00dc 4A68     		ldr	r2, [r1, #4]
 2955 00de 42F00102 		orr	r2, r2, #1
 2956 00e2 4A60     		str	r2, [r1, #4]
 2957 00e4 A1E7     		b	.L266
 2958              	.LVL245:
 2959              	.L272:
1769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2960              		.loc 1 1769 0
 2961 00e6 0123     		movs	r3, #1
 2962 00e8 9FE7     		b	.L266
 2963              	.L273:
 2964 00ea 0123     		movs	r3, #1
 2965 00ec 9DE7     		b	.L266
 2966              	.L270:
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2967              		.loc 1 1759 0
 2968 00ee 0223     		movs	r3, #2
 2969 00f0 9EE7     		b	.L265
 2970              	.L279:
 2971 00f2 00BF     		.align	2
 2972              	.L278:
 2973 00f4 00000000 		.word	SPI_DMAHalfReceiveCplt
 2974 00f8 00000000 		.word	SPI_DMAReceiveCplt
 2975 00fc 00000000 		.word	SPI_DMAError
 2976              		.cfi_endproc
 2977              	.LFE83:
 2979              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 2980              		.align	1
 2981              		.global	HAL_SPI_Abort
ARM GAS  /tmp/ccVXEgNb.s 			page 131


 2982              		.syntax unified
 2983              		.thumb
 2984              		.thumb_func
 2985              		.fpu softvfp
 2987              	HAL_SPI_Abort:
 2988              	.LFB85:
2002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 2989              		.loc 1 2002 0
 2990              		.cfi_startproc
 2991              		@ args = 0, pretend = 0, frame = 16
 2992              		@ frame_needed = 0, uses_anonymous_args = 0
 2993              	.LVL246:
 2994 0000 10B5     		push	{r4, lr}
 2995              	.LCFI36:
 2996              		.cfi_def_cfa_offset 8
 2997              		.cfi_offset 4, -8
 2998              		.cfi_offset 14, -4
 2999 0002 84B0     		sub	sp, sp, #16
 3000              	.LCFI37:
 3001              		.cfi_def_cfa_offset 24
 3002 0004 0446     		mov	r4, r0
 3003              	.LVL247:
2009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
 3004              		.loc 1 2009 0
 3005 0006 4B4B     		ldr	r3, .L301
 3006 0008 1B68     		ldr	r3, [r3]
 3007 000a 4B4A     		ldr	r2, .L301+4
 3008 000c A2FB0323 		umull	r2, r3, r2, r3
 3009 0010 5B0A     		lsrs	r3, r3, #9
 3010 0012 6422     		movs	r2, #100
 3011 0014 02FB03F3 		mul	r3, r2, r3
 3012 0018 0293     		str	r3, [sp, #8]
2010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3013              		.loc 1 2010 0
 3014 001a 029B     		ldr	r3, [sp, #8]
 3015 001c 0393     		str	r3, [sp, #12]
2013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3016              		.loc 1 2013 0
 3017 001e 0268     		ldr	r2, [r0]
 3018 0020 5368     		ldr	r3, [r2, #4]
 3019 0022 23F02003 		bic	r3, r3, #32
 3020 0026 5360     		str	r3, [r2, #4]
2016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3021              		.loc 1 2016 0
 3022 0028 0268     		ldr	r2, [r0]
 3023 002a 5368     		ldr	r3, [r2, #4]
 3024 002c 13F0800F 		tst	r3, #128
 3025 0030 12D0     		beq	.L281
2018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 3026              		.loc 1 2018 0
 3027 0032 424B     		ldr	r3, .L301+8
 3028 0034 4364     		str	r3, [r0, #68]
 3029              	.L284:
2022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 3030              		.loc 1 2022 0
 3031 0036 039B     		ldr	r3, [sp, #12]
 3032 0038 43B1     		cbz	r3, .L298
ARM GAS  /tmp/ccVXEgNb.s 			page 132


2027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3033              		.loc 1 2027 0
 3034 003a 039B     		ldr	r3, [sp, #12]
 3035 003c 013B     		subs	r3, r3, #1
 3036 003e 0393     		str	r3, [sp, #12]
2028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 3037              		.loc 1 2028 0
 3038 0040 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 3039 0044 DBB2     		uxtb	r3, r3
 3040 0046 072B     		cmp	r3, #7
 3041 0048 F5D1     		bne	.L284
 3042 004a 03E0     		b	.L283
 3043              	.L298:
2024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 3044              		.loc 1 2024 0
 3045 004c 636D     		ldr	r3, [r4, #84]
 3046 004e 43F04003 		orr	r3, r3, #64
 3047 0052 6365     		str	r3, [r4, #84]
 3048              	.L283:
2030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3049              		.loc 1 2030 0
 3050 0054 029B     		ldr	r3, [sp, #8]
 3051 0056 0393     		str	r3, [sp, #12]
 3052              	.L281:
2033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3053              		.loc 1 2033 0
 3054 0058 5368     		ldr	r3, [r2, #4]
 3055 005a 13F0400F 		tst	r3, #64
 3056 005e 12D0     		beq	.L285
2035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 3057              		.loc 1 2035 0
 3058 0060 374B     		ldr	r3, .L301+12
 3059 0062 2364     		str	r3, [r4, #64]
 3060              	.L288:
2039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 3061              		.loc 1 2039 0
 3062 0064 039B     		ldr	r3, [sp, #12]
 3063 0066 43B1     		cbz	r3, .L299
2044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3064              		.loc 1 2044 0
 3065 0068 039B     		ldr	r3, [sp, #12]
 3066 006a 013B     		subs	r3, r3, #1
 3067 006c 0393     		str	r3, [sp, #12]
2045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 3068              		.loc 1 2045 0
 3069 006e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 3070 0072 DBB2     		uxtb	r3, r3
 3071 0074 072B     		cmp	r3, #7
 3072 0076 F5D1     		bne	.L288
 3073 0078 03E0     		b	.L287
 3074              	.L299:
2041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 3075              		.loc 1 2041 0
 3076 007a 636D     		ldr	r3, [r4, #84]
 3077 007c 43F04003 		orr	r3, r3, #64
 3078 0080 6365     		str	r3, [r4, #84]
 3079              	.L287:
ARM GAS  /tmp/ccVXEgNb.s 			page 133


2047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3080              		.loc 1 2047 0
 3081 0082 029B     		ldr	r3, [sp, #8]
 3082 0084 0393     		str	r3, [sp, #12]
 3083              	.L285:
2051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3084              		.loc 1 2051 0
 3085 0086 5368     		ldr	r3, [r2, #4]
 3086 0088 13F0020F 		tst	r3, #2
 3087 008c 1DD0     		beq	.L289
2054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3088              		.loc 1 2054 0
 3089 008e A36C     		ldr	r3, [r4, #72]
 3090 0090 DBB1     		cbz	r3, .L289
2058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3091              		.loc 1 2058 0
 3092 0092 0022     		movs	r2, #0
 3093 0094 5A63     		str	r2, [r3, #52]
2061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 3094              		.loc 1 2061 0
 3095 0096 A06C     		ldr	r0, [r4, #72]
 3096              	.LVL248:
 3097 0098 FFF7FEFF 		bl	HAL_DMA_Abort
 3098              	.LVL249:
 3099 009c 08B1     		cbz	r0, .L290
2063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 3100              		.loc 1 2063 0
 3101 009e 4023     		movs	r3, #64
 3102 00a0 6365     		str	r3, [r4, #84]
 3103              	.L290:
2067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3104              		.loc 1 2067 0
 3105 00a2 2268     		ldr	r2, [r4]
 3106 00a4 5368     		ldr	r3, [r2, #4]
 3107 00a6 23F00203 		bic	r3, r3, #2
 3108 00aa 5360     		str	r3, [r2, #4]
 3109              	.L292:
2072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 3110              		.loc 1 2072 0
 3111 00ac 039B     		ldr	r3, [sp, #12]
 3112 00ae 43B1     		cbz	r3, .L300
2077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3113              		.loc 1 2077 0
 3114 00b0 039B     		ldr	r3, [sp, #12]
 3115 00b2 013B     		subs	r3, r3, #1
 3116 00b4 0393     		str	r3, [sp, #12]
2078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3117              		.loc 1 2078 0
 3118 00b6 2368     		ldr	r3, [r4]
 3119 00b8 9B68     		ldr	r3, [r3, #8]
 3120 00ba 13F0020F 		tst	r3, #2
 3121 00be F5D0     		beq	.L292
 3122 00c0 03E0     		b	.L289
 3123              	.L300:
2074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           break;
 3124              		.loc 1 2074 0
 3125 00c2 636D     		ldr	r3, [r4, #84]
ARM GAS  /tmp/ccVXEgNb.s 			page 134


 3126 00c4 43F04003 		orr	r3, r3, #64
 3127 00c8 6365     		str	r3, [r4, #84]
 3128              	.L289:
2083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3129              		.loc 1 2083 0
 3130 00ca 2368     		ldr	r3, [r4]
 3131 00cc 5B68     		ldr	r3, [r3, #4]
 3132 00ce 13F0010F 		tst	r3, #1
 3133 00d2 13D0     		beq	.L293
2086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3134              		.loc 1 2086 0
 3135 00d4 E36C     		ldr	r3, [r4, #76]
 3136 00d6 8BB1     		cbz	r3, .L293
2090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3137              		.loc 1 2090 0
 3138 00d8 0022     		movs	r2, #0
 3139 00da 5A63     		str	r2, [r3, #52]
2093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 3140              		.loc 1 2093 0
 3141 00dc E06C     		ldr	r0, [r4, #76]
 3142 00de FFF7FEFF 		bl	HAL_DMA_Abort
 3143              	.LVL250:
 3144 00e2 08B1     		cbz	r0, .L294
2095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 3145              		.loc 1 2095 0
 3146 00e4 4023     		movs	r3, #64
 3147 00e6 6365     		str	r3, [r4, #84]
 3148              	.L294:
2099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3149              		.loc 1 2099 0
 3150 00e8 2268     		ldr	r2, [r4]
 3151 00ea 1368     		ldr	r3, [r2]
 3152 00ec 23F04003 		bic	r3, r3, #64
 3153 00f0 1360     		str	r3, [r2]
2102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3154              		.loc 1 2102 0
 3155 00f2 2268     		ldr	r2, [r4]
 3156 00f4 5368     		ldr	r3, [r2, #4]
 3157 00f6 23F00103 		bic	r3, r3, #1
 3158 00fa 5360     		str	r3, [r2, #4]
 3159              	.L293:
2106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3160              		.loc 1 2106 0
 3161 00fc 0023     		movs	r3, #0
 3162 00fe E387     		strh	r3, [r4, #62]	@ movhi
2107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3163              		.loc 1 2107 0
 3164 0100 E386     		strh	r3, [r4, #54]	@ movhi
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3165              		.loc 1 2110 0
 3166 0102 636D     		ldr	r3, [r4, #84]
 3167 0104 402B     		cmp	r3, #64
 3168 0106 12D0     		beq	.L296
2118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3169              		.loc 1 2118 0
 3170 0108 0020     		movs	r0, #0
 3171 010a 6065     		str	r0, [r4, #84]
ARM GAS  /tmp/ccVXEgNb.s 			page 135


 3172              	.L295:
 3173              	.LVL251:
 3174              	.LBB4:
2122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 3175              		.loc 1 2122 0
 3176 010c 0022     		movs	r2, #0
 3177 010e 0092     		str	r2, [sp]
 3178 0110 2368     		ldr	r3, [r4]
 3179 0112 D968     		ldr	r1, [r3, #12]
 3180 0114 0091     		str	r1, [sp]
 3181 0116 9968     		ldr	r1, [r3, #8]
 3182 0118 0091     		str	r1, [sp]
 3183 011a 0099     		ldr	r1, [sp]
 3184              	.LBE4:
 3185              	.LBB5:
2124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 3186              		.loc 1 2124 0
 3187 011c 0192     		str	r2, [sp, #4]
 3188 011e 9B68     		ldr	r3, [r3, #8]
 3189 0120 0193     		str	r3, [sp, #4]
 3190 0122 019B     		ldr	r3, [sp, #4]
 3191              	.LBE5:
2128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3192              		.loc 1 2128 0
 3193 0124 0123     		movs	r3, #1
 3194 0126 84F85130 		strb	r3, [r4, #81]
2131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3195              		.loc 1 2131 0
 3196 012a 04B0     		add	sp, sp, #16
 3197              	.LCFI38:
 3198              		.cfi_remember_state
 3199              		.cfi_def_cfa_offset 8
 3200              		@ sp needed
 3201 012c 10BD     		pop	{r4, pc}
 3202              	.LVL252:
 3203              	.L296:
 3204              	.LCFI39:
 3205              		.cfi_restore_state
2113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3206              		.loc 1 2113 0
 3207 012e 0120     		movs	r0, #1
 3208 0130 ECE7     		b	.L295
 3209              	.L302:
 3210 0132 00BF     		.align	2
 3211              	.L301:
 3212 0134 00000000 		.word	SystemCoreClock
 3213 0138 F1197605 		.word	91625969
 3214 013c 00000000 		.word	SPI_AbortTx_ISR
 3215 0140 00000000 		.word	SPI_AbortRx_ISR
 3216              		.cfi_endproc
 3217              	.LFE85:
 3219              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 3220              		.align	1
 3221              		.global	HAL_SPI_DMAPause
 3222              		.syntax unified
 3223              		.thumb
 3224              		.thumb_func
ARM GAS  /tmp/ccVXEgNb.s 			page 136


 3225              		.fpu softvfp
 3227              	HAL_SPI_DMAPause:
 3228              	.LFB87:
2312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 3229              		.loc 1 2312 0
 3230              		.cfi_startproc
 3231              		@ args = 0, pretend = 0, frame = 0
 3232              		@ frame_needed = 0, uses_anonymous_args = 0
 3233              		@ link register save eliminated.
 3234              	.LVL253:
2314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3235              		.loc 1 2314 0
 3236 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3237 0004 012B     		cmp	r3, #1
 3238 0006 0CD0     		beq	.L305
2314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3239              		.loc 1 2314 0 is_stmt 0 discriminator 2
 3240 0008 0123     		movs	r3, #1
 3241 000a 80F85030 		strb	r3, [r0, #80]
2317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3242              		.loc 1 2317 0 is_stmt 1 discriminator 2
 3243 000e 0268     		ldr	r2, [r0]
 3244 0010 5368     		ldr	r3, [r2, #4]
 3245 0012 23F00303 		bic	r3, r3, #3
 3246 0016 5360     		str	r3, [r2, #4]
2320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3247              		.loc 1 2320 0 discriminator 2
 3248 0018 0023     		movs	r3, #0
 3249 001a 80F85030 		strb	r3, [r0, #80]
2322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 3250              		.loc 1 2322 0 discriminator 2
 3251 001e 1846     		mov	r0, r3
 3252              	.LVL254:
 3253 0020 7047     		bx	lr
 3254              	.LVL255:
 3255              	.L305:
2314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3256              		.loc 1 2314 0
 3257 0022 0220     		movs	r0, #2
 3258              	.LVL256:
2323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3259              		.loc 1 2323 0
 3260 0024 7047     		bx	lr
 3261              		.cfi_endproc
 3262              	.LFE87:
 3264              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 3265              		.align	1
 3266              		.global	HAL_SPI_DMAResume
 3267              		.syntax unified
 3268              		.thumb
 3269              		.thumb_func
 3270              		.fpu softvfp
 3272              	HAL_SPI_DMAResume:
 3273              	.LFB88:
2332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 3274              		.loc 1 2332 0
 3275              		.cfi_startproc
ARM GAS  /tmp/ccVXEgNb.s 			page 137


 3276              		@ args = 0, pretend = 0, frame = 0
 3277              		@ frame_needed = 0, uses_anonymous_args = 0
 3278              		@ link register save eliminated.
 3279              	.LVL257:
2334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3280              		.loc 1 2334 0
 3281 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3282 0004 012B     		cmp	r3, #1
 3283 0006 0CD0     		beq	.L308
2334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3284              		.loc 1 2334 0 is_stmt 0 discriminator 2
 3285 0008 0123     		movs	r3, #1
 3286 000a 80F85030 		strb	r3, [r0, #80]
2337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3287              		.loc 1 2337 0 is_stmt 1 discriminator 2
 3288 000e 0268     		ldr	r2, [r0]
 3289 0010 5368     		ldr	r3, [r2, #4]
 3290 0012 43F00303 		orr	r3, r3, #3
 3291 0016 5360     		str	r3, [r2, #4]
2340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3292              		.loc 1 2340 0 discriminator 2
 3293 0018 0023     		movs	r3, #0
 3294 001a 80F85030 		strb	r3, [r0, #80]
2342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 3295              		.loc 1 2342 0 discriminator 2
 3296 001e 1846     		mov	r0, r3
 3297              	.LVL258:
 3298 0020 7047     		bx	lr
 3299              	.LVL259:
 3300              	.L308:
2334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3301              		.loc 1 2334 0
 3302 0022 0220     		movs	r0, #2
 3303              	.LVL260:
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3304              		.loc 1 2343 0
 3305 0024 7047     		bx	lr
 3306              		.cfi_endproc
 3307              	.LFE88:
 3309              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 3310              		.align	1
 3311              		.global	HAL_SPI_DMAStop
 3312              		.syntax unified
 3313              		.thumb
 3314              		.thumb_func
 3315              		.fpu softvfp
 3317              	HAL_SPI_DMAStop:
 3318              	.LFB89:
2352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3319              		.loc 1 2352 0
 3320              		.cfi_startproc
 3321              		@ args = 0, pretend = 0, frame = 0
 3322              		@ frame_needed = 0, uses_anonymous_args = 0
 3323              	.LVL261:
 3324 0000 38B5     		push	{r3, r4, r5, lr}
 3325              	.LCFI40:
 3326              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccVXEgNb.s 			page 138


 3327              		.cfi_offset 3, -16
 3328              		.cfi_offset 4, -12
 3329              		.cfi_offset 5, -8
 3330              		.cfi_offset 14, -4
 3331 0002 0446     		mov	r4, r0
 3332              	.LVL262:
2361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3333              		.loc 1 2361 0
 3334 0004 806C     		ldr	r0, [r0, #72]
 3335              	.LVL263:
 3336 0006 E0B1     		cbz	r0, .L312
2363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3337              		.loc 1 2363 0
 3338 0008 FFF7FEFF 		bl	HAL_DMA_Abort
 3339              	.LVL264:
 3340 000c 0546     		mov	r5, r0
 3341 000e 20B1     		cbz	r0, .L310
2365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3342              		.loc 1 2365 0
 3343 0010 636D     		ldr	r3, [r4, #84]
 3344 0012 43F01003 		orr	r3, r3, #16
 3345 0016 6365     		str	r3, [r4, #84]
 3346              	.LVL265:
2366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3347              		.loc 1 2366 0
 3348 0018 0125     		movs	r5, #1
 3349              	.LVL266:
 3350              	.L310:
2370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3351              		.loc 1 2370 0
 3352 001a E06C     		ldr	r0, [r4, #76]
 3353 001c 38B1     		cbz	r0, .L311
2372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3354              		.loc 1 2372 0
 3355 001e FFF7FEFF 		bl	HAL_DMA_Abort
 3356              	.LVL267:
 3357 0022 20B1     		cbz	r0, .L311
2374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3358              		.loc 1 2374 0
 3359 0024 636D     		ldr	r3, [r4, #84]
 3360 0026 43F01003 		orr	r3, r3, #16
 3361 002a 6365     		str	r3, [r4, #84]
 3362              	.LVL268:
2375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3363              		.loc 1 2375 0
 3364 002c 0125     		movs	r5, #1
 3365              	.LVL269:
 3366              	.L311:
2380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3367              		.loc 1 2380 0
 3368 002e 2268     		ldr	r2, [r4]
 3369 0030 5368     		ldr	r3, [r2, #4]
 3370 0032 23F00303 		bic	r3, r3, #3
 3371 0036 5360     		str	r3, [r2, #4]
2381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 3372              		.loc 1 2381 0
 3373 0038 0123     		movs	r3, #1
ARM GAS  /tmp/ccVXEgNb.s 			page 139


 3374 003a 84F85130 		strb	r3, [r4, #81]
2383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3375              		.loc 1 2383 0
 3376 003e 2846     		mov	r0, r5
 3377 0040 38BD     		pop	{r3, r4, r5, pc}
 3378              	.LVL270:
 3379              	.L312:
2353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 3380              		.loc 1 2353 0
 3381 0042 0025     		movs	r5, #0
 3382 0044 E9E7     		b	.L310
 3383              		.cfi_endproc
 3384              	.LFE89:
 3386              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 3387              		.align	1
 3388              		.weak	HAL_SPI_TxCpltCallback
 3389              		.syntax unified
 3390              		.thumb
 3391              		.thumb_func
 3392              		.fpu softvfp
 3394              	HAL_SPI_TxCpltCallback:
 3395              	.LFB91:
2506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3396              		.loc 1 2506 0
 3397              		.cfi_startproc
 3398              		@ args = 0, pretend = 0, frame = 0
 3399              		@ frame_needed = 0, uses_anonymous_args = 0
 3400              		@ link register save eliminated.
 3401              	.LVL271:
 3402 0000 7047     		bx	lr
 3403              		.cfi_endproc
 3404              	.LFE91:
 3406              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 3407              		.align	1
 3408              		.weak	HAL_SPI_RxCpltCallback
 3409              		.syntax unified
 3410              		.thumb
 3411              		.thumb_func
 3412              		.fpu softvfp
 3414              	HAL_SPI_RxCpltCallback:
 3415              	.LFB92:
2522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3416              		.loc 1 2522 0
 3417              		.cfi_startproc
 3418              		@ args = 0, pretend = 0, frame = 0
 3419              		@ frame_needed = 0, uses_anonymous_args = 0
 3420              		@ link register save eliminated.
 3421              	.LVL272:
 3422 0000 7047     		bx	lr
 3423              		.cfi_endproc
 3424              	.LFE92:
 3426              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 3427              		.align	1
 3428              		.weak	HAL_SPI_TxRxCpltCallback
 3429              		.syntax unified
 3430              		.thumb
 3431              		.thumb_func
ARM GAS  /tmp/ccVXEgNb.s 			page 140


 3432              		.fpu softvfp
 3434              	HAL_SPI_TxRxCpltCallback:
 3435              	.LFB93:
2538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3436              		.loc 1 2538 0
 3437              		.cfi_startproc
 3438              		@ args = 0, pretend = 0, frame = 0
 3439              		@ frame_needed = 0, uses_anonymous_args = 0
 3440              		@ link register save eliminated.
 3441              	.LVL273:
 3442 0000 7047     		bx	lr
 3443              		.cfi_endproc
 3444              	.LFE93:
 3446              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 3447              		.align	1
 3448              		.weak	HAL_SPI_TxHalfCpltCallback
 3449              		.syntax unified
 3450              		.thumb
 3451              		.thumb_func
 3452              		.fpu softvfp
 3454              	HAL_SPI_TxHalfCpltCallback:
 3455              	.LFB94:
2554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3456              		.loc 1 2554 0
 3457              		.cfi_startproc
 3458              		@ args = 0, pretend = 0, frame = 0
 3459              		@ frame_needed = 0, uses_anonymous_args = 0
 3460              		@ link register save eliminated.
 3461              	.LVL274:
 3462 0000 7047     		bx	lr
 3463              		.cfi_endproc
 3464              	.LFE94:
 3466              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 3467              		.align	1
 3468              		.syntax unified
 3469              		.thumb
 3470              		.thumb_func
 3471              		.fpu softvfp
 3473              	SPI_DMAHalfTransmitCplt:
 3474              	.LFB104:
2918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3475              		.loc 1 2918 0
 3476              		.cfi_startproc
 3477              		@ args = 0, pretend = 0, frame = 0
 3478              		@ frame_needed = 0, uses_anonymous_args = 0
 3479              	.LVL275:
2918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3480              		.loc 1 2918 0
 3481 0000 08B5     		push	{r3, lr}
 3482              	.LCFI41:
 3483              		.cfi_def_cfa_offset 8
 3484              		.cfi_offset 3, -8
 3485              		.cfi_offset 14, -4
 3486              	.LVL276:
2925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3487              		.loc 1 2925 0
 3488 0002 406A     		ldr	r0, [r0, #36]
ARM GAS  /tmp/ccVXEgNb.s 			page 141


 3489              	.LVL277:
 3490 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 3491              	.LVL278:
 3492 0008 08BD     		pop	{r3, pc}
 3493              		.cfi_endproc
 3494              	.LFE104:
 3496              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 3497              		.align	1
 3498              		.weak	HAL_SPI_RxHalfCpltCallback
 3499              		.syntax unified
 3500              		.thumb
 3501              		.thumb_func
 3502              		.fpu softvfp
 3504              	HAL_SPI_RxHalfCpltCallback:
 3505              	.LFB95:
2570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3506              		.loc 1 2570 0
 3507              		.cfi_startproc
 3508              		@ args = 0, pretend = 0, frame = 0
 3509              		@ frame_needed = 0, uses_anonymous_args = 0
 3510              		@ link register save eliminated.
 3511              	.LVL279:
 3512 0000 7047     		bx	lr
 3513              		.cfi_endproc
 3514              	.LFE95:
 3516              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 3517              		.align	1
 3518              		.syntax unified
 3519              		.thumb
 3520              		.thumb_func
 3521              		.fpu softvfp
 3523              	SPI_DMAHalfReceiveCplt:
 3524              	.LFB105:
2936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3525              		.loc 1 2936 0
 3526              		.cfi_startproc
 3527              		@ args = 0, pretend = 0, frame = 0
 3528              		@ frame_needed = 0, uses_anonymous_args = 0
 3529              	.LVL280:
2936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3530              		.loc 1 2936 0
 3531 0000 08B5     		push	{r3, lr}
 3532              	.LCFI42:
 3533              		.cfi_def_cfa_offset 8
 3534              		.cfi_offset 3, -8
 3535              		.cfi_offset 14, -4
 3536              	.LVL281:
2943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3537              		.loc 1 2943 0
 3538 0002 406A     		ldr	r0, [r0, #36]
 3539              	.LVL282:
 3540 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 3541              	.LVL283:
 3542 0008 08BD     		pop	{r3, pc}
 3543              		.cfi_endproc
 3544              	.LFE105:
 3546              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccVXEgNb.s 			page 142


 3547              		.align	1
 3548              		.weak	HAL_SPI_TxRxHalfCpltCallback
 3549              		.syntax unified
 3550              		.thumb
 3551              		.thumb_func
 3552              		.fpu softvfp
 3554              	HAL_SPI_TxRxHalfCpltCallback:
 3555              	.LFB96:
2586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3556              		.loc 1 2586 0
 3557              		.cfi_startproc
 3558              		@ args = 0, pretend = 0, frame = 0
 3559              		@ frame_needed = 0, uses_anonymous_args = 0
 3560              		@ link register save eliminated.
 3561              	.LVL284:
 3562 0000 7047     		bx	lr
 3563              		.cfi_endproc
 3564              	.LFE96:
 3566              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 3567              		.align	1
 3568              		.syntax unified
 3569              		.thumb
 3570              		.thumb_func
 3571              		.fpu softvfp
 3573              	SPI_DMAHalfTransmitReceiveCplt:
 3574              	.LFB106:
2954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3575              		.loc 1 2954 0
 3576              		.cfi_startproc
 3577              		@ args = 0, pretend = 0, frame = 0
 3578              		@ frame_needed = 0, uses_anonymous_args = 0
 3579              	.LVL285:
2954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3580              		.loc 1 2954 0
 3581 0000 08B5     		push	{r3, lr}
 3582              	.LCFI43:
 3583              		.cfi_def_cfa_offset 8
 3584              		.cfi_offset 3, -8
 3585              		.cfi_offset 14, -4
 3586              	.LVL286:
2961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3587              		.loc 1 2961 0
 3588 0002 406A     		ldr	r0, [r0, #36]
 3589              	.LVL287:
 3590 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 3591              	.LVL288:
 3592 0008 08BD     		pop	{r3, pc}
 3593              		.cfi_endproc
 3594              	.LFE106:
 3596              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 3597              		.align	1
 3598              		.weak	HAL_SPI_ErrorCallback
 3599              		.syntax unified
 3600              		.thumb
 3601              		.thumb_func
 3602              		.fpu softvfp
 3604              	HAL_SPI_ErrorCallback:
ARM GAS  /tmp/ccVXEgNb.s 			page 143


 3605              	.LFB97:
2602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3606              		.loc 1 2602 0
 3607              		.cfi_startproc
 3608              		@ args = 0, pretend = 0, frame = 0
 3609              		@ frame_needed = 0, uses_anonymous_args = 0
 3610              		@ link register save eliminated.
 3611              	.LVL289:
 3612 0000 7047     		bx	lr
 3613              		.cfi_endproc
 3614              	.LFE97:
 3616              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 3617              		.align	1
 3618              		.syntax unified
 3619              		.thumb
 3620              		.thumb_func
 3621              		.fpu softvfp
 3623              	SPI_CloseTx_ISR:
 3624              	.LFB124:
3819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 3625              		.loc 1 3819 0
 3626              		.cfi_startproc
 3627              		@ args = 0, pretend = 0, frame = 8
 3628              		@ frame_needed = 0, uses_anonymous_args = 0
 3629              	.LVL290:
3819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 3630              		.loc 1 3819 0
 3631 0000 10B5     		push	{r4, lr}
 3632              	.LCFI44:
 3633              		.cfi_def_cfa_offset 8
 3634              		.cfi_offset 4, -8
 3635              		.cfi_offset 14, -4
 3636 0002 82B0     		sub	sp, sp, #8
 3637              	.LCFI45:
 3638              		.cfi_def_cfa_offset 16
 3639 0004 0446     		mov	r4, r0
3821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3640              		.loc 1 3821 0
 3641 0006 204B     		ldr	r3, .L338
 3642 0008 1B68     		ldr	r3, [r3]
 3643 000a 204A     		ldr	r2, .L338+4
 3644 000c A2FB0323 		umull	r2, r3, r2, r3
 3645 0010 5B0A     		lsrs	r3, r3, #9
 3646 0012 6422     		movs	r2, #100
 3647 0014 02FB03F3 		mul	r3, r2, r3
 3648 0018 0193     		str	r3, [sp, #4]
3824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3649              		.loc 1 3824 0
 3650 001a FFF7FEFF 		bl	HAL_GetTick
 3651              	.LVL291:
 3652 001e 0246     		mov	r2, r0
 3653              	.LVL292:
 3654              	.L330:
3829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3655              		.loc 1 3829 0
 3656 0020 019B     		ldr	r3, [sp, #4]
 3657 0022 43B1     		cbz	r3, .L336
ARM GAS  /tmp/ccVXEgNb.s 			page 144


3834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3658              		.loc 1 3834 0
 3659 0024 019B     		ldr	r3, [sp, #4]
 3660 0026 013B     		subs	r3, r3, #1
 3661 0028 0193     		str	r3, [sp, #4]
3835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3662              		.loc 1 3835 0
 3663 002a 2368     		ldr	r3, [r4]
 3664 002c 9B68     		ldr	r3, [r3, #8]
 3665 002e 13F0020F 		tst	r3, #2
 3666 0032 F5D0     		beq	.L330
 3667 0034 03E0     		b	.L329
 3668              	.L336:
3831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
 3669              		.loc 1 3831 0
 3670 0036 636D     		ldr	r3, [r4, #84]
 3671 0038 43F02003 		orr	r3, r3, #32
 3672 003c 6365     		str	r3, [r4, #84]
 3673              	.L329:
3838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3674              		.loc 1 3838 0
 3675 003e 2168     		ldr	r1, [r4]
 3676 0040 4B68     		ldr	r3, [r1, #4]
 3677 0042 23F0A003 		bic	r3, r3, #160
 3678 0046 4B60     		str	r3, [r1, #4]
3841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3679              		.loc 1 3841 0
 3680 0048 6421     		movs	r1, #100
 3681 004a 2046     		mov	r0, r4
 3682              	.LVL293:
 3683 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3684              	.LVL294:
 3685 0050 18B1     		cbz	r0, .L331
3843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3686              		.loc 1 3843 0
 3687 0052 636D     		ldr	r3, [r4, #84]
 3688 0054 43F02003 		orr	r3, r3, #32
 3689 0058 6365     		str	r3, [r4, #84]
 3690              	.L331:
3847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3691              		.loc 1 3847 0
 3692 005a A368     		ldr	r3, [r4, #8]
 3693 005c 33B9     		cbnz	r3, .L332
 3694              	.LBB6:
3849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3695              		.loc 1 3849 0
 3696 005e 0093     		str	r3, [sp]
 3697 0060 2368     		ldr	r3, [r4]
 3698 0062 DA68     		ldr	r2, [r3, #12]
 3699 0064 0092     		str	r2, [sp]
 3700 0066 9B68     		ldr	r3, [r3, #8]
 3701 0068 0093     		str	r3, [sp]
 3702 006a 009B     		ldr	r3, [sp]
 3703              	.L332:
 3704              	.LBE6:
3852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 3705              		.loc 1 3852 0
ARM GAS  /tmp/ccVXEgNb.s 			page 145


 3706 006c 0123     		movs	r3, #1
 3707 006e 84F85130 		strb	r3, [r4, #81]
3853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3708              		.loc 1 3853 0
 3709 0072 636D     		ldr	r3, [r4, #84]
 3710 0074 23B9     		cbnz	r3, .L337
3868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3711              		.loc 1 3868 0
 3712 0076 2046     		mov	r0, r4
 3713 0078 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 3714              	.LVL295:
 3715              	.L327:
3871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3716              		.loc 1 3871 0
 3717 007c 02B0     		add	sp, sp, #8
 3718              	.LCFI46:
 3719              		.cfi_remember_state
 3720              		.cfi_def_cfa_offset 8
 3721              		@ sp needed
 3722 007e 10BD     		pop	{r4, pc}
 3723              	.LVL296:
 3724              	.L337:
 3725              	.LCFI47:
 3726              		.cfi_restore_state
3859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3727              		.loc 1 3859 0
 3728 0080 2046     		mov	r0, r4
 3729 0082 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3730              	.LVL297:
 3731 0086 F9E7     		b	.L327
 3732              	.L339:
 3733              		.align	2
 3734              	.L338:
 3735 0088 00000000 		.word	SystemCoreClock
 3736 008c F1197605 		.word	91625969
 3737              		.cfi_endproc
 3738              	.LFE124:
 3740              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 3741              		.align	1
 3742              		.syntax unified
 3743              		.thumb
 3744              		.thumb_func
 3745              		.fpu softvfp
 3747              	SPI_TxISR_8BIT:
 3748              	.LFB117:
3449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 3749              		.loc 1 3449 0
 3750              		.cfi_startproc
 3751              		@ args = 0, pretend = 0, frame = 0
 3752              		@ frame_needed = 0, uses_anonymous_args = 0
 3753              	.LVL298:
 3754 0000 08B5     		push	{r3, lr}
 3755              	.LCFI48:
 3756              		.cfi_def_cfa_offset 8
 3757              		.cfi_offset 3, -8
 3758              		.cfi_offset 14, -4
3450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
ARM GAS  /tmp/ccVXEgNb.s 			page 146


 3759              		.loc 1 3450 0
 3760 0002 0368     		ldr	r3, [r0]
 3761 0004 026B     		ldr	r2, [r0, #48]
 3762 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3763 0008 1A73     		strb	r2, [r3, #12]
3451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 3764              		.loc 1 3451 0
 3765 000a 036B     		ldr	r3, [r0, #48]
 3766 000c 0133     		adds	r3, r3, #1
 3767 000e 0363     		str	r3, [r0, #48]
3452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3768              		.loc 1 3452 0
 3769 0010 C38E     		ldrh	r3, [r0, #54]
 3770 0012 9BB2     		uxth	r3, r3
 3771 0014 013B     		subs	r3, r3, #1
 3772 0016 9BB2     		uxth	r3, r3
 3773 0018 C386     		strh	r3, [r0, #54]	@ movhi
3454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3774              		.loc 1 3454 0
 3775 001a C38E     		ldrh	r3, [r0, #54]
 3776 001c 9BB2     		uxth	r3, r3
 3777 001e 03B1     		cbz	r3, .L343
 3778              	.LVL299:
 3779              	.L340:
 3780 0020 08BD     		pop	{r3, pc}
 3781              	.LVL300:
 3782              	.L343:
3463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3783              		.loc 1 3463 0
 3784 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3785              	.LVL301:
3465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3786              		.loc 1 3465 0
 3787 0026 FBE7     		b	.L340
 3788              		.cfi_endproc
 3789              	.LFE117:
 3791              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 3792              		.align	1
 3793              		.syntax unified
 3794              		.thumb
 3795              		.thumb_func
 3796              		.fpu softvfp
 3798              	SPI_TxISR_16BIT:
 3799              	.LFB118:
3474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 3800              		.loc 1 3474 0
 3801              		.cfi_startproc
 3802              		@ args = 0, pretend = 0, frame = 0
 3803              		@ frame_needed = 0, uses_anonymous_args = 0
 3804              	.LVL302:
 3805 0000 08B5     		push	{r3, lr}
 3806              	.LCFI49:
 3807              		.cfi_def_cfa_offset 8
 3808              		.cfi_offset 3, -8
 3809              		.cfi_offset 14, -4
3476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 3810              		.loc 1 3476 0
ARM GAS  /tmp/ccVXEgNb.s 			page 147


 3811 0002 0368     		ldr	r3, [r0]
 3812 0004 026B     		ldr	r2, [r0, #48]
 3813 0006 1288     		ldrh	r2, [r2]
 3814 0008 DA60     		str	r2, [r3, #12]
3477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 3815              		.loc 1 3477 0
 3816 000a 036B     		ldr	r3, [r0, #48]
 3817 000c 0233     		adds	r3, r3, #2
 3818 000e 0363     		str	r3, [r0, #48]
3478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3819              		.loc 1 3478 0
 3820 0010 C38E     		ldrh	r3, [r0, #54]
 3821 0012 9BB2     		uxth	r3, r3
 3822 0014 013B     		subs	r3, r3, #1
 3823 0016 9BB2     		uxth	r3, r3
 3824 0018 C386     		strh	r3, [r0, #54]	@ movhi
3480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3825              		.loc 1 3480 0
 3826 001a C38E     		ldrh	r3, [r0, #54]
 3827 001c 9BB2     		uxth	r3, r3
 3828 001e 03B1     		cbz	r3, .L347
 3829              	.LVL303:
 3830              	.L344:
 3831 0020 08BD     		pop	{r3, pc}
 3832              	.LVL304:
 3833              	.L347:
3489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3834              		.loc 1 3489 0
 3835 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3836              	.LVL305:
3491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3837              		.loc 1 3491 0
 3838 0026 FBE7     		b	.L344
 3839              		.cfi_endproc
 3840              	.LFE118:
 3842              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 3843              		.align	1
 3844              		.syntax unified
 3845              		.thumb
 3846              		.thumb_func
 3847              		.fpu softvfp
 3849              	SPI_CloseRx_ISR:
 3850              	.LFB123:
3756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 3851              		.loc 1 3756 0
 3852              		.cfi_startproc
 3853              		@ args = 0, pretend = 0, frame = 8
 3854              		@ frame_needed = 0, uses_anonymous_args = 0
 3855              	.LVL306:
 3856 0000 10B5     		push	{r4, lr}
 3857              	.LCFI50:
 3858              		.cfi_def_cfa_offset 8
 3859              		.cfi_offset 4, -8
 3860              		.cfi_offset 14, -4
 3861 0002 82B0     		sub	sp, sp, #8
 3862              	.LCFI51:
 3863              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccVXEgNb.s 			page 148


 3864 0004 0446     		mov	r4, r0
3758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3865              		.loc 1 3758 0
 3866 0006 0268     		ldr	r2, [r0]
 3867 0008 5368     		ldr	r3, [r2, #4]
 3868 000a 23F06003 		bic	r3, r3, #96
 3869 000e 5360     		str	r3, [r2, #4]
3761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3870              		.loc 1 3761 0
 3871 0010 FFF7FEFF 		bl	HAL_GetTick
 3872              	.LVL307:
 3873 0014 0246     		mov	r2, r0
 3874 0016 6421     		movs	r1, #100
 3875 0018 2046     		mov	r0, r4
 3876 001a FFF7FEFF 		bl	SPI_EndRxTransaction
 3877              	.LVL308:
 3878 001e 18B1     		cbz	r0, .L349
3763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3879              		.loc 1 3763 0
 3880 0020 636D     		ldr	r3, [r4, #84]
 3881 0022 43F02003 		orr	r3, r3, #32
 3882 0026 6365     		str	r3, [r4, #84]
 3883              	.L349:
3767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3884              		.loc 1 3767 0
 3885 0028 A368     		ldr	r3, [r4, #8]
 3886 002a 33B9     		cbnz	r3, .L350
 3887              	.LBB7:
3769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3888              		.loc 1 3769 0
 3889 002c 0193     		str	r3, [sp, #4]
 3890 002e 2368     		ldr	r3, [r4]
 3891 0030 DA68     		ldr	r2, [r3, #12]
 3892 0032 0192     		str	r2, [sp, #4]
 3893 0034 9B68     		ldr	r3, [r3, #8]
 3894 0036 0193     		str	r3, [sp, #4]
 3895 0038 019B     		ldr	r3, [sp, #4]
 3896              	.L350:
 3897              	.LBE7:
3771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3898              		.loc 1 3771 0
 3899 003a 0123     		movs	r3, #1
 3900 003c 84F85130 		strb	r3, [r4, #81]
3789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3901              		.loc 1 3789 0
 3902 0040 636D     		ldr	r3, [r4, #84]
 3903 0042 23B1     		cbz	r3, .L354
3804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3904              		.loc 1 3804 0
 3905 0044 2046     		mov	r0, r4
 3906 0046 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3907              	.LVL309:
 3908              	.L348:
3810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3909              		.loc 1 3810 0
 3910 004a 02B0     		add	sp, sp, #8
 3911              	.LCFI52:
ARM GAS  /tmp/ccVXEgNb.s 			page 149


 3912              		.cfi_remember_state
 3913              		.cfi_def_cfa_offset 8
 3914              		@ sp needed
 3915 004c 10BD     		pop	{r4, pc}
 3916              	.LVL310:
 3917              	.L354:
 3918              	.LCFI53:
 3919              		.cfi_restore_state
3795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3920              		.loc 1 3795 0
 3921 004e 2046     		mov	r0, r4
 3922 0050 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3923              	.LVL311:
 3924 0054 F9E7     		b	.L348
 3925              		.cfi_endproc
 3926              	.LFE123:
 3928              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 3929              		.align	1
 3930              		.syntax unified
 3931              		.thumb
 3932              		.thumb_func
 3933              		.fpu softvfp
 3935              	SPI_RxISR_8BIT:
 3936              	.LFB115:
3360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 3937              		.loc 1 3360 0
 3938              		.cfi_startproc
 3939              		@ args = 0, pretend = 0, frame = 0
 3940              		@ frame_needed = 0, uses_anonymous_args = 0
 3941              	.LVL312:
 3942 0000 08B5     		push	{r3, lr}
 3943              	.LCFI54:
 3944              		.cfi_def_cfa_offset 8
 3945              		.cfi_offset 3, -8
 3946              		.cfi_offset 14, -4
3361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 3947              		.loc 1 3361 0
 3948 0002 836B     		ldr	r3, [r0, #56]
 3949 0004 0268     		ldr	r2, [r0]
 3950 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 3951 0008 1A70     		strb	r2, [r3]
3362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 3952              		.loc 1 3362 0
 3953 000a 836B     		ldr	r3, [r0, #56]
 3954 000c 0133     		adds	r3, r3, #1
 3955 000e 8363     		str	r3, [r0, #56]
3363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3956              		.loc 1 3363 0
 3957 0010 C38F     		ldrh	r3, [r0, #62]
 3958 0012 9BB2     		uxth	r3, r3
 3959 0014 013B     		subs	r3, r3, #1
 3960 0016 9BB2     		uxth	r3, r3
 3961 0018 C387     		strh	r3, [r0, #62]	@ movhi
3373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3962              		.loc 1 3373 0
 3963 001a C38F     		ldrh	r3, [r0, #62]
 3964 001c 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccVXEgNb.s 			page 150


 3965 001e 03B1     		cbz	r3, .L358
 3966              	.LVL313:
 3967              	.L355:
 3968 0020 08BD     		pop	{r3, pc}
 3969              	.LVL314:
 3970              	.L358:
3382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3971              		.loc 1 3382 0
 3972 0022 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3973              	.LVL315:
3384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3974              		.loc 1 3384 0
 3975 0026 FBE7     		b	.L355
 3976              		.cfi_endproc
 3977              	.LFE115:
 3979              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 3980              		.align	1
 3981              		.syntax unified
 3982              		.thumb
 3983              		.thumb_func
 3984              		.fpu softvfp
 3986              	SPI_RxISR_16BIT:
 3987              	.LFB116:
3416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 3988              		.loc 1 3416 0
 3989              		.cfi_startproc
 3990              		@ args = 0, pretend = 0, frame = 0
 3991              		@ frame_needed = 0, uses_anonymous_args = 0
 3992              	.LVL316:
 3993 0000 08B5     		push	{r3, lr}
 3994              	.LCFI55:
 3995              		.cfi_def_cfa_offset 8
 3996              		.cfi_offset 3, -8
 3997              		.cfi_offset 14, -4
3417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 3998              		.loc 1 3417 0
 3999 0002 836B     		ldr	r3, [r0, #56]
 4000 0004 0268     		ldr	r2, [r0]
 4001 0006 D268     		ldr	r2, [r2, #12]
 4002 0008 1A80     		strh	r2, [r3]	@ movhi
3418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 4003              		.loc 1 3418 0
 4004 000a 836B     		ldr	r3, [r0, #56]
 4005 000c 0233     		adds	r3, r3, #2
 4006 000e 8363     		str	r3, [r0, #56]
3419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4007              		.loc 1 3419 0
 4008 0010 C38F     		ldrh	r3, [r0, #62]
 4009 0012 9BB2     		uxth	r3, r3
 4010 0014 013B     		subs	r3, r3, #1
 4011 0016 9BB2     		uxth	r3, r3
 4012 0018 C387     		strh	r3, [r0, #62]	@ movhi
3429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4013              		.loc 1 3429 0
 4014 001a C38F     		ldrh	r3, [r0, #62]
 4015 001c 9BB2     		uxth	r3, r3
 4016 001e 03B1     		cbz	r3, .L362
ARM GAS  /tmp/ccVXEgNb.s 			page 151


 4017              	.LVL317:
 4018              	.L359:
 4019 0020 08BD     		pop	{r3, pc}
 4020              	.LVL318:
 4021              	.L362:
3438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4022              		.loc 1 3438 0
 4023 0022 FFF7FEFF 		bl	SPI_CloseRx_ISR
 4024              	.LVL319:
3440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4025              		.loc 1 3440 0
 4026 0026 FBE7     		b	.L359
 4027              		.cfi_endproc
 4028              	.LFE116:
 4030              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 4031              		.align	1
 4032              		.syntax unified
 4033              		.thumb
 4034              		.thumb_func
 4035              		.fpu softvfp
 4037              	SPI_CloseRxTx_ISR:
 4038              	.LFB122:
3661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 4039              		.loc 1 3661 0
 4040              		.cfi_startproc
 4041              		@ args = 0, pretend = 0, frame = 8
 4042              		@ frame_needed = 0, uses_anonymous_args = 0
 4043              	.LVL320:
 4044 0000 10B5     		push	{r4, lr}
 4045              	.LCFI56:
 4046              		.cfi_def_cfa_offset 8
 4047              		.cfi_offset 4, -8
 4048              		.cfi_offset 14, -4
 4049 0002 82B0     		sub	sp, sp, #8
 4050              	.LCFI57:
 4051              		.cfi_def_cfa_offset 16
 4052 0004 0446     		mov	r4, r0
3663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4053              		.loc 1 3663 0
 4054 0006 284B     		ldr	r3, .L375
 4055 0008 1B68     		ldr	r3, [r3]
 4056 000a 284A     		ldr	r2, .L375+4
 4057 000c A2FB0323 		umull	r2, r3, r2, r3
 4058 0010 5B0A     		lsrs	r3, r3, #9
 4059 0012 6422     		movs	r2, #100
 4060 0014 02FB03F3 		mul	r3, r2, r3
 4061 0018 0193     		str	r3, [sp, #4]
3666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4062              		.loc 1 3666 0
 4063 001a FFF7FEFF 		bl	HAL_GetTick
 4064              	.LVL321:
 4065 001e 0246     		mov	r2, r0
 4066              	.LVL322:
3669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4067              		.loc 1 3669 0
 4068 0020 2168     		ldr	r1, [r4]
 4069 0022 4B68     		ldr	r3, [r1, #4]
ARM GAS  /tmp/ccVXEgNb.s 			page 152


 4070 0024 23F02003 		bic	r3, r3, #32
 4071 0028 4B60     		str	r3, [r1, #4]
 4072              	.L366:
3674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4073              		.loc 1 3674 0
 4074 002a 019B     		ldr	r3, [sp, #4]
 4075 002c 43B1     		cbz	r3, .L373
3679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 4076              		.loc 1 3679 0
 4077 002e 019B     		ldr	r3, [sp, #4]
 4078 0030 013B     		subs	r3, r3, #1
 4079 0032 0193     		str	r3, [sp, #4]
3680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4080              		.loc 1 3680 0
 4081 0034 2368     		ldr	r3, [r4]
 4082 0036 9B68     		ldr	r3, [r3, #8]
 4083 0038 13F0020F 		tst	r3, #2
 4084 003c F5D0     		beq	.L366
 4085 003e 03E0     		b	.L365
 4086              	.L373:
3676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
 4087              		.loc 1 3676 0
 4088 0040 636D     		ldr	r3, [r4, #84]
 4089 0042 43F02003 		orr	r3, r3, #32
 4090 0046 6365     		str	r3, [r4, #84]
 4091              	.L365:
3683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4092              		.loc 1 3683 0
 4093 0048 6421     		movs	r1, #100
 4094 004a 2046     		mov	r0, r4
 4095              	.LVL323:
 4096 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4097              	.LVL324:
 4098 0050 18B1     		cbz	r0, .L367
3685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4099              		.loc 1 3685 0
 4100 0052 636D     		ldr	r3, [r4, #84]
 4101 0054 43F02003 		orr	r3, r3, #32
 4102 0058 6365     		str	r3, [r4, #84]
 4103              	.L367:
3689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4104              		.loc 1 3689 0
 4105 005a A368     		ldr	r3, [r4, #8]
 4106 005c 33B9     		cbnz	r3, .L368
 4107              	.LBB8:
3691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4108              		.loc 1 3691 0
 4109 005e 0093     		str	r3, [sp]
 4110 0060 2368     		ldr	r3, [r4]
 4111 0062 DA68     		ldr	r2, [r3, #12]
 4112 0064 0092     		str	r2, [sp]
 4113 0066 9B68     		ldr	r3, [r3, #8]
 4114 0068 0093     		str	r3, [sp]
 4115 006a 009B     		ldr	r3, [sp]
 4116              	.L368:
 4117              	.LBE8:
3711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccVXEgNb.s 			page 153


 4118              		.loc 1 3711 0
 4119 006c 636D     		ldr	r3, [r4, #84]
 4120 006e 9BB9     		cbnz	r3, .L369
3713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4121              		.loc 1 3713 0
 4122 0070 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4123 0074 DBB2     		uxtb	r3, r3
 4124 0076 042B     		cmp	r3, #4
 4125 0078 07D0     		beq	.L374
3725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user TxRx complete callback */
 4126              		.loc 1 3725 0
 4127 007a 0123     		movs	r3, #1
 4128 007c 84F85130 		strb	r3, [r4, #81]
3730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4129              		.loc 1 3730 0
 4130 0080 2046     		mov	r0, r4
 4131 0082 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4132              	.LVL325:
 4133              	.L363:
3747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4134              		.loc 1 3747 0
 4135 0086 02B0     		add	sp, sp, #8
 4136              	.LCFI58:
 4137              		.cfi_remember_state
 4138              		.cfi_def_cfa_offset 8
 4139              		@ sp needed
 4140 0088 10BD     		pop	{r4, pc}
 4141              	.LVL326:
 4142              	.L374:
 4143              	.LCFI59:
 4144              		.cfi_restore_state
3715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user Rx complete callback */
 4145              		.loc 1 3715 0
 4146 008a 0123     		movs	r3, #1
 4147 008c 84F85130 		strb	r3, [r4, #81]
3720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4148              		.loc 1 3720 0
 4149 0090 2046     		mov	r0, r4
 4150 0092 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4151              	.LVL327:
 4152 0096 F6E7     		b	.L363
 4153              	.L369:
3736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
 4154              		.loc 1 3736 0
 4155 0098 0123     		movs	r3, #1
 4156 009a 84F85130 		strb	r3, [r4, #81]
3741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4157              		.loc 1 3741 0
 4158 009e 2046     		mov	r0, r4
 4159 00a0 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4160              	.LVL328:
3747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4161              		.loc 1 3747 0
 4162 00a4 EFE7     		b	.L363
 4163              	.L376:
 4164 00a6 00BF     		.align	2
 4165              	.L375:
ARM GAS  /tmp/ccVXEgNb.s 			page 154


 4166 00a8 00000000 		.word	SystemCoreClock
 4167 00ac F1197605 		.word	91625969
 4168              		.cfi_endproc
 4169              	.LFE122:
 4171              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 4172              		.align	1
 4173              		.syntax unified
 4174              		.thumb
 4175              		.thumb_func
 4176              		.fpu softvfp
 4178              	SPI_2linesTxISR_8BIT:
 4179              	.LFB112:
3208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4180              		.loc 1 3208 0
 4181              		.cfi_startproc
 4182              		@ args = 0, pretend = 0, frame = 0
 4183              		@ frame_needed = 0, uses_anonymous_args = 0
 4184              	.LVL329:
 4185 0000 08B5     		push	{r3, lr}
 4186              	.LCFI60:
 4187              		.cfi_def_cfa_offset 8
 4188              		.cfi_offset 3, -8
 4189              		.cfi_offset 14, -4
3209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4190              		.loc 1 3209 0
 4191 0002 0368     		ldr	r3, [r0]
 4192 0004 026B     		ldr	r2, [r0, #48]
 4193 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4194 0008 1A73     		strb	r2, [r3, #12]
3210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 4195              		.loc 1 3210 0
 4196 000a 036B     		ldr	r3, [r0, #48]
 4197 000c 0133     		adds	r3, r3, #1
 4198 000e 0363     		str	r3, [r0, #48]
3211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4199              		.loc 1 3211 0
 4200 0010 C38E     		ldrh	r3, [r0, #54]
 4201 0012 9BB2     		uxth	r3, r3
 4202 0014 013B     		subs	r3, r3, #1
 4203 0016 9BB2     		uxth	r3, r3
 4204 0018 C386     		strh	r3, [r0, #54]	@ movhi
3214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4205              		.loc 1 3214 0
 4206 001a C38E     		ldrh	r3, [r0, #54]
 4207 001c 9BB2     		uxth	r3, r3
 4208 001e 3BB9     		cbnz	r3, .L377
3228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4209              		.loc 1 3228 0
 4210 0020 0268     		ldr	r2, [r0]
 4211 0022 5368     		ldr	r3, [r2, #4]
 4212 0024 23F08003 		bic	r3, r3, #128
 4213 0028 5360     		str	r3, [r2, #4]
3230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4214              		.loc 1 3230 0
 4215 002a C38F     		ldrh	r3, [r0, #62]
 4216 002c 9BB2     		uxth	r3, r3
 4217 002e 03B1     		cbz	r3, .L380
ARM GAS  /tmp/ccVXEgNb.s 			page 155


 4218              	.LVL330:
 4219              	.L377:
 4220 0030 08BD     		pop	{r3, pc}
 4221              	.LVL331:
 4222              	.L380:
3232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4223              		.loc 1 3232 0
 4224 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4225              	.LVL332:
3235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4226              		.loc 1 3235 0
 4227 0036 FBE7     		b	.L377
 4228              		.cfi_endproc
 4229              	.LFE112:
 4231              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 4232              		.align	1
 4233              		.syntax unified
 4234              		.thumb
 4235              		.thumb_func
 4236              		.fpu softvfp
 4238              	SPI_2linesRxISR_8BIT:
 4239              	.LFB111:
3145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 8bit mode */
 4240              		.loc 1 3145 0
 4241              		.cfi_startproc
 4242              		@ args = 0, pretend = 0, frame = 0
 4243              		@ frame_needed = 0, uses_anonymous_args = 0
 4244              	.LVL333:
 4245 0000 08B5     		push	{r3, lr}
 4246              	.LCFI61:
 4247              		.cfi_def_cfa_offset 8
 4248              		.cfi_offset 3, -8
 4249              		.cfi_offset 14, -4
3147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 4250              		.loc 1 3147 0
 4251 0002 836B     		ldr	r3, [r0, #56]
 4252 0004 0268     		ldr	r2, [r0]
 4253 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 4254 0008 1A70     		strb	r2, [r3]
3148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 4255              		.loc 1 3148 0
 4256 000a 836B     		ldr	r3, [r0, #56]
 4257 000c 0133     		adds	r3, r3, #1
 4258 000e 8363     		str	r3, [r0, #56]
3149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4259              		.loc 1 3149 0
 4260 0010 C38F     		ldrh	r3, [r0, #62]
 4261 0012 9BB2     		uxth	r3, r3
 4262 0014 013B     		subs	r3, r3, #1
 4263 0016 9BB2     		uxth	r3, r3
 4264 0018 C387     		strh	r3, [r0, #62]	@ movhi
3152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4265              		.loc 1 3152 0
 4266 001a C38F     		ldrh	r3, [r0, #62]
 4267 001c 9BB2     		uxth	r3, r3
 4268 001e 3BB9     		cbnz	r3, .L381
3163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccVXEgNb.s 			page 156


 4269              		.loc 1 3163 0
 4270 0020 0268     		ldr	r2, [r0]
 4271 0022 5368     		ldr	r3, [r2, #4]
 4272 0024 23F06003 		bic	r3, r3, #96
 4273 0028 5360     		str	r3, [r2, #4]
3165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4274              		.loc 1 3165 0
 4275 002a C38E     		ldrh	r3, [r0, #54]
 4276 002c 9BB2     		uxth	r3, r3
 4277 002e 03B1     		cbz	r3, .L384
 4278              	.LVL334:
 4279              	.L381:
 4280 0030 08BD     		pop	{r3, pc}
 4281              	.LVL335:
 4282              	.L384:
3167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4283              		.loc 1 3167 0
 4284 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4285              	.LVL336:
3170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4286              		.loc 1 3170 0
 4287 0036 FBE7     		b	.L381
 4288              		.cfi_endproc
 4289              	.LFE111:
 4291              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 4292              		.align	1
 4293              		.syntax unified
 4294              		.thumb
 4295              		.thumb_func
 4296              		.fpu softvfp
 4298              	SPI_2linesTxISR_16BIT:
 4299              	.LFB114:
3300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4300              		.loc 1 3300 0
 4301              		.cfi_startproc
 4302              		@ args = 0, pretend = 0, frame = 0
 4303              		@ frame_needed = 0, uses_anonymous_args = 0
 4304              	.LVL337:
 4305 0000 08B5     		push	{r3, lr}
 4306              	.LCFI62:
 4307              		.cfi_def_cfa_offset 8
 4308              		.cfi_offset 3, -8
 4309              		.cfi_offset 14, -4
3302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4310              		.loc 1 3302 0
 4311 0002 0368     		ldr	r3, [r0]
 4312 0004 026B     		ldr	r2, [r0, #48]
 4313 0006 1288     		ldrh	r2, [r2]
 4314 0008 DA60     		str	r2, [r3, #12]
3303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 4315              		.loc 1 3303 0
 4316 000a 036B     		ldr	r3, [r0, #48]
 4317 000c 0233     		adds	r3, r3, #2
 4318 000e 0363     		str	r3, [r0, #48]
3304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4319              		.loc 1 3304 0
 4320 0010 C38E     		ldrh	r3, [r0, #54]
ARM GAS  /tmp/ccVXEgNb.s 			page 157


 4321 0012 9BB2     		uxth	r3, r3
 4322 0014 013B     		subs	r3, r3, #1
 4323 0016 9BB2     		uxth	r3, r3
 4324 0018 C386     		strh	r3, [r0, #54]	@ movhi
3307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4325              		.loc 1 3307 0
 4326 001a C38E     		ldrh	r3, [r0, #54]
 4327 001c 9BB2     		uxth	r3, r3
 4328 001e 3BB9     		cbnz	r3, .L385
3321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4329              		.loc 1 3321 0
 4330 0020 0268     		ldr	r2, [r0]
 4331 0022 5368     		ldr	r3, [r2, #4]
 4332 0024 23F08003 		bic	r3, r3, #128
 4333 0028 5360     		str	r3, [r2, #4]
3323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4334              		.loc 1 3323 0
 4335 002a C38F     		ldrh	r3, [r0, #62]
 4336 002c 9BB2     		uxth	r3, r3
 4337 002e 03B1     		cbz	r3, .L388
 4338              	.LVL338:
 4339              	.L385:
 4340 0030 08BD     		pop	{r3, pc}
 4341              	.LVL339:
 4342              	.L388:
3325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4343              		.loc 1 3325 0
 4344 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4345              	.LVL340:
3328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4346              		.loc 1 3328 0
 4347 0036 FBE7     		b	.L385
 4348              		.cfi_endproc
 4349              	.LFE114:
 4351              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 4352              		.align	1
 4353              		.syntax unified
 4354              		.thumb
 4355              		.thumb_func
 4356              		.fpu softvfp
 4358              	SPI_2linesRxISR_16BIT:
 4359              	.LFB113:
3244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 4360              		.loc 1 3244 0
 4361              		.cfi_startproc
 4362              		@ args = 0, pretend = 0, frame = 0
 4363              		@ frame_needed = 0, uses_anonymous_args = 0
 4364              	.LVL341:
 4365 0000 08B5     		push	{r3, lr}
 4366              	.LCFI63:
 4367              		.cfi_def_cfa_offset 8
 4368              		.cfi_offset 3, -8
 4369              		.cfi_offset 14, -4
3246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4370              		.loc 1 3246 0
 4371 0002 836B     		ldr	r3, [r0, #56]
 4372 0004 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccVXEgNb.s 			page 158


 4373 0006 D268     		ldr	r2, [r2, #12]
 4374 0008 1A80     		strh	r2, [r3]	@ movhi
3247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 4375              		.loc 1 3247 0
 4376 000a 836B     		ldr	r3, [r0, #56]
 4377 000c 0233     		adds	r3, r3, #2
 4378 000e 8363     		str	r3, [r0, #56]
3248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4379              		.loc 1 3248 0
 4380 0010 C38F     		ldrh	r3, [r0, #62]
 4381 0012 9BB2     		uxth	r3, r3
 4382 0014 013B     		subs	r3, r3, #1
 4383 0016 9BB2     		uxth	r3, r3
 4384 0018 C387     		strh	r3, [r0, #62]	@ movhi
3250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4385              		.loc 1 3250 0
 4386 001a C38F     		ldrh	r3, [r0, #62]
 4387 001c 9BB2     		uxth	r3, r3
 4388 001e 3BB9     		cbnz	r3, .L389
3261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4389              		.loc 1 3261 0
 4390 0020 0268     		ldr	r2, [r0]
 4391 0022 5368     		ldr	r3, [r2, #4]
 4392 0024 23F04003 		bic	r3, r3, #64
 4393 0028 5360     		str	r3, [r2, #4]
3263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4394              		.loc 1 3263 0
 4395 002a C38E     		ldrh	r3, [r0, #54]
 4396 002c 9BB2     		uxth	r3, r3
 4397 002e 03B1     		cbz	r3, .L392
 4398              	.LVL342:
 4399              	.L389:
 4400 0030 08BD     		pop	{r3, pc}
 4401              	.LVL343:
 4402              	.L392:
3265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4403              		.loc 1 3265 0
 4404 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4405              	.LVL344:
3268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4406              		.loc 1 3268 0
 4407 0036 FBE7     		b	.L389
 4408              		.cfi_endproc
 4409              	.LFE113:
 4411              		.section	.text.SPI_DMAError,"ax",%progbits
 4412              		.align	1
 4413              		.syntax unified
 4414              		.thumb
 4415              		.thumb_func
 4416              		.fpu softvfp
 4418              	SPI_DMAError:
 4419              	.LFB107:
2972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4420              		.loc 1 2972 0
 4421              		.cfi_startproc
 4422              		@ args = 0, pretend = 0, frame = 0
 4423              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccVXEgNb.s 			page 159


 4424              	.LVL345:
 4425 0000 08B5     		push	{r3, lr}
 4426              	.LCFI64:
 4427              		.cfi_def_cfa_offset 8
 4428              		.cfi_offset 3, -8
 4429              		.cfi_offset 14, -4
2973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4430              		.loc 1 2973 0
 4431 0002 406A     		ldr	r0, [r0, #36]
 4432              	.LVL346:
2976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4433              		.loc 1 2976 0
 4434 0004 0268     		ldr	r2, [r0]
 4435 0006 5368     		ldr	r3, [r2, #4]
 4436 0008 23F00303 		bic	r3, r3, #3
 4437 000c 5360     		str	r3, [r2, #4]
2978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4438              		.loc 1 2978 0
 4439 000e 436D     		ldr	r3, [r0, #84]
 4440 0010 43F01003 		orr	r3, r3, #16
 4441 0014 4365     		str	r3, [r0, #84]
2979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user error callback */
 4442              		.loc 1 2979 0
 4443 0016 0123     		movs	r3, #1
 4444 0018 80F85130 		strb	r3, [r0, #81]
2984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4445              		.loc 1 2984 0
 4446 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4447              	.LVL347:
 4448 0020 08BD     		pop	{r3, pc}
 4449              		.cfi_endproc
 4450              	.LFE107:
 4452              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4453              		.align	1
 4454              		.syntax unified
 4455              		.thumb
 4456              		.thumb_func
 4457              		.fpu softvfp
 4459              	SPI_DMATransmitCplt:
 4460              	.LFB101:
2692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4461              		.loc 1 2692 0
 4462              		.cfi_startproc
 4463              		@ args = 0, pretend = 0, frame = 8
 4464              		@ frame_needed = 0, uses_anonymous_args = 0
 4465              	.LVL348:
 4466 0000 30B5     		push	{r4, r5, lr}
 4467              	.LCFI65:
 4468              		.cfi_def_cfa_offset 12
 4469              		.cfi_offset 4, -12
 4470              		.cfi_offset 5, -8
 4471              		.cfi_offset 14, -4
 4472 0002 83B0     		sub	sp, sp, #12
 4473              	.LCFI66:
 4474              		.cfi_def_cfa_offset 24
 4475 0004 0546     		mov	r5, r0
2693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
ARM GAS  /tmp/ccVXEgNb.s 			page 160


 4476              		.loc 1 2693 0
 4477 0006 446A     		ldr	r4, [r0, #36]
 4478              	.LVL349:
2697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4479              		.loc 1 2697 0
 4480 0008 FFF7FEFF 		bl	HAL_GetTick
 4481              	.LVL350:
2700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4482              		.loc 1 2700 0
 4483 000c 2B68     		ldr	r3, [r5]
 4484 000e 1B68     		ldr	r3, [r3]
 4485 0010 13F0200F 		tst	r3, #32
 4486 0014 23D1     		bne	.L396
2703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4487              		.loc 1 2703 0
 4488 0016 2268     		ldr	r2, [r4]
 4489 0018 5368     		ldr	r3, [r2, #4]
 4490 001a 23F02003 		bic	r3, r3, #32
 4491 001e 5360     		str	r3, [r2, #4]
2706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4492              		.loc 1 2706 0
 4493 0020 2268     		ldr	r2, [r4]
 4494 0022 5368     		ldr	r3, [r2, #4]
 4495 0024 23F00203 		bic	r3, r3, #2
 4496 0028 5360     		str	r3, [r2, #4]
2709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4497              		.loc 1 2709 0
 4498 002a 0246     		mov	r2, r0
 4499 002c 6421     		movs	r1, #100
 4500 002e 2046     		mov	r0, r4
 4501              	.LVL351:
 4502 0030 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4503              	.LVL352:
 4504 0034 18B1     		cbz	r0, .L397
2711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4505              		.loc 1 2711 0
 4506 0036 636D     		ldr	r3, [r4, #84]
 4507 0038 43F02003 		orr	r3, r3, #32
 4508 003c 6365     		str	r3, [r4, #84]
 4509              	.L397:
2715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4510              		.loc 1 2715 0
 4511 003e A368     		ldr	r3, [r4, #8]
 4512 0040 33B9     		cbnz	r3, .L398
 4513              	.LBB9:
2717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4514              		.loc 1 2717 0
 4515 0042 0193     		str	r3, [sp, #4]
 4516 0044 2368     		ldr	r3, [r4]
 4517 0046 DA68     		ldr	r2, [r3, #12]
 4518 0048 0192     		str	r2, [sp, #4]
 4519 004a 9B68     		ldr	r3, [r3, #8]
 4520 004c 0193     		str	r3, [sp, #4]
 4521 004e 019B     		ldr	r3, [sp, #4]
 4522              	.L398:
 4523              	.LBE9:
2720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/ccVXEgNb.s 			page 161


 4524              		.loc 1 2720 0
 4525 0050 0023     		movs	r3, #0
 4526 0052 E386     		strh	r3, [r4, #54]	@ movhi
2721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4527              		.loc 1 2721 0
 4528 0054 0123     		movs	r3, #1
 4529 0056 84F85130 		strb	r3, [r4, #81]
2723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4530              		.loc 1 2723 0
 4531 005a 636D     		ldr	r3, [r4, #84]
 4532 005c 23B9     		cbnz	r3, .L401
 4533              	.L396:
2738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4534              		.loc 1 2738 0
 4535 005e 2046     		mov	r0, r4
 4536 0060 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4537              	.LVL353:
 4538              	.L395:
2740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4539              		.loc 1 2740 0
 4540 0064 03B0     		add	sp, sp, #12
 4541              	.LCFI67:
 4542              		.cfi_remember_state
 4543              		.cfi_def_cfa_offset 12
 4544              		@ sp needed
 4545 0066 30BD     		pop	{r4, r5, pc}
 4546              	.LVL354:
 4547              	.L401:
 4548              	.LCFI68:
 4549              		.cfi_restore_state
2729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4550              		.loc 1 2729 0
 4551 0068 2046     		mov	r0, r4
 4552 006a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4553              	.LVL355:
2731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4554              		.loc 1 2731 0
 4555 006e F9E7     		b	.L395
 4556              		.cfi_endproc
 4557              	.LFE101:
 4559              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4560              		.align	1
 4561              		.syntax unified
 4562              		.thumb
 4563              		.thumb_func
 4564              		.fpu softvfp
 4566              	SPI_DMAReceiveCplt:
 4567              	.LFB102:
2749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4568              		.loc 1 2749 0
 4569              		.cfi_startproc
 4570              		@ args = 0, pretend = 0, frame = 0
 4571              		@ frame_needed = 0, uses_anonymous_args = 0
 4572              	.LVL356:
 4573 0000 38B5     		push	{r3, r4, r5, lr}
 4574              	.LCFI69:
 4575              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccVXEgNb.s 			page 162


 4576              		.cfi_offset 3, -16
 4577              		.cfi_offset 4, -12
 4578              		.cfi_offset 5, -8
 4579              		.cfi_offset 14, -4
 4580 0002 0546     		mov	r5, r0
2750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 4581              		.loc 1 2750 0
 4582 0004 446A     		ldr	r4, [r0, #36]
 4583              	.LVL357:
2757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4584              		.loc 1 2757 0
 4585 0006 FFF7FEFF 		bl	HAL_GetTick
 4586              	.LVL358:
2760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4587              		.loc 1 2760 0
 4588 000a 2B68     		ldr	r3, [r5]
 4589 000c 1B68     		ldr	r3, [r3]
 4590 000e 13F0200F 		tst	r3, #32
 4591 0012 1ED1     		bne	.L403
2763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4592              		.loc 1 2763 0
 4593 0014 2168     		ldr	r1, [r4]
 4594 0016 4B68     		ldr	r3, [r1, #4]
 4595 0018 23F02003 		bic	r3, r3, #32
 4596 001c 4B60     		str	r3, [r1, #4]
2783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4597              		.loc 1 2783 0
 4598 001e A368     		ldr	r3, [r4, #8]
 4599 0020 1BB9     		cbnz	r3, .L404
2783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4600              		.loc 1 2783 0 is_stmt 0 discriminator 1
 4601 0022 6368     		ldr	r3, [r4, #4]
 4602 0024 B3F5827F 		cmp	r3, #260
 4603 0028 17D0     		beq	.L409
 4604              	.L404:
2791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4605              		.loc 1 2791 0 is_stmt 1
 4606 002a 2168     		ldr	r1, [r4]
 4607 002c 4B68     		ldr	r3, [r1, #4]
 4608 002e 23F00103 		bic	r3, r3, #1
 4609 0032 4B60     		str	r3, [r1, #4]
 4610              	.L405:
2795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4611              		.loc 1 2795 0
 4612 0034 0246     		mov	r2, r0
 4613 0036 6421     		movs	r1, #100
 4614 0038 2046     		mov	r0, r4
 4615              	.LVL359:
 4616 003a FFF7FEFF 		bl	SPI_EndRxTransaction
 4617              	.LVL360:
 4618 003e 08B1     		cbz	r0, .L406
2797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4619              		.loc 1 2797 0
 4620 0040 2023     		movs	r3, #32
 4621 0042 6365     		str	r3, [r4, #84]
 4622              	.L406:
2800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/ccVXEgNb.s 			page 163


 4623              		.loc 1 2800 0
 4624 0044 0023     		movs	r3, #0
 4625 0046 E387     		strh	r3, [r4, #62]	@ movhi
2801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4626              		.loc 1 2801 0
 4627 0048 0123     		movs	r3, #1
 4628 004a 84F85130 		strb	r3, [r4, #81]
2812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4629              		.loc 1 2812 0
 4630 004e 636D     		ldr	r3, [r4, #84]
 4631 0050 4BB9     		cbnz	r3, .L410
 4632              	.L403:
2827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4633              		.loc 1 2827 0
 4634 0052 2046     		mov	r0, r4
 4635 0054 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4636              	.LVL361:
 4637 0058 38BD     		pop	{r3, r4, r5, pc}
 4638              	.LVL362:
 4639              	.L409:
2786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4640              		.loc 1 2786 0
 4641 005a 2268     		ldr	r2, [r4]
 4642 005c 5368     		ldr	r3, [r2, #4]
 4643 005e 23F00303 		bic	r3, r3, #3
 4644 0062 5360     		str	r3, [r2, #4]
 4645 0064 E6E7     		b	.L405
 4646              	.LVL363:
 4647              	.L410:
2818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4648              		.loc 1 2818 0
 4649 0066 2046     		mov	r0, r4
 4650 0068 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4651              	.LVL364:
2820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4652              		.loc 1 2820 0
 4653 006c 38BD     		pop	{r3, r4, r5, pc}
 4654              		.cfi_endproc
 4655              	.LFE102:
 4657              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 4658              		.align	1
 4659              		.syntax unified
 4660              		.thumb
 4661              		.thumb_func
 4662              		.fpu softvfp
 4664              	SPI_DMATransmitReceiveCplt:
 4665              	.LFB103:
2838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4666              		.loc 1 2838 0
 4667              		.cfi_startproc
 4668              		@ args = 0, pretend = 0, frame = 0
 4669              		@ frame_needed = 0, uses_anonymous_args = 0
 4670              	.LVL365:
 4671 0000 38B5     		push	{r3, r4, r5, lr}
 4672              	.LCFI70:
 4673              		.cfi_def_cfa_offset 16
 4674              		.cfi_offset 3, -16
ARM GAS  /tmp/ccVXEgNb.s 			page 164


 4675              		.cfi_offset 4, -12
 4676              		.cfi_offset 5, -8
 4677              		.cfi_offset 14, -4
 4678 0002 0546     		mov	r5, r0
2839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 4679              		.loc 1 2839 0
 4680 0004 446A     		ldr	r4, [r0, #36]
 4681              	.LVL366:
2846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4682              		.loc 1 2846 0
 4683 0006 FFF7FEFF 		bl	HAL_GetTick
 4684              	.LVL367:
2849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4685              		.loc 1 2849 0
 4686 000a 2B68     		ldr	r3, [r5]
 4687 000c 1B68     		ldr	r3, [r3]
 4688 000e 13F0200F 		tst	r3, #32
 4689 0012 1BD1     		bne	.L412
2852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4690              		.loc 1 2852 0
 4691 0014 2268     		ldr	r2, [r4]
 4692 0016 5368     		ldr	r3, [r2, #4]
 4693 0018 23F02003 		bic	r3, r3, #32
 4694 001c 5360     		str	r3, [r2, #4]
2871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4695              		.loc 1 2871 0
 4696 001e 0246     		mov	r2, r0
 4697 0020 6421     		movs	r1, #100
 4698 0022 2046     		mov	r0, r4
 4699              	.LVL368:
 4700 0024 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4701              	.LVL369:
 4702 0028 18B1     		cbz	r0, .L413
2873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4703              		.loc 1 2873 0
 4704 002a 636D     		ldr	r3, [r4, #84]
 4705 002c 43F02003 		orr	r3, r3, #32
 4706 0030 6365     		str	r3, [r4, #84]
 4707              	.L413:
2877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4708              		.loc 1 2877 0
 4709 0032 2268     		ldr	r2, [r4]
 4710 0034 5368     		ldr	r3, [r2, #4]
 4711 0036 23F00303 		bic	r3, r3, #3
 4712 003a 5360     		str	r3, [r2, #4]
2879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4713              		.loc 1 2879 0
 4714 003c 0023     		movs	r3, #0
 4715 003e E386     		strh	r3, [r4, #54]	@ movhi
2880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4716              		.loc 1 2880 0
 4717 0040 E387     		strh	r3, [r4, #62]	@ movhi
2881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4718              		.loc 1 2881 0
 4719 0042 0123     		movs	r3, #1
 4720 0044 84F85130 		strb	r3, [r4, #81]
2892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccVXEgNb.s 			page 165


 4721              		.loc 1 2892 0
 4722 0048 636D     		ldr	r3, [r4, #84]
 4723 004a 1BB9     		cbnz	r3, .L416
 4724              	.L412:
2907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4725              		.loc 1 2907 0
 4726 004c 2046     		mov	r0, r4
 4727 004e FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4728              	.LVL370:
 4729 0052 38BD     		pop	{r3, r4, r5, pc}
 4730              	.LVL371:
 4731              	.L416:
2898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4732              		.loc 1 2898 0
 4733 0054 2046     		mov	r0, r4
 4734 0056 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4735              	.LVL372:
2900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4736              		.loc 1 2900 0
 4737 005a 38BD     		pop	{r3, r4, r5, pc}
 4738              		.cfi_endproc
 4739              	.LFE103:
 4741              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4742              		.align	1
 4743              		.global	HAL_SPI_IRQHandler
 4744              		.syntax unified
 4745              		.thumb
 4746              		.thumb_func
 4747              		.fpu softvfp
 4749              	HAL_SPI_IRQHandler:
 4750              	.LFB90:
2392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4751              		.loc 1 2392 0
 4752              		.cfi_startproc
 4753              		@ args = 0, pretend = 0, frame = 16
 4754              		@ frame_needed = 0, uses_anonymous_args = 0
 4755              	.LVL373:
 4756 0000 10B5     		push	{r4, lr}
 4757              	.LCFI71:
 4758              		.cfi_def_cfa_offset 8
 4759              		.cfi_offset 4, -8
 4760              		.cfi_offset 14, -4
 4761 0002 84B0     		sub	sp, sp, #16
 4762              	.LCFI72:
 4763              		.cfi_def_cfa_offset 24
 4764 0004 0446     		mov	r4, r0
2393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4765              		.loc 1 2393 0
 4766 0006 0268     		ldr	r2, [r0]
 4767 0008 5168     		ldr	r1, [r2, #4]
 4768              	.LVL374:
2394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4769              		.loc 1 2394 0
 4770 000a 9368     		ldr	r3, [r2, #8]
 4771              	.LVL375:
2397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4772              		.loc 1 2397 0
ARM GAS  /tmp/ccVXEgNb.s 			page 166


 4773 000c 03F04100 		and	r0, r3, #65
 4774              	.LVL376:
 4775 0010 0128     		cmp	r0, #1
 4776 0012 67D0     		beq	.L428
 4777              	.L418:
2405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4778              		.loc 1 2405 0
 4779 0014 13F0020F 		tst	r3, #2
 4780 0018 02D0     		beq	.L420
2405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4781              		.loc 1 2405 0 is_stmt 0 discriminator 1
 4782 001a 11F0800F 		tst	r1, #128
 4783 001e 68D1     		bne	.L429
 4784              	.L420:
2413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
 4785              		.loc 1 2413 0 is_stmt 1
 4786 0020 13F4B07F 		tst	r3, #352
 4787 0024 68D0     		beq	.L417
2414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 4788              		.loc 1 2414 0
 4789 0026 11F0200F 		tst	r1, #32
 4790 002a 65D0     		beq	.L417
2421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4791              		.loc 1 2421 0
 4792 002c 13F0400F 		tst	r3, #64
 4793 0030 0FD0     		beq	.L421
2423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4794              		.loc 1 2423 0
 4795 0032 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 4796 0036 C0B2     		uxtb	r0, r0
 4797 0038 0328     		cmp	r0, #3
 4798 003a 5FD0     		beq	.L422
2425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4799              		.loc 1 2425 0
 4800 003c 606D     		ldr	r0, [r4, #84]
 4801 003e 40F00400 		orr	r0, r0, #4
 4802 0042 6065     		str	r0, [r4, #84]
 4803              	.LBB10:
2426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4804              		.loc 1 2426 0
 4805 0044 0020     		movs	r0, #0
 4806 0046 0090     		str	r0, [sp]
 4807 0048 D068     		ldr	r0, [r2, #12]
 4808 004a 0090     		str	r0, [sp]
 4809 004c 9068     		ldr	r0, [r2, #8]
 4810 004e 0090     		str	r0, [sp]
 4811 0050 0098     		ldr	r0, [sp]
 4812              	.L421:
 4813              	.LBE10:
2436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4814              		.loc 1 2436 0
 4815 0052 13F0200F 		tst	r3, #32
 4816 0056 0CD0     		beq	.L423
2438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4817              		.loc 1 2438 0
 4818 0058 606D     		ldr	r0, [r4, #84]
 4819 005a 40F00100 		orr	r0, r0, #1
ARM GAS  /tmp/ccVXEgNb.s 			page 167


 4820 005e 6065     		str	r0, [r4, #84]
 4821              	.LBB11:
2439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4822              		.loc 1 2439 0
 4823 0060 0020     		movs	r0, #0
 4824 0062 0290     		str	r0, [sp, #8]
 4825 0064 9068     		ldr	r0, [r2, #8]
 4826 0066 0290     		str	r0, [sp, #8]
 4827 0068 1068     		ldr	r0, [r2]
 4828 006a 20F04000 		bic	r0, r0, #64
 4829 006e 1060     		str	r0, [r2]
 4830 0070 029A     		ldr	r2, [sp, #8]
 4831              	.L423:
 4832              	.LBE11:
2444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4833              		.loc 1 2444 0
 4834 0072 13F4807F 		tst	r3, #256
 4835 0076 09D0     		beq	.L424
2446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 4836              		.loc 1 2446 0
 4837 0078 636D     		ldr	r3, [r4, #84]
 4838              	.LVL377:
 4839 007a 43F00803 		orr	r3, r3, #8
 4840 007e 6365     		str	r3, [r4, #84]
 4841              	.LBB12:
2447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4842              		.loc 1 2447 0
 4843 0080 0023     		movs	r3, #0
 4844 0082 0393     		str	r3, [sp, #12]
 4845 0084 2368     		ldr	r3, [r4]
 4846 0086 9B68     		ldr	r3, [r3, #8]
 4847 0088 0393     		str	r3, [sp, #12]
 4848 008a 039B     		ldr	r3, [sp, #12]
 4849              	.L424:
 4850              	.LBE12:
2451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4851              		.loc 1 2451 0
 4852 008c 636D     		ldr	r3, [r4, #84]
 4853 008e 002B     		cmp	r3, #0
 4854 0090 32D0     		beq	.L417
2454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4855              		.loc 1 2454 0
 4856 0092 2268     		ldr	r2, [r4]
 4857 0094 5368     		ldr	r3, [r2, #4]
 4858 0096 23F0E003 		bic	r3, r3, #224
 4859 009a 5360     		str	r3, [r2, #4]
2456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 4860              		.loc 1 2456 0
 4861 009c 0123     		movs	r3, #1
 4862 009e 84F85130 		strb	r3, [r4, #81]
2458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4863              		.loc 1 2458 0
 4864 00a2 11F0030F 		tst	r1, #3
 4865 00a6 31D0     		beq	.L425
2460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4866              		.loc 1 2460 0
 4867 00a8 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccVXEgNb.s 			page 168


 4868 00aa 5368     		ldr	r3, [r2, #4]
 4869 00ac 23F00303 		bic	r3, r3, #3
 4870 00b0 5360     		str	r3, [r2, #4]
2463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 4871              		.loc 1 2463 0
 4872 00b2 E36C     		ldr	r3, [r4, #76]
 4873 00b4 4BB1     		cbz	r3, .L426
2467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 4874              		.loc 1 2467 0
 4875 00b6 174A     		ldr	r2, .L430
 4876 00b8 5A63     		str	r2, [r3, #52]
2468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
 4877              		.loc 1 2468 0
 4878 00ba E06C     		ldr	r0, [r4, #76]
 4879 00bc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4880              	.LVL378:
 4881 00c0 18B1     		cbz	r0, .L426
2470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
 4882              		.loc 1 2470 0
 4883 00c2 636D     		ldr	r3, [r4, #84]
 4884 00c4 43F04003 		orr	r3, r3, #64
 4885 00c8 6365     		str	r3, [r4, #84]
 4886              	.L426:
2474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 4887              		.loc 1 2474 0
 4888 00ca A36C     		ldr	r3, [r4, #72]
 4889 00cc A3B1     		cbz	r3, .L417
2478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 4890              		.loc 1 2478 0
 4891 00ce 114A     		ldr	r2, .L430
 4892 00d0 5A63     		str	r2, [r3, #52]
2479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
 4893              		.loc 1 2479 0
 4894 00d2 A06C     		ldr	r0, [r4, #72]
 4895 00d4 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4896              	.LVL379:
 4897 00d8 70B1     		cbz	r0, .L417
2481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
 4898              		.loc 1 2481 0
 4899 00da 636D     		ldr	r3, [r4, #84]
 4900 00dc 43F04003 		orr	r3, r3, #64
 4901 00e0 6365     		str	r3, [r4, #84]
 4902 00e2 09E0     		b	.L417
 4903              	.LVL380:
 4904              	.L428:
2398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4905              		.loc 1 2398 0
 4906 00e4 11F0400F 		tst	r1, #64
 4907 00e8 94D0     		beq	.L418
2400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
 4908              		.loc 1 2400 0
 4909 00ea 236C     		ldr	r3, [r4, #64]
 4910              	.LVL381:
 4911 00ec 2046     		mov	r0, r4
 4912 00ee 9847     		blx	r3
 4913              	.LVL382:
2401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccVXEgNb.s 			page 169


 4914              		.loc 1 2401 0
 4915 00f0 02E0     		b	.L417
 4916              	.LVL383:
 4917              	.L429:
2407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
 4918              		.loc 1 2407 0
 4919 00f2 636C     		ldr	r3, [r4, #68]
 4920              	.LVL384:
 4921 00f4 2046     		mov	r0, r4
 4922 00f6 9847     		blx	r3
 4923              	.LVL385:
 4924              	.L417:
2497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4925              		.loc 1 2497 0
 4926 00f8 04B0     		add	sp, sp, #16
 4927              	.LCFI73:
 4928              		.cfi_remember_state
 4929              		.cfi_def_cfa_offset 8
 4930              		@ sp needed
 4931 00fa 10BD     		pop	{r4, pc}
 4932              	.LVL386:
 4933              	.L422:
 4934              	.LCFI74:
 4935              		.cfi_restore_state
 4936              	.LBB13:
2430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return;
 4937              		.loc 1 2430 0
 4938 00fc 0023     		movs	r3, #0
 4939              	.LVL387:
 4940 00fe 0193     		str	r3, [sp, #4]
 4941 0100 D368     		ldr	r3, [r2, #12]
 4942 0102 0193     		str	r3, [sp, #4]
 4943 0104 9368     		ldr	r3, [r2, #8]
 4944 0106 0193     		str	r3, [sp, #4]
 4945 0108 019B     		ldr	r3, [sp, #4]
 4946              	.LBE13:
2431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4947              		.loc 1 2431 0
 4948 010a F5E7     		b	.L417
 4949              	.L425:
2491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4950              		.loc 1 2491 0
 4951 010c 2046     		mov	r0, r4
 4952 010e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4953              	.LVL388:
 4954 0112 F1E7     		b	.L417
 4955              	.L431:
 4956              		.align	2
 4957              	.L430:
 4958 0114 00000000 		.word	SPI_DMAAbortOnError
 4959              		.cfi_endproc
 4960              	.LFE90:
 4962              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 4963              		.align	1
 4964              		.syntax unified
 4965              		.thumb
 4966              		.thumb_func
ARM GAS  /tmp/ccVXEgNb.s 			page 170


 4967              		.fpu softvfp
 4969              	SPI_DMAAbortOnError:
 4970              	.LFB108:
2995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4971              		.loc 1 2995 0
 4972              		.cfi_startproc
 4973              		@ args = 0, pretend = 0, frame = 0
 4974              		@ frame_needed = 0, uses_anonymous_args = 0
 4975              	.LVL389:
 4976 0000 08B5     		push	{r3, lr}
 4977              	.LCFI75:
 4978              		.cfi_def_cfa_offset 8
 4979              		.cfi_offset 3, -8
 4980              		.cfi_offset 14, -4
2996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 4981              		.loc 1 2996 0
 4982 0002 406A     		ldr	r0, [r0, #36]
 4983              	.LVL390:
2997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4984              		.loc 1 2997 0
 4985 0004 0023     		movs	r3, #0
 4986 0006 C387     		strh	r3, [r0, #62]	@ movhi
2998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4987              		.loc 1 2998 0
 4988 0008 C386     		strh	r3, [r0, #54]	@ movhi
3004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4989              		.loc 1 3004 0
 4990 000a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4991              	.LVL391:
 4992 000e 08BD     		pop	{r3, pc}
 4993              		.cfi_endproc
 4994              	.LFE108:
 4996              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4997              		.align	1
 4998              		.weak	HAL_SPI_AbortCpltCallback
 4999              		.syntax unified
 5000              		.thumb
 5001              		.thumb_func
 5002              		.fpu softvfp
 5004              	HAL_SPI_AbortCpltCallback:
 5005              	.LFB98:
2620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 5006              		.loc 1 2620 0
 5007              		.cfi_startproc
 5008              		@ args = 0, pretend = 0, frame = 0
 5009              		@ frame_needed = 0, uses_anonymous_args = 0
 5010              		@ link register save eliminated.
 5011              	.LVL392:
 5012 0000 7047     		bx	lr
 5013              		.cfi_endproc
 5014              	.LFE98:
 5016              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 5017              		.align	1
 5018              		.global	HAL_SPI_Abort_IT
 5019              		.syntax unified
 5020              		.thumb
 5021              		.thumb_func
ARM GAS  /tmp/ccVXEgNb.s 			page 171


 5022              		.fpu softvfp
 5024              	HAL_SPI_Abort_IT:
 5025              	.LFB86:
2149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 5026              		.loc 1 2149 0
 5027              		.cfi_startproc
 5028              		@ args = 0, pretend = 0, frame = 16
 5029              		@ frame_needed = 0, uses_anonymous_args = 0
 5030              	.LVL393:
2149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 5031              		.loc 1 2149 0
 5032 0000 30B5     		push	{r4, r5, lr}
 5033              	.LCFI76:
 5034              		.cfi_def_cfa_offset 12
 5035              		.cfi_offset 4, -12
 5036              		.cfi_offset 5, -8
 5037              		.cfi_offset 14, -4
 5038 0002 85B0     		sub	sp, sp, #20
 5039              	.LCFI77:
 5040              		.cfi_def_cfa_offset 32
 5041 0004 0446     		mov	r4, r0
 5042              	.LVL394:
2158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
 5043              		.loc 1 2158 0
 5044 0006 504B     		ldr	r3, .L462
 5045 0008 1B68     		ldr	r3, [r3]
 5046 000a 504A     		ldr	r2, .L462+4
 5047 000c A2FB0323 		umull	r2, r3, r2, r3
 5048 0010 5B0A     		lsrs	r3, r3, #9
 5049 0012 6422     		movs	r2, #100
 5050 0014 02FB03F3 		mul	r3, r2, r3
 5051 0018 0293     		str	r3, [sp, #8]
2159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5052              		.loc 1 2159 0
 5053 001a 029B     		ldr	r3, [sp, #8]
 5054 001c 0393     		str	r3, [sp, #12]
2162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5055              		.loc 1 2162 0
 5056 001e 0268     		ldr	r2, [r0]
 5057 0020 5368     		ldr	r3, [r2, #4]
 5058 0022 23F02003 		bic	r3, r3, #32
 5059 0026 5360     		str	r3, [r2, #4]
2165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5060              		.loc 1 2165 0
 5061 0028 0268     		ldr	r2, [r0]
 5062 002a 5368     		ldr	r3, [r2, #4]
 5063 002c 13F0800F 		tst	r3, #128
 5064 0030 12D0     		beq	.L436
2167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 5065              		.loc 1 2167 0
 5066 0032 474B     		ldr	r3, .L462+8
 5067 0034 4364     		str	r3, [r0, #68]
 5068              	.L439:
2171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 5069              		.loc 1 2171 0
 5070 0036 039B     		ldr	r3, [sp, #12]
 5071 0038 43B1     		cbz	r3, .L459
ARM GAS  /tmp/ccVXEgNb.s 			page 172


2176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 5072              		.loc 1 2176 0
 5073 003a 039B     		ldr	r3, [sp, #12]
 5074 003c 013B     		subs	r3, r3, #1
 5075 003e 0393     		str	r3, [sp, #12]
2177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 5076              		.loc 1 2177 0
 5077 0040 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 5078 0044 DBB2     		uxtb	r3, r3
 5079 0046 072B     		cmp	r3, #7
 5080 0048 F5D1     		bne	.L439
 5081 004a 03E0     		b	.L438
 5082              	.L459:
2173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 5083              		.loc 1 2173 0
 5084 004c 636D     		ldr	r3, [r4, #84]
 5085 004e 43F04003 		orr	r3, r3, #64
 5086 0052 6365     		str	r3, [r4, #84]
 5087              	.L438:
2179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5088              		.loc 1 2179 0
 5089 0054 029B     		ldr	r3, [sp, #8]
 5090 0056 0393     		str	r3, [sp, #12]
 5091              	.L436:
2182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5092              		.loc 1 2182 0
 5093 0058 5368     		ldr	r3, [r2, #4]
 5094 005a 13F0400F 		tst	r3, #64
 5095 005e 12D0     		beq	.L440
2184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 5096              		.loc 1 2184 0
 5097 0060 3C4B     		ldr	r3, .L462+12
 5098 0062 2364     		str	r3, [r4, #64]
 5099              	.L443:
2188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 5100              		.loc 1 2188 0
 5101 0064 039B     		ldr	r3, [sp, #12]
 5102 0066 43B1     		cbz	r3, .L460
2193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 5103              		.loc 1 2193 0
 5104 0068 039B     		ldr	r3, [sp, #12]
 5105 006a 013B     		subs	r3, r3, #1
 5106 006c 0393     		str	r3, [sp, #12]
2194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 5107              		.loc 1 2194 0
 5108 006e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 5109 0072 DBB2     		uxtb	r3, r3
 5110 0074 072B     		cmp	r3, #7
 5111 0076 F5D1     		bne	.L443
 5112 0078 03E0     		b	.L442
 5113              	.L460:
2190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 5114              		.loc 1 2190 0
 5115 007a 636D     		ldr	r3, [r4, #84]
 5116 007c 43F04003 		orr	r3, r3, #64
 5117 0080 6365     		str	r3, [r4, #84]
 5118              	.L442:
ARM GAS  /tmp/ccVXEgNb.s 			page 173


2196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5119              		.loc 1 2196 0
 5120 0082 029B     		ldr	r3, [sp, #8]
 5121 0084 0393     		str	r3, [sp, #12]
 5122              	.L440:
2202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5123              		.loc 1 2202 0
 5124 0086 A36C     		ldr	r3, [r4, #72]
 5125 0088 2BB1     		cbz	r3, .L444
2206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5126              		.loc 1 2206 0
 5127 008a 5268     		ldr	r2, [r2, #4]
 5128 008c 12F0020F 		tst	r2, #2
 5129 0090 1BD0     		beq	.L445
2208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5130              		.loc 1 2208 0
 5131 0092 314A     		ldr	r2, .L462+16
 5132 0094 5A63     		str	r2, [r3, #52]
 5133              	.L444:
2216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5134              		.loc 1 2216 0
 5135 0096 E36C     		ldr	r3, [r4, #76]
 5136 0098 33B1     		cbz	r3, .L446
2220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5137              		.loc 1 2220 0
 5138 009a 2268     		ldr	r2, [r4]
 5139 009c 5268     		ldr	r2, [r2, #4]
 5140 009e 12F0010F 		tst	r2, #1
 5141 00a2 15D0     		beq	.L447
2222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5142              		.loc 1 2222 0
 5143 00a4 2D4A     		ldr	r2, .L462+20
 5144 00a6 5A63     		str	r2, [r3, #52]
 5145              	.L446:
2231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5146              		.loc 1 2231 0
 5147 00a8 2368     		ldr	r3, [r4]
 5148 00aa 5B68     		ldr	r3, [r3, #4]
 5149 00ac 13F0020F 		tst	r3, #2
 5150 00b0 11D0     		beq	.L452
2234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5151              		.loc 1 2234 0
 5152 00b2 A06C     		ldr	r0, [r4, #72]
 5153              	.LVL395:
 5154 00b4 20B3     		cbz	r0, .L453
2237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 5155              		.loc 1 2237 0
 5156 00b6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5157              	.LVL396:
 5158 00ba 18B3     		cbz	r0, .L454
2239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5159              		.loc 1 2239 0
 5160 00bc A36C     		ldr	r3, [r4, #72]
 5161 00be 0022     		movs	r2, #0
 5162 00c0 5A63     		str	r2, [r3, #52]
2240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 5163              		.loc 1 2240 0
ARM GAS  /tmp/ccVXEgNb.s 			page 174


 5164 00c2 4023     		movs	r3, #64
 5165 00c4 6365     		str	r3, [r4, #84]
2157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5166              		.loc 1 2157 0
 5167 00c6 0125     		movs	r5, #1
 5168 00c8 06E0     		b	.L448
 5169              	.LVL397:
 5170              	.L445:
2212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5171              		.loc 1 2212 0
 5172 00ca 0022     		movs	r2, #0
 5173 00cc 5A63     		str	r2, [r3, #52]
 5174 00ce E2E7     		b	.L444
 5175              	.L447:
2226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5176              		.loc 1 2226 0
 5177 00d0 0022     		movs	r2, #0
 5178 00d2 5A63     		str	r2, [r3, #52]
 5179 00d4 E8E7     		b	.L446
 5180              	.L452:
2157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5181              		.loc 1 2157 0
 5182 00d6 0125     		movs	r5, #1
 5183              	.LVL398:
 5184              	.L448:
2249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5185              		.loc 1 2249 0
 5186 00d8 2368     		ldr	r3, [r4]
 5187 00da 5B68     		ldr	r3, [r3, #4]
 5188 00dc 13F0010F 		tst	r3, #1
 5189 00e0 09D0     		beq	.L449
2252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5190              		.loc 1 2252 0
 5191 00e2 E06C     		ldr	r0, [r4, #76]
 5192 00e4 38B1     		cbz	r0, .L449
2255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 5193              		.loc 1 2255 0
 5194 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5195              	.LVL399:
 5196 00ea 68B1     		cbz	r0, .L455
2257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5197              		.loc 1 2257 0
 5198 00ec E36C     		ldr	r3, [r4, #76]
 5199 00ee 0022     		movs	r2, #0
 5200 00f0 5A63     		str	r2, [r3, #52]
2258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 5201              		.loc 1 2258 0
 5202 00f2 4023     		movs	r3, #64
 5203 00f4 6365     		str	r3, [r4, #84]
 5204              	.LVL400:
 5205              	.L449:
2267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5206              		.loc 1 2267 0
 5207 00f6 4DB9     		cbnz	r5, .L461
2156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   abortcplt = 1U;
 5208              		.loc 1 2156 0
 5209 00f8 0025     		movs	r5, #0
ARM GAS  /tmp/ccVXEgNb.s 			page 175


 5210              	.LVL401:
 5211              	.L450:
2303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5212              		.loc 1 2303 0
 5213 00fa 2846     		mov	r0, r5
 5214 00fc 05B0     		add	sp, sp, #20
 5215              	.LCFI78:
 5216              		.cfi_remember_state
 5217              		.cfi_def_cfa_offset 12
 5218              		@ sp needed
 5219 00fe 30BD     		pop	{r4, r5, pc}
 5220              	.LVL402:
 5221              	.L453:
 5222              	.LCFI79:
 5223              		.cfi_restore_state
2157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5224              		.loc 1 2157 0
 5225 0100 0125     		movs	r5, #1
 5226 0102 E9E7     		b	.L448
 5227              	.L454:
2244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 5228              		.loc 1 2244 0
 5229 0104 0025     		movs	r5, #0
 5230 0106 E7E7     		b	.L448
 5231              	.LVL403:
 5232              	.L455:
2262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 5233              		.loc 1 2262 0
 5234 0108 0025     		movs	r5, #0
 5235              	.LVL404:
 5236 010a F4E7     		b	.L449
 5237              	.LVL405:
 5238              	.L461:
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5239              		.loc 1 2270 0
 5240 010c 0023     		movs	r3, #0
 5241 010e E387     		strh	r3, [r4, #62]	@ movhi
2271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5242              		.loc 1 2271 0
 5243 0110 E386     		strh	r3, [r4, #54]	@ movhi
2274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5244              		.loc 1 2274 0
 5245 0112 636D     		ldr	r3, [r4, #84]
 5246 0114 402B     		cmp	r3, #64
 5247 0116 14D0     		beq	.L457
2282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5248              		.loc 1 2282 0
 5249 0118 0025     		movs	r5, #0
 5250              	.LVL406:
 5251 011a 6565     		str	r5, [r4, #84]
 5252              	.L451:
 5253              	.LVL407:
 5254              	.LBB14:
2286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 5255              		.loc 1 2286 0
 5256 011c 0022     		movs	r2, #0
 5257 011e 0092     		str	r2, [sp]
ARM GAS  /tmp/ccVXEgNb.s 			page 176


 5258 0120 2368     		ldr	r3, [r4]
 5259 0122 D968     		ldr	r1, [r3, #12]
 5260 0124 0091     		str	r1, [sp]
 5261 0126 9968     		ldr	r1, [r3, #8]
 5262 0128 0091     		str	r1, [sp]
 5263 012a 0099     		ldr	r1, [sp]
 5264              	.LBE14:
 5265              	.LBB15:
2288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 5266              		.loc 1 2288 0
 5267 012c 0192     		str	r2, [sp, #4]
 5268 012e 9B68     		ldr	r3, [r3, #8]
 5269 0130 0193     		str	r3, [sp, #4]
 5270 0132 019B     		ldr	r3, [sp, #4]
 5271              	.LBE15:
2292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5272              		.loc 1 2292 0
 5273 0134 0123     		movs	r3, #1
 5274 0136 84F85130 		strb	r3, [r4, #81]
2298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5275              		.loc 1 2298 0
 5276 013a 2046     		mov	r0, r4
 5277 013c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5278              	.LVL408:
 5279 0140 DBE7     		b	.L450
 5280              	.LVL409:
 5281              	.L457:
2277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5282              		.loc 1 2277 0
 5283 0142 0125     		movs	r5, #1
 5284              	.LVL410:
 5285 0144 EAE7     		b	.L451
 5286              	.L463:
 5287 0146 00BF     		.align	2
 5288              	.L462:
 5289 0148 00000000 		.word	SystemCoreClock
 5290 014c F1197605 		.word	91625969
 5291 0150 00000000 		.word	SPI_AbortTx_ISR
 5292 0154 00000000 		.word	SPI_AbortRx_ISR
 5293 0158 00000000 		.word	SPI_DMATxAbortCallback
 5294 015c 00000000 		.word	SPI_DMARxAbortCallback
 5295              		.cfi_endproc
 5296              	.LFE86:
 5298              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5299              		.align	1
 5300              		.syntax unified
 5301              		.thumb
 5302              		.thumb_func
 5303              		.fpu softvfp
 5305              	SPI_DMARxAbortCallback:
 5306              	.LFB110:
3084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5307              		.loc 1 3084 0
 5308              		.cfi_startproc
 5309              		@ args = 0, pretend = 0, frame = 8
 5310              		@ frame_needed = 0, uses_anonymous_args = 0
 5311              	.LVL411:
ARM GAS  /tmp/ccVXEgNb.s 			page 177


 5312 0000 10B5     		push	{r4, lr}
 5313              	.LCFI80:
 5314              		.cfi_def_cfa_offset 8
 5315              		.cfi_offset 4, -8
 5316              		.cfi_offset 14, -4
 5317 0002 82B0     		sub	sp, sp, #8
 5318              	.LCFI81:
 5319              		.cfi_def_cfa_offset 16
3085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5320              		.loc 1 3085 0
 5321 0004 446A     		ldr	r4, [r0, #36]
 5322              	.LVL412:
3088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5323              		.loc 1 3088 0
 5324 0006 2268     		ldr	r2, [r4]
 5325 0008 1368     		ldr	r3, [r2]
 5326 000a 23F04003 		bic	r3, r3, #64
 5327 000e 1360     		str	r3, [r2]
3090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5328              		.loc 1 3090 0
 5329 0010 E36C     		ldr	r3, [r4, #76]
 5330 0012 0022     		movs	r2, #0
 5331 0014 5A63     		str	r2, [r3, #52]
3093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5332              		.loc 1 3093 0
 5333 0016 2268     		ldr	r2, [r4]
 5334 0018 5368     		ldr	r3, [r2, #4]
 5335 001a 23F00103 		bic	r3, r3, #1
 5336 001e 5360     		str	r3, [r2, #4]
3096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5337              		.loc 1 3096 0
 5338 0020 FFF7FEFF 		bl	HAL_GetTick
 5339              	.LVL413:
 5340 0024 0246     		mov	r2, r0
 5341 0026 6421     		movs	r1, #100
 5342 0028 2046     		mov	r0, r4
 5343 002a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5344              	.LVL414:
 5345 002e 18B1     		cbz	r0, .L465
3098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5346              		.loc 1 3098 0
 5347 0030 636D     		ldr	r3, [r4, #84]
 5348 0032 43F04003 		orr	r3, r3, #64
 5349 0036 6365     		str	r3, [r4, #84]
 5350              	.L465:
3102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5351              		.loc 1 3102 0
 5352 0038 A36C     		ldr	r3, [r4, #72]
 5353 003a 1BB1     		cbz	r3, .L466
3104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5354              		.loc 1 3104 0
 5355 003c 5B6B     		ldr	r3, [r3, #52]
 5356 003e 0BB1     		cbz	r3, .L466
 5357              	.L464:
3136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5358              		.loc 1 3136 0
 5359 0040 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccVXEgNb.s 			page 178


 5360              	.LCFI82:
 5361              		.cfi_remember_state
 5362              		.cfi_def_cfa_offset 8
 5363              		@ sp needed
 5364 0042 10BD     		pop	{r4, pc}
 5365              	.LVL415:
 5366              	.L466:
 5367              	.LCFI83:
 5368              		.cfi_restore_state
3111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5369              		.loc 1 3111 0
 5370 0044 0023     		movs	r3, #0
 5371 0046 E387     		strh	r3, [r4, #62]	@ movhi
3112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5372              		.loc 1 3112 0
 5373 0048 E386     		strh	r3, [r4, #54]	@ movhi
3115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5374              		.loc 1 3115 0
 5375 004a 636D     		ldr	r3, [r4, #84]
 5376 004c 402B     		cmp	r3, #64
 5377 004e 01D0     		beq	.L468
3118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5378              		.loc 1 3118 0
 5379 0050 0023     		movs	r3, #0
 5380 0052 6365     		str	r3, [r4, #84]
 5381              	.L468:
 5382              	.LBB16:
3122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 5383              		.loc 1 3122 0
 5384 0054 0022     		movs	r2, #0
 5385 0056 0092     		str	r2, [sp]
 5386 0058 2368     		ldr	r3, [r4]
 5387 005a D968     		ldr	r1, [r3, #12]
 5388 005c 0091     		str	r1, [sp]
 5389 005e 9968     		ldr	r1, [r3, #8]
 5390 0060 0091     		str	r1, [sp]
 5391 0062 0099     		ldr	r1, [sp]
 5392              	.LBE16:
 5393              	.LBB17:
3124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 5394              		.loc 1 3124 0
 5395 0064 0192     		str	r2, [sp, #4]
 5396 0066 9B68     		ldr	r3, [r3, #8]
 5397 0068 0193     		str	r3, [sp, #4]
 5398 006a 019B     		ldr	r3, [sp, #4]
 5399              	.LBE17:
3128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5400              		.loc 1 3128 0
 5401 006c 0123     		movs	r3, #1
 5402 006e 84F85130 		strb	r3, [r4, #81]
3134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5403              		.loc 1 3134 0
 5404 0072 2046     		mov	r0, r4
 5405 0074 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5406              	.LVL416:
 5407 0078 E2E7     		b	.L464
 5408              		.cfi_endproc
ARM GAS  /tmp/ccVXEgNb.s 			page 179


 5409              	.LFE110:
 5411              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5412              		.align	1
 5413              		.syntax unified
 5414              		.thumb
 5415              		.thumb_func
 5416              		.fpu softvfp
 5418              	SPI_DMATxAbortCallback:
 5419              	.LFB109:
3017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5420              		.loc 1 3017 0
 5421              		.cfi_startproc
 5422              		@ args = 0, pretend = 0, frame = 16
 5423              		@ frame_needed = 0, uses_anonymous_args = 0
 5424              	.LVL417:
 5425 0000 00B5     		push	{lr}
 5426              	.LCFI84:
 5427              		.cfi_def_cfa_offset 4
 5428              		.cfi_offset 14, -4
 5429 0002 85B0     		sub	sp, sp, #20
 5430              	.LCFI85:
 5431              		.cfi_def_cfa_offset 24
3018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
 5432              		.loc 1 3018 0
 5433 0004 406A     		ldr	r0, [r0, #36]
 5434              	.LVL418:
3021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5435              		.loc 1 3021 0
 5436 0006 836C     		ldr	r3, [r0, #72]
 5437 0008 0022     		movs	r2, #0
 5438 000a 5A63     		str	r2, [r3, #52]
3022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5439              		.loc 1 3022 0
 5440 000c 1F4B     		ldr	r3, .L479
 5441 000e 1B68     		ldr	r3, [r3]
 5442 0010 1F4A     		ldr	r2, .L479+4
 5443 0012 A2FB0323 		umull	r2, r3, r2, r3
 5444 0016 5B0A     		lsrs	r3, r3, #9
 5445 0018 6422     		movs	r2, #100
 5446 001a 02FB03F3 		mul	r3, r2, r3
 5447 001e 0393     		str	r3, [sp, #12]
3025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5448              		.loc 1 3025 0
 5449 0020 0268     		ldr	r2, [r0]
 5450 0022 5368     		ldr	r3, [r2, #4]
 5451 0024 23F00203 		bic	r3, r3, #2
 5452 0028 5360     		str	r3, [r2, #4]
 5453              	.L473:
3030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5454              		.loc 1 3030 0
 5455 002a 039B     		ldr	r3, [sp, #12]
 5456 002c 43B1     		cbz	r3, .L478
3035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 5457              		.loc 1 3035 0
 5458 002e 039B     		ldr	r3, [sp, #12]
 5459 0030 013B     		subs	r3, r3, #1
 5460 0032 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccVXEgNb.s 			page 180


3036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5461              		.loc 1 3036 0
 5462 0034 0368     		ldr	r3, [r0]
 5463 0036 9B68     		ldr	r3, [r3, #8]
 5464 0038 13F0020F 		tst	r3, #2
 5465 003c F5D0     		beq	.L473
 5466 003e 03E0     		b	.L472
 5467              	.L478:
3032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
 5468              		.loc 1 3032 0
 5469 0040 436D     		ldr	r3, [r0, #84]
 5470 0042 43F04003 		orr	r3, r3, #64
 5471 0046 4365     		str	r3, [r0, #84]
 5472              	.L472:
3039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5473              		.loc 1 3039 0
 5474 0048 C36C     		ldr	r3, [r0, #76]
 5475 004a 23B1     		cbz	r3, .L474
3041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5476              		.loc 1 3041 0
 5477 004c 5B6B     		ldr	r3, [r3, #52]
 5478 004e 13B1     		cbz	r3, .L474
 5479              	.LVL419:
 5480              	.L470:
3073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5481              		.loc 1 3073 0
 5482 0050 05B0     		add	sp, sp, #20
 5483              	.LCFI86:
 5484              		.cfi_remember_state
 5485              		.cfi_def_cfa_offset 4
 5486              		@ sp needed
 5487 0052 5DF804FB 		ldr	pc, [sp], #4
 5488              	.LVL420:
 5489              	.L474:
 5490              	.LCFI87:
 5491              		.cfi_restore_state
3048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5492              		.loc 1 3048 0
 5493 0056 0023     		movs	r3, #0
 5494 0058 C387     		strh	r3, [r0, #62]	@ movhi
3049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5495              		.loc 1 3049 0
 5496 005a C386     		strh	r3, [r0, #54]	@ movhi
3052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5497              		.loc 1 3052 0
 5498 005c 436D     		ldr	r3, [r0, #84]
 5499 005e 402B     		cmp	r3, #64
 5500 0060 01D0     		beq	.L476
3055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5501              		.loc 1 3055 0
 5502 0062 0023     		movs	r3, #0
 5503 0064 4365     		str	r3, [r0, #84]
 5504              	.L476:
 5505              	.LBB18:
3059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 5506              		.loc 1 3059 0
 5507 0066 0022     		movs	r2, #0
ARM GAS  /tmp/ccVXEgNb.s 			page 181


 5508 0068 0192     		str	r2, [sp, #4]
 5509 006a 0368     		ldr	r3, [r0]
 5510 006c D968     		ldr	r1, [r3, #12]
 5511 006e 0191     		str	r1, [sp, #4]
 5512 0070 9968     		ldr	r1, [r3, #8]
 5513 0072 0191     		str	r1, [sp, #4]
 5514 0074 0199     		ldr	r1, [sp, #4]
 5515              	.LBE18:
 5516              	.LBB19:
3061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 5517              		.loc 1 3061 0
 5518 0076 0292     		str	r2, [sp, #8]
 5519 0078 9B68     		ldr	r3, [r3, #8]
 5520 007a 0293     		str	r3, [sp, #8]
 5521 007c 029B     		ldr	r3, [sp, #8]
 5522              	.LBE19:
3065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5523              		.loc 1 3065 0
 5524 007e 0123     		movs	r3, #1
 5525 0080 80F85130 		strb	r3, [r0, #81]
3071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5526              		.loc 1 3071 0
 5527 0084 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5528              	.LVL421:
 5529 0088 E2E7     		b	.L470
 5530              	.L480:
 5531 008a 00BF     		.align	2
 5532              	.L479:
 5533 008c 00000000 		.word	SystemCoreClock
 5534 0090 F1197605 		.word	91625969
 5535              		.cfi_endproc
 5536              	.LFE109:
 5538              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 5539              		.align	1
 5540              		.global	HAL_SPI_GetState
 5541              		.syntax unified
 5542              		.thumb
 5543              		.thumb_func
 5544              		.fpu softvfp
 5546              	HAL_SPI_GetState:
 5547              	.LFB99:
2655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI handle state */
 5548              		.loc 1 2655 0
 5549              		.cfi_startproc
 5550              		@ args = 0, pretend = 0, frame = 0
 5551              		@ frame_needed = 0, uses_anonymous_args = 0
 5552              		@ link register save eliminated.
 5553              	.LVL422:
2657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 5554              		.loc 1 2657 0
 5555 0000 90F85100 		ldrb	r0, [r0, #81]	@ zero_extendqisi2
 5556              	.LVL423:
2658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5557              		.loc 1 2658 0
 5558 0004 7047     		bx	lr
 5559              		.cfi_endproc
 5560              	.LFE99:
ARM GAS  /tmp/ccVXEgNb.s 			page 182


 5562              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5563              		.align	1
 5564              		.global	HAL_SPI_GetError
 5565              		.syntax unified
 5566              		.thumb
 5567              		.thumb_func
 5568              		.fpu softvfp
 5570              	HAL_SPI_GetError:
 5571              	.LFB100:
2667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI ErrorCode */
 5572              		.loc 1 2667 0
 5573              		.cfi_startproc
 5574              		@ args = 0, pretend = 0, frame = 0
 5575              		@ frame_needed = 0, uses_anonymous_args = 0
 5576              		@ link register save eliminated.
 5577              	.LVL424:
2669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 5578              		.loc 1 2669 0
 5579 0000 406D     		ldr	r0, [r0, #84]
 5580              	.LVL425:
2670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5581              		.loc 1 2670 0
 5582 0002 7047     		bx	lr
 5583              		.cfi_endproc
 5584              	.LFE100:
 5586              		.text
 5587              	.Letext0:
 5588              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 5589              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 5590              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 5591              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 5592              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xe.h"
 5593              		.file 7 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 5594              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 5595              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 5596              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_spi.h"
 5597              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
ARM GAS  /tmp/ccVXEgNb.s 			page 183


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_hal_spi.c
     /tmp/ccVXEgNb.s:16     .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccVXEgNb.s:22     .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccVXEgNb.s:94     .text.SPI_AbortRx_ISR:0000000000000060 $d
     /tmp/ccVXEgNb.s:100    .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/ccVXEgNb.s:106    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/ccVXEgNb.s:132    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccVXEgNb.s:138    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccVXEgNb.s:280    .text.SPI_WaitFlagStateUntilTimeout:00000000000000cc $d
     /tmp/ccVXEgNb.s:285    .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/ccVXEgNb.s:291    .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/ccVXEgNb.s:372    .text.SPI_EndRxTxTransaction:0000000000000060 $d
     /tmp/ccVXEgNb.s:378    .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/ccVXEgNb.s:384    .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/ccVXEgNb.s:506    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccVXEgNb.s:513    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccVXEgNb.s:526    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccVXEgNb.s:533    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccVXEgNb.s:659    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccVXEgNb.s:666    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccVXEgNb.s:679    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccVXEgNb.s:686    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccVXEgNb.s:736    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccVXEgNb.s:743    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccVXEgNb.s:1064   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccVXEgNb.s:1071   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccVXEgNb.s:1515   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccVXEgNb.s:1522   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccVXEgNb.s:1803   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccVXEgNb.s:1810   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccVXEgNb.s:1942   .text.HAL_SPI_Transmit_IT:00000000000000a0 $d
     /tmp/ccVXEgNb.s:3798   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccVXEgNb.s:3747   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccVXEgNb.s:1948   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccVXEgNb.s:1955   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccVXEgNb.s:2135   .text.HAL_SPI_TransmitReceive_IT:00000000000000b8 $d
     /tmp/ccVXEgNb.s:4358   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccVXEgNb.s:4298   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccVXEgNb.s:4238   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccVXEgNb.s:4178   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccVXEgNb.s:2143   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccVXEgNb.s:2150   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccVXEgNb.s:2308   .text.HAL_SPI_Receive_IT:00000000000000bc $d
     /tmp/ccVXEgNb.s:3986   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccVXEgNb.s:3935   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccVXEgNb.s:2314   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccVXEgNb.s:2321   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccVXEgNb.s:2494   .text.HAL_SPI_Transmit_DMA:00000000000000dc $d
     /tmp/ccVXEgNb.s:3473   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccVXEgNb.s:4459   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccVXEgNb.s:4418   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccVXEgNb.s:2501   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccVXEgNb.s:2508   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccVXEgNb.s:2769   .text.HAL_SPI_TransmitReceive_DMA:0000000000000140 $d
     /tmp/ccVXEgNb.s:3573   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccVXEgNb.s:4664   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
ARM GAS  /tmp/ccVXEgNb.s 			page 184


     /tmp/ccVXEgNb.s:3523   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccVXEgNb.s:4566   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccVXEgNb.s:2778   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccVXEgNb.s:2785   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccVXEgNb.s:2973   .text.HAL_SPI_Receive_DMA:00000000000000f4 $d
     /tmp/ccVXEgNb.s:2980   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccVXEgNb.s:2987   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccVXEgNb.s:3212   .text.HAL_SPI_Abort:0000000000000134 $d
     /tmp/ccVXEgNb.s:3220   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccVXEgNb.s:3227   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccVXEgNb.s:3265   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccVXEgNb.s:3272   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccVXEgNb.s:3310   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccVXEgNb.s:3317   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccVXEgNb.s:3387   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccVXEgNb.s:3394   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccVXEgNb.s:3407   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccVXEgNb.s:3414   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccVXEgNb.s:3427   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccVXEgNb.s:3434   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccVXEgNb.s:3447   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccVXEgNb.s:3454   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccVXEgNb.s:3467   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccVXEgNb.s:3497   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccVXEgNb.s:3504   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccVXEgNb.s:3517   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccVXEgNb.s:3547   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccVXEgNb.s:3554   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccVXEgNb.s:3567   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccVXEgNb.s:3597   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccVXEgNb.s:3604   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccVXEgNb.s:3617   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccVXEgNb.s:3623   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccVXEgNb.s:3735   .text.SPI_CloseTx_ISR:0000000000000088 $d
     /tmp/ccVXEgNb.s:3741   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccVXEgNb.s:3792   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccVXEgNb.s:3843   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccVXEgNb.s:3849   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccVXEgNb.s:3929   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccVXEgNb.s:3980   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccVXEgNb.s:4031   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccVXEgNb.s:4037   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccVXEgNb.s:4166   .text.SPI_CloseRxTx_ISR:00000000000000a8 $d
     /tmp/ccVXEgNb.s:4172   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccVXEgNb.s:4232   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccVXEgNb.s:4292   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccVXEgNb.s:4352   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccVXEgNb.s:4412   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccVXEgNb.s:4453   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccVXEgNb.s:4560   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccVXEgNb.s:4658   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccVXEgNb.s:4742   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccVXEgNb.s:4749   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccVXEgNb.s:4958   .text.HAL_SPI_IRQHandler:0000000000000114 $d
     /tmp/ccVXEgNb.s:4969   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccVXEgNb.s:4963   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccVXEgNb.s:4997   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
ARM GAS  /tmp/ccVXEgNb.s 			page 185


     /tmp/ccVXEgNb.s:5004   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccVXEgNb.s:5017   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccVXEgNb.s:5024   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccVXEgNb.s:5289   .text.HAL_SPI_Abort_IT:0000000000000148 $d
     /tmp/ccVXEgNb.s:5418   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccVXEgNb.s:5305   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccVXEgNb.s:5299   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccVXEgNb.s:5412   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccVXEgNb.s:5533   .text.SPI_DMATxAbortCallback:000000000000008c $d
     /tmp/ccVXEgNb.s:5539   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccVXEgNb.s:5546   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccVXEgNb.s:5563   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccVXEgNb.s:5570   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
